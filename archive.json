{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2021-08-17T00:20:20.902293+00:00",
  "repo": "tlswg/dtls13-spec",
  "labels": [
    {
      "name": "bug",
      "description": null,
      "color": "ee0701"
    },
    {
      "name": "duplicate",
      "description": null,
      "color": "cccccc"
    },
    {
      "name": "enhancement",
      "description": null,
      "color": "84b6eb"
    },
    {
      "name": "help wanted",
      "description": null,
      "color": "128A0C"
    },
    {
      "name": "invalid",
      "description": null,
      "color": "e6e6e6"
    },
    {
      "name": "question",
      "description": null,
      "color": "cc317c"
    },
    {
      "name": "wontfix",
      "description": null,
      "color": "ffffff"
    },
    {
      "name": "pr-exists",
      "description": "",
      "color": "75ad22"
    },
    {
      "name": "landing-ready",
      "description": "",
      "color": "bfdadc"
    },
    {
      "name": "consensus-needed",
      "description": "",
      "color": "FBCA04"
    },
    {
      "name": "propose-close",
      "description": "",
      "color": "D4C5F9"
    },
    {
      "name": "review-needed",
      "description": "",
      "color": "0052CC"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "MDU6SXNzdWUyMzgyMzE4ODg=",
      "title": "Clarifying the use of message_seq vs. record sequence_number",
      "url": "https://github.com/tlswg/dtls13-spec/issues/2",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Copied from ekr's repo:\r\nBen wrote:\r\n\r\nOn page 20, second paragraph, please be clear that it is the\r\nmessage_seq vs. the record sequence_number that must match\r\nnext_receive_seq.\r\nThe text in the document says:\r\n\r\nDTLS implementations maintain (at least notionally) a\r\nnext_receive_seq counter. This counter is initially set to zero.\r\nWhen a message is received, if its sequence number matches\r\nnext_receive_seq, next_receive_seq is incremented and the message is\r\nprocessed. If the sequence number is less than next_receive_seq, the\r\nmessage MUST be discarded. If the sequence number is greater than\r\nnext_receive_seq, the implementation SHOULD queue the message but MAY\r\ndiscard it. (This is a simple space/bandwidth tradeoff).\r\n",
      "createdAt": "2017-06-23T19:23:28Z",
      "updatedAt": "2017-07-06T21:08:42Z",
      "closedAt": "2017-07-06T21:08:42Z",
      "comments": []
    },
    {
      "number": 3,
      "id": "MDU6SXNzdWUyMzgyMzIwMjA=",
      "title": "Additional text about reflection/amplification attacks ",
      "url": "https://github.com/tlswg/dtls13-spec/issues/3",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Copied from EKR's repo\r\n\r\nBen Kaduk wrote:\r\n\r\n\"We talk in a couple places about datagram protocols being \u201cvulnerable\u201d or \u201csusceptible\u201d to DoS attacks, which leads me to at least partially read that as meaning that the protocol\u2019s own service will be disrupted; as we know, this is not the whole story, as the reflection/amplification part can facilitate DoS attacks targeted at other services/networks. So perhaps some rewording is in order.\r\n\"",
      "createdAt": "2017-06-23T19:23:59Z",
      "updatedAt": "2017-10-27T21:34:47Z",
      "closedAt": "2017-10-27T21:34:47Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@kaduk I would welcome a PR here.",
          "createdAt": "2017-07-06T21:14:10Z",
          "updatedAt": "2017-07-06T21:14:10Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@kaduk did this,",
          "createdAt": "2017-10-27T21:34:47Z",
          "updatedAt": "2017-10-27T21:34:47Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "MDU6SXNzdWUyMzgyMzIxNDE=",
      "title": "Cookie collection attack text",
      "url": "https://github.com/tlswg/dtls13-spec/issues/4",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Copied from EKR's repo.\r\n\r\nMT writes:\r\n\r\n\"One potential attack on this scheme is for the attacker to collect a\r\nnumber of cookies from different addresses and then reuse them to\r\nattack the server. \"\r\n\r\nThis assumes that the attacker can read packets on those paths.\r\n\r\nThe mitigation doesn't mention including source address information in the cookie. It should, because that makes the cookies less mobile. An extra note that this requires additional complexity if DTLS operates over a multipath substrate - SCTP and ICE spring to mind - but those generally have their own address validation.\r\n\r\nThe mitigation for this jumps through a lot of hoops in dealing with time-limiting these. But then it recommends a timestamp, which is far more elegant.",
      "createdAt": "2017-06-23T19:24:38Z",
      "updatedAt": "2017-07-06T21:13:31Z",
      "closedAt": "2017-07-06T21:13:31Z",
      "comments": []
    },
    {
      "number": 5,
      "id": "MDU6SXNzdWUyMzgyMzIyODc=",
      "title": "Recommendations for what is in the cookie",
      "url": "https://github.com/tlswg/dtls13-spec/issues/5",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Copied from EKR's repo. https://github.com/ekr/dtls13-spec/issues/12\r\nMT writees:\r\n\r\n\"The server SHOULD use information received in the ClientHello to generate its cookie,such as version, random, ciphersuites. \"\r\n\r\nThis isn't really an interoperability requirement, or even a security one, since the handshake hash includes these. I think that this can be dropped.\r\n\r\n(Also in the same paragraph, the client can now double-check the cipher suite as well as the version.)\r\n",
      "createdAt": "2017-06-23T19:25:13Z",
      "updatedAt": "2017-07-06T21:10:46Z",
      "closedAt": "2017-07-06T21:10:46Z",
      "comments": []
    },
    {
      "number": 6,
      "id": "MDU6SXNzdWUyMzgyMzIzNDY=",
      "title": "Connection ID",
      "url": "https://github.com/tlswg/dtls13-spec/issues/6",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/ekr/dtls13-spec/issues/6",
      "createdAt": "2017-06-23T19:25:30Z",
      "updatedAt": "2017-10-27T21:34:35Z",
      "closedAt": "2017-10-27T21:34:35Z",
      "comments": [
        {
          "author": "fortuna",
          "authorAssociation": "NONE",
          "body": "That link is broken to me: https://github.com/ekr/dtls13-spec/issues/6\r\n@ekr: Your fork seems to have no Issues associated with it. Did you mean a different link?",
          "createdAt": "2017-06-26T13:34:41Z",
          "updatedAt": "2017-06-26T13:34:41Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Unfortunately, I messed up my local fork. Bottom line is we should have a connection id to allow bridging over NAT changes, but there are potential privacy issues",
          "createdAt": "2017-06-26T13:40:41Z",
          "updatedAt": "2017-06-26T13:40:41Z"
        },
        {
          "author": "nmav",
          "authorAssociation": "NONE",
          "body": "See our take on that on https://thomas-fossati.github.io/draft-tls-cid/\r\n",
          "createdAt": "2017-06-27T05:58:41Z",
          "updatedAt": "2017-06-27T05:58:41Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Per WG discussion, this will be done in a separate spec",
          "createdAt": "2017-10-27T21:34:35Z",
          "updatedAt": "2017-10-27T21:34:35Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "MDU6SXNzdWUyMzgyMzI0MjE=",
      "title": "Shrink the record size",
      "url": "https://github.com/tlswg/dtls13-spec/issues/7",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/ekr/dtls13-spec/issues/5",
      "createdAt": "2017-06-23T19:25:47Z",
      "updatedAt": "2017-10-29T21:09:27Z",
      "closedAt": "2017-10-29T21:09:27Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That link is broken.\r\n\r\nThe proposal, as I recall, is to reduce the record header to two octets:\r\n\r\nThe first octet has three bits set to 001 (these allow for DTLS to be distinguished from other protocols that it is [commonly multiplexed with](https://datatracker.ietf.org/doc/html/rfc7983#page-9)).  \r\n\r\nThe next two bits carry the lowest significant bits of the epoch.  Two bits are necessary to distinguish early data, client handshake, and application data during the handshake.  This might be reduced to a single epoch bit by using a full-sized record header for early data, doubling the sequence number space.\r\n\r\nThe remaining 11 bits are the lowest significant bits of the record sequence number.  This means that we could be tolerant of [reordering](https://tools.ietf.org/html/rfc6250#section-3.1.8) of 1024 packets.  Assuming 1k packets, this would mean hugely divergent path characteristics, or 1Mb of BDP.  The tweak above for early data would double this, which might be a good idea (it might also be a good idea for other reasons, such as the ability to recognize early data that arrives before a handshake).",
          "createdAt": "2017-09-11T00:14:03Z",
          "updatedAt": "2017-09-11T00:14:03Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "MDU6SXNzdWUyMzgyMzI0OTE=",
      "title": "Fix the ACK ",
      "url": "https://github.com/tlswg/dtls13-spec/issues/8",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/ekr/dtls13-spec/issues/2",
      "createdAt": "2017-06-23T19:26:09Z",
      "updatedAt": "2017-07-03T17:29:29Z",
      "closedAt": "2017-07-03T17:29:29Z",
      "comments": []
    },
    {
      "number": 13,
      "id": "MDU6SXNzdWUyNDg4OTEyNTc=",
      "title": "Version in the record header",
      "url": "https://github.com/tlswg/dtls13-spec/issues/13",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "If we keep version numbers in the record header, which seems unlikely, we should at least converge on using the same version as in TLS 1.3.  TLS 1.3 mandates 0x0301 (TLS version 1.0).  That version has no meaning in DTLS, so we use 0x0302 (TLS 1.1) in NSS, which just ends up being disgusting.",
      "createdAt": "2017-08-09T01:24:33Z",
      "updatedAt": "2017-10-29T21:09:27Z",
      "closedAt": "2017-10-29T21:09:27Z",
      "comments": []
    },
    {
      "number": 18,
      "id": "MDU6SXNzdWUyNjg4NTM2OTU=",
      "title": "Make sure to document how you handle the last ACK in a flight",
      "url": "https://github.com/tlswg/dtls13-spec/issues/18",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "(2MSL, etc.)",
      "createdAt": "2017-10-26T17:55:15Z",
      "updatedAt": "2017-10-27T21:34:17Z",
      "closedAt": "2017-10-27T21:34:17Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "This is done",
          "createdAt": "2017-10-27T21:34:17Z",
          "updatedAt": "2017-10-27T21:34:17Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "MDU6SXNzdWUyNjkzMTkxODA=",
      "title": "Generalize rules about acking the last flight",
      "url": "https://github.com/tlswg/dtls13-spec/issues/22",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "And extend 2MSL rule to key changes.",
      "createdAt": "2017-10-28T13:56:00Z",
      "updatedAt": "2017-10-29T21:49:04Z",
      "closedAt": "2017-10-29T21:49:04Z",
      "comments": []
    },
    {
      "number": 23,
      "id": "MDU6SXNzdWUyNjk0MzU1Njk=",
      "title": "Changelog",
      "url": "https://github.com/tlswg/dtls13-spec/issues/23",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-10-29T21:09:34Z",
      "updatedAt": "2017-10-29T21:48:49Z",
      "closedAt": "2017-10-29T21:48:49Z",
      "comments": []
    },
    {
      "number": 24,
      "id": "MDU6SXNzdWUyNzAxOTc4MjQ=",
      "title": "Update gh-pages",
      "url": "https://github.com/tlswg/dtls13-spec/issues/24",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The draft there is well out of date and it does more harm than good having it there.",
      "createdAt": "2017-11-01T05:26:33Z",
      "updatedAt": "2017-11-24T17:33:52Z",
      "closedAt": "2017-11-24T17:33:52Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed circle",
          "createdAt": "2017-11-24T17:33:52Z",
          "updatedAt": "2017-11-24T17:33:52Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "MDU6SXNzdWUyNzAxOTgxMDc=",
      "title": "Key update process",
      "url": "https://github.com/tlswg/dtls13-spec/issues/25",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Using the TLS process for KeyUpdate - as the current draft does - leads to a suboptimal set of choices in implementations.\r\n\r\nSending KeyUpdate followed immediately by a key change means that KeyUpdate isn't a reliable indicator of a key change at the receiver.  If the record containing the KeyUpdate is lost, then the receiver will be unable to decrypt anything sent after it unless it looks at the epoch and tries the new keys.  That suggests a design much closer to the one in QUIC, where the KEY_PHASE bit (here, the low bit of the epoch) is the only signal of a key update.\r\n\r\nThe receiver could buffer those records, but I don't see why it would choose head-of-line blocking and a potentially-large memory commitment over trialing the new epoch.\r\n\r\nI would prefer a different design, even if it diverges from the TLS design.  \r\n\r\n1. That could be the same design as QUIC uses, with the epoch bit signaling intent.  The cost there is that you need to use the bit as an acknowledgment of a key update, so you end up having to keep key updates in lock step, even if no update is needed.  If there are asymmetric sending patterns, this isn't ideal.\r\n\r\n2. Wait until the KeyUpdate is acknowledged before installing new keys.  When KeyUpdate is received, the receiver installs new keys, but retains old keys on a timer (the holddown timer would do).  The sender waits for the ACK and starts using new keys when it sees it.  The cost here is that switching keys can't be immediate and it requires hooks into the ACK handling logic, neither of which is ideal.",
      "createdAt": "2017-11-01T05:28:17Z",
      "updatedAt": "2017-11-24T16:43:07Z",
      "closedAt": "2017-11-24T16:43:07Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed",
          "createdAt": "2017-11-24T16:43:07Z",
          "updatedAt": "2017-11-24T16:43:07Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "MDU6SXNzdWUyNzAxOTg2Mzg=",
      "title": "Prohibit concurrent NST and KeyUpdate",
      "url": "https://github.com/tlswg/dtls13-spec/issues/26",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The logical way to implement these is to reuse the same retransmission and ACK logic and timers as you use during the handshake.  Having multiple concurrent exchanges in progress is possible in theory, and it might even be possible to retain the same timers by delaying responses to a transaction, but it would be easier to implement if you only had to worry about one at a time.",
      "createdAt": "2017-11-01T05:31:29Z",
      "updatedAt": "2017-11-24T17:00:58Z",
      "closedAt": "2017-11-24T17:00:58Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think that this is going to work:\r\n\r\n1. If the KeyUpdate and NST come from the same person, then they get to choose what to do and the other party ACKs the same way no matter what.\r\n\r\n2. If the client sends KeyUpdate.update_requested and the server sends NST, then there's now way to prohibit these, so you're kinda back in the soup, though we could make an exception that says you don't *have* to send KeyUpdate immediately if you have another transaction in process.",
          "createdAt": "2017-11-14T07:28:18Z",
          "updatedAt": "2017-11-14T07:28:18Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing. Feel free to re-open",
          "createdAt": "2017-11-24T17:00:58Z",
          "updatedAt": "2017-11-24T17:00:58Z"
        }
      ]
    },
    {
      "number": 29,
      "id": "MDU6SXNzdWUyNzYwMTg2OTE=",
      "title": "Disable compatibility mode hacks",
      "url": "https://github.com/tlswg/dtls13-spec/issues/29",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Right now, my NSS patch for compatibility mode in TLS also includes changes to DTLS.  Those changes include the ServerHello format changes, but NSS will ignore the session_id and never send a ChangeCipherSpec from either client or server.",
      "createdAt": "2017-11-22T10:35:58Z",
      "updatedAt": "2018-03-04T19:04:57Z",
      "closedAt": "2018-03-04T19:04:57Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note that we probably still want to ignore CCS in DTLS - DTLS discards things that it doesn't want to see - this is about generating CCS.",
          "createdAt": "2017-11-22T10:36:54Z",
          "updatedAt": "2017-11-22T10:36:54Z"
        }
      ]
    },
    {
      "number": 37,
      "id": "MDU6SXNzdWUyOTQ4MTk2OTU=",
      "title": "deal with RFC 6347 errata",
      "url": "https://github.com/tlswg/dtls13-spec/issues/37",
      "state": "CLOSED",
      "author": "seanturner",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "These may have all been addressed by wanted to make sure that we explicit addressed them:\r\nhttps://www.rfc-editor.org/errata_search.php?rfc=6347",
      "createdAt": "2018-02-06T16:16:54Z",
      "updatedAt": "2018-03-04T20:07:28Z",
      "closedAt": "2018-03-04T20:07:28Z",
      "comments": [
        {
          "author": "seanturner",
          "authorAssociation": "CONTRIBUTOR",
          "body": "[Errata ID: 3917](https://www.rfc-editor.org/errata_search.php?rfc=6347&eid=3917) has been addressed; extensions is included in CH.\r\n[Errata ID: 4103](https://www.rfc-editor.org/errata_search.php?rfc=6347&eid=4103) is OBE.\r\n[Errata ID: 5186](https://www.rfc-editor.org/errata_search.php?rfc=6347&eid=5186) is OBE.\r\n[Errata ID: 4104](https://www.rfc-editor.org/errata_search.php?rfc=6347&eid=4104) is still there.\r\n[Errata ID: 4104](https://www.rfc-editor.org/errata_search.php?rfc=6347&eid=4104) is OBE.\r\n[Errata ID: 4642](https://www.rfc-editor.org/errata_search.php?rfc=6347&eid=4642) is OBE.\r\n[Errata ID: 5026](https://www.rfc-editor.org/errata_search.php?rfc=6347&eid=5026) has been addressed.\r\n\r\n\r\n\r\n\r\n\r\n",
          "createdAt": "2018-02-06T16:54:31Z",
          "updatedAt": "2018-02-06T20:31:05Z"
        }
      ]
    },
    {
      "number": 38,
      "id": "MDU6SXNzdWUyOTQ4NDU4MjA=",
      "title": "reference to IETF guidance",
      "url": "https://github.com/tlswg/dtls13-spec/issues/38",
      "state": "CLOSED",
      "author": "seanturner",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "s4.1 includes the following:\r\n\r\n    (Note that the intention here is that implementers\r\n     use the current guidance from the IETF for MSL,\r\n     not that they attempt to interrogate the MSL that\r\n     the system TCP stack is using.)\r\n\r\nI think we need a reference to that IETF guidance.\r\n\r\n(being pedantic) Also, who is the \"they\" in this sentence is it implementers/implementations or the IETF?",
      "createdAt": "2018-02-06T17:27:37Z",
      "updatedAt": "2018-03-04T20:11:41Z",
      "closedAt": "2018-03-04T20:11:41Z",
      "comments": []
    },
    {
      "number": 39,
      "id": "MDU6SXNzdWUyOTQ4NDc0NDg=",
      "title": "s4.1 context",
      "url": "https://github.com/tlswg/dtls13-spec/issues/39",
      "state": "CLOSED",
      "author": "seanturner",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "RFC6437 s3.1 introduced the concept of a \"cryptographic context\", which makes sense when reading the following in s4.1:\r\n\r\n    Conversely, it is possible for records that are protected\r\n    by the newly negotiated context to be received prior to\r\n    the completion of a handshake.\r\n\r\nBut, in this version s3.1 is gone so \"context\" in s4.1 kind of jumps out of nowhere.  Does it make sense to replace \"context\" with \"server_handshake_traffic_secret value\"?",
      "createdAt": "2018-02-06T17:32:22Z",
      "updatedAt": "2018-03-04T20:09:48Z",
      "closedAt": "2018-03-04T20:09:48Z",
      "comments": []
    },
    {
      "number": 40,
      "id": "MDU6SXNzdWUyOTQ4NzI0MDA=",
      "title": "Add \"Appendix B.  Protocol Data Structures and Constant Values\"?",
      "url": "https://github.com/tlswg/dtls13-spec/issues/40",
      "state": "CLOSED",
      "author": "seanturner",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Seems like it makes sense to have an Appendix B similar to the one in TLS1.3 to collect all of the syntax.",
      "createdAt": "2018-02-06T18:51:30Z",
      "updatedAt": "2018-11-02T10:40:32Z",
      "closedAt": "2018-11-02T10:40:32Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Were you thinking the whole syntax? Or just the pieces that appear here.",
          "createdAt": "2018-03-04T19:22:35Z",
          "updatedAt": "2018-03-04T19:22:35Z"
        }
      ]
    },
    {
      "number": 46,
      "id": "MDU6SXNzdWUzMTA1NTA1NzE=",
      "title": "AD parameter for DTLS(Short)Ciphertext is unclear",
      "url": "https://github.com/tlswg/dtls13-spec/issues/46",
      "state": "CLOSED",
      "author": "davidben",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As I understand, the intent with the record header in AD business was so that DTLS 1.3 would inherit putting the entire header into the AD. However, TLS 1.3 defines the AD as:\r\n\r\n```\r\nand the additional data input is the record header. I.e.,\r\n\r\n      additional_data = TLSCiphertext.opaque_type ||\r\n                        TLSCiphertext.legacy_record_version ||\r\n                        TLSCiphertext.length\r\n```\r\nand DTLS 1.3 defines encrypted_record as:\r\n\r\n```\r\n   encrypted_record:  Identical to the encrypted_record field in a TLS\r\n      1.3 record.\r\n```\r\n\r\nIf one takes the first half of the clause, it works out, but \"record header\" isn't defined formally. If one takes the second half, it suggests that `DTLSCiphertext.epoch_and_sequence` is not in the AD and it's not clear how `DTLSShortCiphertext`'s AD is defined at all.\r\n\r\nProbably worth clarifying this.",
      "createdAt": "2018-04-02T17:37:48Z",
      "updatedAt": "2018-10-22T18:23:30Z",
      "closedAt": "2018-10-22T18:23:29Z",
      "comments": []
    },
    {
      "number": 50,
      "id": "MDU6SXNzdWUzMzk3MDA4NTU=",
      "title": "RequestConnectionId details",
      "url": "https://github.com/tlswg/dtls13-spec/issues/50",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This message appears to be lacking a codepoint.\r\n\r\nAlso, is this a Handshake message?  If so, does it enter the transcript (I assume not).",
      "createdAt": "2018-07-10T05:46:04Z",
      "updatedAt": "2018-11-05T07:10:52Z",
      "closedAt": "2018-11-05T07:10:52Z",
      "comments": []
    },
    {
      "number": 51,
      "id": "MDU6SXNzdWUzMzk3MDA5NDk=",
      "title": "Where does the connection ID go?",
      "url": "https://github.com/tlswg/dtls13-spec/issues/51",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "After the sequence number, I assume.  This detail disappeared from the other CID draft.",
      "createdAt": "2018-07-10T05:46:40Z",
      "updatedAt": "2018-10-22T18:16:10Z",
      "closedAt": "2018-10-22T18:16:10Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "This is now clear.",
          "createdAt": "2018-10-22T18:16:10Z",
          "updatedAt": "2018-10-22T18:16:10Z"
        }
      ]
    },
    {
      "number": 52,
      "id": "MDU6SXNzdWUzMzk3MDE4NzQ=",
      "title": "Connection ID liveness",
      "url": "https://github.com/tlswg/dtls13-spec/issues/52",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This mirrors an open topic of discussion in QUIC, and I assume that we'll want to take the lessons learned there and probably copy whatever the conclusion is.\r\n\r\nThe problem is that the current design has a server remember all connection IDs that it ever minted.  Over time, that might be infeasible for a server.  It might be good to limit the number that are in use.",
      "createdAt": "2018-07-10T05:50:17Z",
      "updatedAt": "2018-11-05T07:10:52Z",
      "closedAt": "2018-11-05T07:10:52Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "This isn't correct. In DTLS, as opposed to QUIC, new connection IDs may be marked as ```cid_immediate```, in which case the peer is required to stop using any old CIDs immediately. The document could probably use some more text here, but the basic idea is that once a cid_immediate message has been ACKed, you know that any old CIDs are no longer valid.\r\n\r\n\r\n\r\n",
          "createdAt": "2018-11-02T07:56:41Z",
          "updatedAt": "2018-11-02T07:56:41Z"
        }
      ]
    },
    {
      "number": 53,
      "id": "MDU6SXNzdWUzMzk3MDI0NzI=",
      "title": "Linkability across new points of network attachment",
      "url": "https://github.com/tlswg/dtls13-spec/issues/53",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A client that migrates to a new point of network attachment probably wants to use a new connection ID.  But that attempt will result in linkability if the server doesn't also change.  How do we manage that?  One approach is to use the cid_immediate instruction.  But clients need to be careful to include that instruction in every packet they send lest the server miss it.\r\n\r\nQUIC takes a different approach, which is to number all connection IDs combined with a ratchet.  If connection ID N is used by one endpoint, its peer has to use connection ID N or greater on that same network path.",
      "createdAt": "2018-07-10T05:53:34Z",
      "updatedAt": "2018-11-05T07:28:41Z",
      "closedAt": "2018-11-05T07:10:52Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The QUIC DT on this subject has come up with a different design:\r\n\r\n1. you use a new connection ID when you observe a path change\r\n2. endpoints need to provide their peers enough connection IDs that they shouldn't run out\r\n3. when an endpoint stops using a connection ID, there is a new \"retire connection ID\" message that is used to signal that it is no longer needed\r\n4. endpoints that receive this \"retire connection ID\" are expected to replenish the supply of connection IDs at their peer",
          "createdAt": "2018-08-31T06:06:23Z",
          "updatedAt": "2018-08-31T06:06:23Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Point (1) is sort of implicit in the text, and I agree we should add it.\r\n\r\nPoints (2)-(4) are about ensuring that the other side has enough CIDs. In QUIC, this is the server's job and there's no real way for the client to say that it doesn't have enough CIDs or tell the server how many. It can just say that it is done using some set of CIDs and this tells the server to send more, but the server has no idea how many. By contrast, the DTLS design is for the client to tell the server when it wants more CIDs and the server gets to retire them. ISTM that this is a more flexible design in that the server can change CIDs whenever it wants (e.g., for rekeying of the CID encryption key).\r\n\r\nIIRC much of the motivation for the design with QUIC was not to have to interlock with the ACK, and in this respect the situation here is the same as with the KeyUpdate, which is that the QUIC design has the advantage that it doesn't need to interlock with the ACK to know when things have change. But that doesn't apply here for the same reason as with #63.\r\n\r\nSo I think my proposed resolution is just to add that you should change CIDs whenever you change paths and should request enough CIDs that you have a hot spare. I could imagine a way for the server to say what specific keys it wants to invalidate, but I'm not sure that's necessary. I do think we should enhance RequestConnectionId to have a count.\r\n\r\n\r\n\r\n\r\n\r\n",
          "createdAt": "2018-11-02T08:14:58Z",
          "updatedAt": "2018-11-02T08:14:58Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@ekinnear",
          "createdAt": "2018-11-03T01:55:12Z",
          "updatedAt": "2018-11-03T01:55:12Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@erickinnear\r\n",
          "createdAt": "2018-11-03T01:55:23Z",
          "updatedAt": "2018-11-03T01:55:23Z"
        },
        {
          "author": "erickinnear",
          "authorAssociation": "NONE",
          "body": "(Just noting my earlier thoughts here so they're saved somewhere) \r\n\r\nOverall, only concern is around the rate at which you can send additional connection IDs to the peer vs. the rate at which you retire them. My understanding is that they are all retired at once, but need to be provided independently.\r\nIt seems like there could be situations, especially for a sender that needs to migrate rapidly (say away from and then back to some specific interface), where this leaves the sender without a CID to switch to. \r\nAllowing multiple CIDs in the messages as in #65 looks like it generally resolves this. \r\n\r\nAlso noting that infinite looping in response to peer changes is covered by the sequence number. ",
          "createdAt": "2018-11-05T07:28:41Z",
          "updatedAt": "2018-11-05T07:28:41Z"
        }
      ]
    },
    {
      "number": 54,
      "id": "MDU6SXNzdWUzNDAwNjI0NDc=",
      "title": "Identifying versions",
      "url": "https://github.com/tlswg/dtls13-spec/issues/54",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This might not be an appropriate question for here, so feel free to close.\r\n\r\nThe use of draft versions in stacks will switch to 0x0304 shortly.  But DTLS is still a little way from done.  Are we going to continue to recommend the use of 0x7f00+draft for DTLS?",
      "createdAt": "2018-07-11T01:45:32Z",
      "updatedAt": "2018-08-31T06:03:47Z",
      "closedAt": "2018-08-31T06:03:47Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think that this has been answered for me.  We're going for 0x7f00+draft, currently 0x7f1c (draft -28).",
          "createdAt": "2018-08-31T06:03:47Z",
          "updatedAt": "2018-08-31T06:03:47Z"
        }
      ]
    },
    {
      "number": 55,
      "id": "MDU6SXNzdWUzNTM4MDUyMTQ=",
      "title": "New header format: explicit implications on muxing",
      "url": "https://github.com/tlswg/dtls13-spec/issues/55",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The document should contain text that describes the implications on muxing ([RFC5764](https://tools.ietf.org/html/rfc5764#section-5.1.2)) of the new header format.\r\n\r\nSpecifically, the implicit ContentType allocation [32, 63] implied by the fixed `001` prefix should end up in the IANA section.\r\n",
      "createdAt": "2018-08-24T14:24:42Z",
      "updatedAt": "2018-11-04T05:33:57Z",
      "closedAt": "2018-11-04T05:33:57Z",
      "comments": []
    },
    {
      "number": 56,
      "id": "MDU6SXNzdWUzNTM4MDU1MDk=",
      "title": "New header format: proposal to reduce the amount of code points implicitly consumed",
      "url": "https://github.com/tlswg/dtls13-spec/issues/56",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Instead of `001`, make the fixed prefix `0011` by picking one of the three reserved bits:\r\n```\r\n +-+-+-+-+-+-+-+-+\r\n |0|0|1|1|C|L|X|X|\r\n +-+-+-+-+-+-+-+-+\r\n |Ep.| 14 bit    |   Legend:\r\n +-+-+           |\r\n |Sequence Number|   Ep. - Epoch\r\n +-+-+-+-+-+-+-+-+   C   - CID present\r\n | Connection ID |   L   - Length present\r\n | (if any,      |   X   - Reserved\r\n /  length as    /\r\n |  negotiated)  |\r\n +-+-+-+-+-+-+-+-+\r\n | 16 bit Length |\r\n | (if present)  |\r\n +-+-+-+-+-+-+-+-+\r\n```\r\nThis way the implicit Content Type allocation is halved to [48, 63] and we get back 16 codepoints.\r\n",
      "createdAt": "2018-08-24T14:25:29Z",
      "updatedAt": "2018-10-22T18:35:05Z",
      "closedAt": "2018-10-22T18:35:04Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think that we can do better.  I've just opened #58.  That uses all the bits in that first octet, which would seem to be a regression, but there are two ways in which we could get another bit back.\r\n\r\nThe first option is to drop the S-bit I propose and have sequence numbers be 16 bits always.  I'd be sad that we lost the small optimization, but that isn't the end of the world.\r\n\r\nPerhaps a better option is to drop the second epoch bit.  This seems like a bad idea because you potentially have multiple epochs inbound to a server during a 0-RTT handshake.  In that case, you have to distinguish between ClientHello (001 or 0011 would work for that), 0-RTT (epoch 1), Handshake (epoch 2), and the ultimate Application Data (epoch 3).  If you only have one bit of epoch, then 1 and 3 are indistinguishable.\r\n\r\nHowever, if you look at the way we handle 0-RTT in stacks, it might be OK to allow those late-arriving 0-RTT records to be dropped.  For instance, NSS processes 0-RTT and handshake linearly.  We don't read the Finished until we have the EndOfEarlyData, and as soon as we process the EOED, we stop accepting new 0-RTT.  Part of the reason for this is that once we report handshake success, we don't provide any other signal to an application about the data it receives.  So, for NSS, dropping 0-RTT when 1-RTT is available wouldn't change anything for us.\r\n\r\nThe final option is to not worry about this.  The codepoints are there to use.  The number of public bits we have is small, and we don't need to signal content type in the clear any more.  As I suggested in discussing tlswg/dtls-conn-id#11, perhaps the right answer is to backport the TLS 1.3 record format to DTLS 1.2 and use only one codepoint.",
          "createdAt": "2018-08-31T06:02:34Z",
          "updatedAt": "2018-08-31T06:02:34Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "With regards to 1.  Losing the ability to signal 8- v 16-bits sequence would be a bit of a shame, especially in constrained networks (@hannestschofenig, opinions?), but I agree with you it's not the end of the world and I'd be more than happy to immolate it to get one of the reserved bits back.  In fact, one bit is sufficient to build a whole [header extension machinery](https://www.ietf.org/archive/id/draft-fossati-tls-ext-header-01.txt) if we'd need to -- for spin bit, VEC, etc. I value that much more than a tiny optimisation.\r\n\r\nWRT 2. Your argument in favour of dropping the second epoch bit is pretty convincing, so personally I'd be OK with one-bit epoch.\r\n \r\nSo, I guess we could have something like:\r\n```\r\n+-+-+-+-+-+-+-+-+\r\n|0|0|1|1|C|L|E|X|\r\n+-+-+-+-+-+-+-+-+\r\nC - CID present\r\nL - Length present\r\nE - Epoch\r\nX - reserved\r\n```\r\nand 16 bits sequence, always?",
          "createdAt": "2018-09-06T17:41:20Z",
          "updatedAt": "2018-09-06T19:55:24Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "You haven't made a convincing case for an extension mechanism to my mind.  And given the choice between having two sequence number lengths and extensions, I'd take the former every time.",
          "createdAt": "2018-09-09T23:46:08Z",
          "updatedAt": "2018-09-09T23:46:08Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The appalling amount of cycles we have been spending on devising how to do CID signalling in 1.2 is a very good argument in favour of having some kind of extension built in in 1.3.  Next time we realise we missed something we won't have to struggle like Houdini.  To me this is far more important than a small optimisation of undetermined benefit.",
          "createdAt": "2018-09-10T08:08:17Z",
          "updatedAt": "2018-09-10T08:08:17Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think this is the right answer. Given that as soon as we can recognize the CID, we can make extensions without changing the header here, I agree with MTabout filling the bits.",
          "createdAt": "2018-10-22T18:35:04Z",
          "updatedAt": "2018-10-22T18:35:04Z"
        }
      ]
    },
    {
      "number": 63,
      "id": "MDU6SXNzdWUzNzI3MTk1MzE=",
      "title": "Review key update design",
      "url": "https://github.com/tlswg/dtls13-spec/issues/63",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "In meetings with folks at the last QUIC interim, we talked at some length about improving the key update design for QUIC.  Ultimately, we concluded that the existing design was good and that it might be in some ways superior to that in DTLS.  Consider whether that is something that we want to use here.",
      "createdAt": "2018-10-22T22:02:22Z",
      "updatedAt": "2018-11-04T05:27:30Z",
      "closedAt": "2018-11-04T05:27:30Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I wish I had taken notes during that meeting, but here's what recall.\r\n\r\nThe QUIC design has the following advantages:\r\n- You can start using new keys right away\r\n- No need to have the key change machinery and the ACK machinery interact.\r\n\r\nThe DTLS design has the following advantages:\r\n- No need to do trial decryption or trial key creation (and with DTLS 1.3 as opposed to TLS 1.3, you never need to do trial decryption otherwise)\r\n- The same predictable guarantees as other DTLS key changes\r\n\r\nThe ACK/key change interaction isn't really a big deal with DTLS because the ACK machinery and the handshake are much more tightly interlocked than with QUIC. So while in general, I think it's good for QUIC and DTLS to have similar mechanisms, in this case I think the current design is the right one for DTLS.\r\n\r\n",
          "createdAt": "2018-11-02T07:53:51Z",
          "updatedAt": "2018-11-02T07:53:51Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson and I discussed this and agreed to close it.",
          "createdAt": "2018-11-04T05:27:30Z",
          "updatedAt": "2018-11-04T05:27:30Z"
        }
      ]
    },
    {
      "number": 67,
      "id": "MDU6SXNzdWUzNzk3NDc1Nzk=",
      "title": "The definition and examples of the DTLS ciphertext header does not seem to match",
      "url": "https://github.com/tlswg/dtls13-spec/issues/67",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The definition and examples of the DTLS ciphertext header does not seem to match\r\n\r\nFigure 3:\r\n\r\n|0|0|1|C|S|L|E E|\r\n\r\nvs. \r\n\r\nFigure 4:\r\n\r\n|0|0|1|C|1|E|E|1|\r\n|0|0|1|0|0|E|E|0|",
      "createdAt": "2018-11-12T12:06:46Z",
      "updatedAt": "2019-03-11T22:38:24Z",
      "closedAt": "2019-03-11T22:38:24Z",
      "comments": []
    },
    {
      "number": 70,
      "id": "MDU6SXNzdWUzODIxMDE4NDc=",
      "title": "Old epochs",
      "url": "https://github.com/tlswg/dtls13-spec/issues/70",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> Until the handshake has completed, implementations MUST accept packets from the old epoch.\r\n\r\nI think that this is a vestige of renegotiation and can be removed.  But we might want to say something more helpful about accepting 0-RTT and Handshake at the same time.",
      "createdAt": "2018-11-19T08:19:23Z",
      "updatedAt": "2019-07-07T23:02:45Z",
      "closedAt": "2019-07-07T23:02:45Z",
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we should delete this sentence because it is redundant. We have already text in the same section saying the following:\r\n\"\r\nBecause DTLS records could be reordered, a record from epoch\r\n1 may be received after epoch 2 has begun.  In general,\r\nimplementations SHOULD discard packets from earlier epochs, but if\r\npacket loss causes noticeable problems implementations MAY choose to\r\nretain keying material from previous epochs for up to the default MSL\r\nspecified for TCP to allow for packet reordering.\r\n\"\r\n\r\n@Martin: If you think there is someone else that should be said, we are happy to add it. \r\n\r\nHere is the PR: \r\nhttps://github.com/tlswg/dtls13-spec/pull/95",
          "createdAt": "2019-07-07T10:56:05Z",
          "updatedAt": "2019-07-07T10:56:05Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed.",
          "createdAt": "2019-07-07T23:02:45Z",
          "updatedAt": "2019-07-07T23:02:45Z"
        }
      ]
    },
    {
      "number": 71,
      "id": "MDU6SXNzdWUzODIxMDIzNTI=",
      "title": "Remove prohibition on sending before handshake completion",
      "url": "https://github.com/tlswg/dtls13-spec/issues/71",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> In particular, it is still impermissible to send data prior to completion of the first handshake.\r\n\r\nAside from the \"first\" being a vestige of renegotiation, I think that this is wrong.  Clients send 0-RTT before the handshake completes from their perspective; servers send 0.5-RTT data before they believe the handshake is complete.  This needs more nuance.",
      "createdAt": "2018-11-19T08:21:14Z",
      "updatedAt": "2019-07-07T22:53:56Z",
      "closedAt": "2019-07-07T22:53:56Z",
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "To me this sentence appears wrong and should be deleted. Here is the PR: \r\nhttps://github.com/tlswg/dtls13-spec/pull/94\r\n",
          "createdAt": "2019-07-07T10:51:29Z",
          "updatedAt": "2019-07-07T10:51:29Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed.",
          "createdAt": "2019-07-07T22:53:56Z",
          "updatedAt": "2019-07-07T22:53:56Z"
        }
      ]
    },
    {
      "number": 72,
      "id": "MDU6SXNzdWUzODIxMDQ1NzA=",
      "title": "Key separation from TLS",
      "url": "https://github.com/tlswg/dtls13-spec/issues/72",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Consider whether the key schedule should be separated from TLS.  And, if so, how to do that.\r\n\r\nQUIC is debating whether or not to change the label prefix (from \"tls13 \" to \"quic \", for instance), or whether it is better to change only the labels for calculating the key, iv, and sn keys.",
      "createdAt": "2018-11-19T08:28:51Z",
      "updatedAt": "2019-11-08T14:32:46Z",
      "closedAt": "2019-11-08T14:32:46Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think this is needed, but I'm happy to bring it up in Prague.",
          "createdAt": "2019-03-11T22:28:59Z",
          "updatedAt": "2019-03-11T22:28:59Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree.  I don't think that it is needed, but we might still discuss it.",
          "createdAt": "2019-03-11T23:00:02Z",
          "updatedAt": "2019-03-11T23:00:02Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "NONE",
          "body": "Why wouldn't this be needed? Do you mean it should be valid for a key derived for one protocol to be valid in another? Or do you mean there are other mechanisms that prevent this from happening?",
          "createdAt": "2019-03-12T12:29:59Z",
          "updatedAt": "2019-03-12T12:29:59Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Well, the handshake transcript is different because the TLS handshake headers are different from DTLS",
          "createdAt": "2019-03-25T08:10:38Z",
          "updatedAt": "2019-03-25T08:10:38Z"
        },
        {
          "author": "beurdouche",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Well, doesn't that happen only after the first message is sent/received. My intuition is that it would be good practice to make sure the labels are different so that you can't use the binder_key across protocols. If I remember correctly, the very first Derive secret is over a PSK and an empty transcript isn't it ? ",
          "createdAt": "2019-03-25T08:19:39Z",
          "updatedAt": "2019-03-25T08:19:39Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Was there any conclusion/discussion on this issue? ",
          "createdAt": "2019-07-07T10:46:08Z",
          "updatedAt": "2019-07-07T10:46:08Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@beurdouche: isn't the binder computation over the prefix of the first handshake message, including the header?",
          "createdAt": "2019-07-07T23:04:41Z",
          "updatedAt": "2019-07-07T23:04:41Z"
        },
        {
          "author": "beurdouche",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ekr Well, I may misunderstand what is happening but when I look at the Key Schedule, I see that the `binder_key` is computed as a `Derive-Secret` over an empty Transcript-Hash, which means that only the PSK contribute to that secret. Am I wrong ?",
          "createdAt": "2019-07-10T11:44:02Z",
          "updatedAt": "2019-07-10T11:44:02Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "It is, but it's then used to compute the binder over the CH including the handshake header, no?",
          "createdAt": "2019-07-10T20:46:24Z",
          "updatedAt": "2019-07-10T20:46:24Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Consensus in Montreal was to be conservative. Probably change \"tls13\" -> \"dtls13\", space permititng.",
          "createdAt": "2019-07-25T14:08:48Z",
          "updatedAt": "2019-07-25T14:08:48Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "\"dtls3\" is an option if we find we're right up against the limit.  But note that QUIC is adding 5 bytes to this string for its use.",
          "createdAt": "2019-07-25T15:32:06Z",
          "updatedAt": "2019-07-25T15:32:06Z"
        },
        {
          "author": "seanturner",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ekr I think this one can safely be closed out.",
          "createdAt": "2019-11-04T15:20:38Z",
          "updatedAt": "2019-11-04T15:20:38Z"
        }
      ]
    },
    {
      "number": 73,
      "id": "MDU6SXNzdWUzODIxMDg2MTg=",
      "title": "Spoofed or ignored PTB messages",
      "url": "https://github.com/tlswg/dtls13-spec/issues/73",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This probably isn't dire, but it might be worth adding a note to the PMTU section saying that DTLS doesn't bother to defend against spoofed PTB messages. That is consistent with the posture that it takes with respect to just getting the handshake done. It might be wise to recommend ignoring anything less than 576/1280 though.",
      "createdAt": "2018-11-19T08:41:17Z",
      "updatedAt": "2019-03-11T22:45:17Z",
      "closedAt": "2019-03-11T22:45:17Z",
      "comments": []
    },
    {
      "number": 74,
      "id": "MDU6SXNzdWUzODIxMTAwMzE=",
      "title": "Sliding window size",
      "url": "https://github.com/tlswg/dtls13-spec/issues/74",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> A minimum window size of 32 MUST be supported, but a window size of 64 is preferred and SHOULD be employed as the default.\r\n\r\nThe MUST is not consistent with earlier statements about the sliding window being optional.\r\n\r\nAlso, this is very small.  NSS uses a 1024 message window, which takes a tiny amount of memory (128 bytes).  The goal here is to make the window large enough to account for reordering, which will depend on rate. I think that it would be enough to say that and leave the exact number to implementations.",
      "createdAt": "2018-11-19T08:45:45Z",
      "updatedAt": "2019-03-11T22:42:42Z",
      "closedAt": "2019-03-11T22:42:42Z",
      "comments": []
    },
    {
      "number": 75,
      "id": "MDU6SXNzdWUzODIxMTA3ODY=",
      "title": "What about TCP cookies?",
      "url": "https://github.com/tlswg/dtls13-spec/issues/75",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> DTLS borrows the stateless cookie technique used by Photuris {{RFC2522}} and IKE {{RFC7296}}.\r\n\r\nWhat about TCP?",
      "createdAt": "2018-11-19T08:48:09Z",
      "updatedAt": "2019-03-11T22:36:33Z",
      "closedAt": "2019-03-11T22:36:33Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "What about it? SYN cookies are less like DTLS cookies, and I don't think we really need to list every cookie exchange protoocl",
          "createdAt": "2018-11-19T22:58:02Z",
          "updatedAt": "2018-11-19T22:58:02Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "I actually think that we don't even list Photuris and IKE anymore when we talk about cookies. I was probably useful in the first version of DTLS when the concept was new and what the context of Photuris and IKE was helpful. Today, nobody knows anymore what Photuris and maybe even IKE is. It probably it confuses the reader more than it helps",
          "createdAt": "2018-12-18T13:58:39Z",
          "updatedAt": "2018-12-18T13:58:39Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I think this is fine as-is",
          "createdAt": "2019-03-11T22:36:33Z",
          "updatedAt": "2019-03-11T22:36:33Z"
        }
      ]
    },
    {
      "number": 76,
      "id": "MDU6SXNzdWUzODIxMTE1MDU=",
      "title": "What if ClientHello.cookie is not empty?",
      "url": "https://github.com/tlswg/dtls13-spec/issues/76",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Should the server reject the ClientHello if it appears as though the client is responding to a HelloVerifyRequest?  What if it also contains a cookie extension?",
      "createdAt": "2018-11-19T08:50:18Z",
      "updatedAt": "2019-07-07T23:02:32Z",
      "closedAt": "2019-07-07T23:02:32Z",
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think the server should reject a ClientHello if it thinks the Client should provide a cookie previously sent with the HelloVerifyRequest. This would require the server to keep state and to implement more complex logic in the server-side. \r\n\r\nIf the ClientHello contains a cookie in the ClientHello.legacy_cookie field in the DTLS 1.3 field then IMHO an \"illegal_parameter\" alert has to be sent. I created a PR to add a note about this:\r\nhttps://github.com/tlswg/dtls13-spec/pull/93\r\n\r\nThere is, however, the question why whether we should omit some of the legacy fields for use with DTLS 1.3 (not in the ClientHello because it would be needed for backwards compatibility) but for the ServerHello/HelloRetryRequest. ",
          "createdAt": "2019-07-07T10:44:24Z",
          "updatedAt": "2019-07-07T10:44:24Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed",
          "createdAt": "2019-07-07T23:02:32Z",
          "updatedAt": "2019-07-07T23:02:32Z"
        }
      ]
    },
    {
      "number": 77,
      "id": "MDU6SXNzdWUzODIxMTMyNDA=",
      "title": "Who restarts the connection after receiving a bad cookie?",
      "url": "https://github.com/tlswg/dtls13-spec/issues/77",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> If a server receives a ClientHello with an invalid cookie, it MUST NOT respond with a HelloRetryRequest. Restarting the handshake from scratch, without a cookie, allows the client to recover from a situation where it obtained a cookie that cannot be verified by the server.\r\n\r\nI don't understand what this is trying to say.  I think that it says that the client, having received a bad cookie will send its second ClientHello off into the void, only to have the handshake time out.  Then, the client is expected to restart.\r\n\r\nThis is probably right.  The bad cookie indicates that something is badly wrong.  Anything the server might send that would fix this wouldn't be authenticated and so might be exploited by an attack as a denial of service on the connection.  However, I'm not sure if any client actually implements this restart.\r\n",
      "createdAt": "2018-11-19T08:55:38Z",
      "updatedAt": "2019-07-08T20:39:46Z",
      "closedAt": "2019-07-08T20:39:46Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Probably not, but I think this is just editorial. If you had some client-server type app then you might expect a retry (like Web clients do). Anyway, we shouldn't change the spec.",
          "createdAt": "2019-03-25T09:29:28Z",
          "updatedAt": "2019-03-25T09:29:28Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "The text in DTLS 1.2 was a bit different, namely \r\n\" \r\n   If a server receives a ClientHello with an invalid cookie, it SHOULD\r\n   treat it the same as a ClientHello with no cookie.  This avoids\r\n   race/deadlock conditions if the client somehow gets a bad cookie\r\n   (e.g., because the server changes its cookie signing key).\r\n\"\r\n\r\nI believe the DTLS 1.2 text was actually quite good. I suggest to re-use the DTLS 1.2 text again. \r\n\r\nThe problem with the current text is that the Client will have to find out about the failed request via a timeout. While not common, it is not ideal either. If the current text does, however, prevent certain problems I am happy to leave it as is. \r\n\r\nI noticed that we incorrectly reference text from Section 4.1.4. of the TLS 1.3 RFC. \r\n\r\nIn any case, I prepared a PR just in case: \r\nhttps://github.com/tlswg/dtls13-spec/pull/91\r\n\r\nI also created a second PR to deal with the inconsistency with the TLS 1.3 spec, which I believe has to be addressed: \r\nhttps://github.com/tlswg/dtls13-spec/pull/92\r\n\r\n",
          "createdAt": "2019-07-07T10:02:00Z",
          "updatedAt": "2019-07-07T10:19:25Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't believe that the bad cookie is a situation that needs to be handled in a different way than is described.  Any server doing this uses a key identifier in its cookie.  So, like ekr, I don't think that the design needs to be changed.\r\n\r\nI would prefer to say that the ClientHello with a bad cookie is simply discarded (as Internet background noise, if you will).  If the intent of the text (prior to #91 as proposed) is to say that it's now the client's problem to fix, I agree with that.  The question was about what the text meant, so an editorial fix would be fine.  I would go so far as to say:\r\n\r\n> If a server receives a ClientHello with an invalid cookie, it MUST discard/ignore the record.",
          "createdAt": "2019-07-07T23:42:37Z",
          "updatedAt": "2019-07-07T23:42:37Z"
        }
      ]
    },
    {
      "number": 78,
      "id": "MDU6SXNzdWUzODIxMTQxODU=",
      "title": "Amplification factor",
      "url": "https://github.com/tlswg/dtls13-spec/issues/78",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The cookie exchange is optional-ish.  If a server chooses not to try it, then should we recommend against sending lots and lots of data in response to a small ClientHello?  or use MUST in some way?  QUIC does, but ties itself into knots in the process.",
      "createdAt": "2018-11-19T08:58:25Z",
      "updatedAt": "2019-07-07T23:03:51Z",
      "closedAt": "2019-07-07T23:03:51Z",
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "The style of cookie exchange has not changed since earlier versions of DTLS. I am not aware of any problems with the DTLS cookie mechanism and hence I am wondering why we should change the text.",
          "createdAt": "2019-07-07T09:35:14Z",
          "updatedAt": "2019-07-07T09:35:14Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Given the stage we are at, I think we can leave DTLS where it is.\r\n\r\nAs Hannes says, DTLS 1.3 is the same as DTLS 1.2 in this respect, so it doesn't make matters worse and you can always retrofit a QUIC-style mechanism to DTLS if we want.",
          "createdAt": "2019-07-07T23:03:51Z",
          "updatedAt": "2019-07-07T23:03:51Z"
        }
      ]
    },
    {
      "number": 79,
      "id": "MDU6SXNzdWUzODIxMjgwMDU=",
      "title": "expand on first use \"CID\"",
      "url": "https://github.com/tlswg/dtls13-spec/issues/79",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I didn't do this in my pass through, because I would prefer to just write it out as \"connection ID\".",
      "createdAt": "2018-11-19T09:36:25Z",
      "updatedAt": "2019-03-11T22:42:52Z",
      "closedAt": "2019-03-11T22:42:52Z",
      "comments": []
    },
    {
      "number": 81,
      "id": "MDU6SXNzdWUzOTUyNDkzMjU=",
      "title": "Determining the header format",
      "url": "https://github.com/tlswg/dtls13-spec/issues/81",
      "state": "CLOSED",
      "author": "fpalombini",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Section 4.1 states:\r\n\r\n> \r\n>    Implementations can distinguish the two header formats by examining\r\n>    the first byte:\r\n> \r\n>    -  If the first byte is alert(21), handshake(22), or ack(proposed,\r\n>       25), the record MUST be interpreted as a DTLSPlaintext record.\r\n\r\nBut 21, 22 and 25 are legitimate values for the first byte of the DTLSCiphertext. For example: \r\n* no CID\r\n* 8-bit sequence number\r\n* no length\r\n* EE = 01\r\n \r\nGives 21. Same with 22 and 25. How to properly determine the header format in this case?\r\nAm I missing something?\r\n\r\n",
      "createdAt": "2019-01-02T13:32:49Z",
      "updatedAt": "2019-01-07T08:05:00Z",
      "closedAt": "2019-01-07T08:05:00Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "All DTLSCipherText values art of the form 001xxxxx and therefore are >= 32.\n\n\nOn Wed, Jan 2, 2019 at 5:32 AM fpalombini <notifications@github.com> wrote:\n\n> Section 4.1 states:\n>\n> Implementations can distinguish the two header formats by examining\n> the first byte:\n>\n>    - If the first byte is alert(21), handshake(22), or ack(proposed,\n>    25), the record MUST be interpreted as a DTLSPlaintext record.\n>\n> But 21, 22 and 25 are legitimate values for the first byte of the\n> DTLSCiphertext. For example:\n>\n>    - no CID\n>    - 8-bit sequence number\n>    - no length\n>    - EE = 01\n>\n> Gives 21. Same with 22 and 25. How to properly determine the header format\n> in this case?\n> Am I missing something?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tlswg/dtls13-spec/issues/81>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABD1oYZAoAX2Wwb8w-0hD6aXKXlf1HxGks5u_LUBgaJpZM4Zmp98>\n> .\n>\n",
          "createdAt": "2019-01-05T23:47:46Z",
          "updatedAt": "2019-01-05T23:47:46Z"
        },
        {
          "author": "fpalombini",
          "authorAssociation": "NONE",
          "body": "Sorry, my mistake came from interpreting \"if the first byte is alert(21)\" as 21 being an hex value.",
          "createdAt": "2019-01-07T08:05:00Z",
          "updatedAt": "2019-01-07T08:05:00Z"
        }
      ]
    },
    {
      "number": 82,
      "id": "MDU6SXNzdWUzOTk4NTIyMDc=",
      "title": "Security guarantees are not equivalent to TLS 1.3",
      "url": "https://github.com/tlswg/dtls13-spec/issues/82",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The Abstract states that: \"The DTLS 1.3 protocol is intentionally based on the Transport Layer Security (TLS) 1.3 protocol and provides equivalent security guarantees.\"\r\n\r\nThis is not true when it comes to Order protection/non-replayability which is states as a guarantee in Appendix E.2 of RFC 8446. DTLS does not provide order protection and may not provide replay protection. I suggested this statement \"equivalent security guarantees\" is deleted (or rewritten) in the abstract and that some short text describing this is added to the Security Considerations.\r\n\r\n\r\n",
      "createdAt": "2019-01-16T15:08:44Z",
      "updatedAt": "2019-03-11T22:28:14Z",
      "closedAt": "2019-03-11T22:28:14Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed.",
          "createdAt": "2019-03-11T22:28:14Z",
          "updatedAt": "2019-03-11T22:28:14Z"
        }
      ]
    },
    {
      "number": 90,
      "id": "MDU6SXNzdWU0NDkyNDgyMzY=",
      "title": "CID needs path validation",
      "url": "https://github.com/tlswg/dtls13-spec/issues/90",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "(From https://github.com/tlswg/dtls-conn-id/issues/64)\r\n\r\nIf CID is successfully negotiated, an active man-in-the-middle can freely modify the source address of the UDP datagram \u2014 which is not integrity protected \u2014  thus potentially causing amplified backscatter to be inadvertently generated by the receiver towards the spoofed address.  \r\n\r\n(This does not work without CID because the spoofed packet would not reach the other end in the first place.)\r\n\r\nTo avoid this situation to arise, DTLS should provide a peer address validation sub-protocol \u2014 e.g., [QUIC\u2019s path validation](https://quicwg.org/base-drafts/draft-ietf-quic-transport.html#rfc.section.8.2) \u2014 to be triggered when the receiver notices a change in the peer source address.",
      "createdAt": "2019-05-28T12:44:49Z",
      "updatedAt": "2019-07-07T23:13:40Z",
      "closedAt": "2019-07-07T23:13:40Z",
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "This issue will be addressed in a separate document. I did, however, add text similar to the one added to the DTLS 1.2 CID draft into the security consideration section. \r\n\r\nPR is here: \r\nhttps://github.com/tlswg/dtls13-spec/pull/96",
          "createdAt": "2019-07-07T11:05:50Z",
          "updatedAt": "2019-07-07T11:05:50Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Merged.",
          "createdAt": "2019-07-07T23:13:40Z",
          "updatedAt": "2019-07-07T23:13:40Z"
        }
      ]
    },
    {
      "number": 101,
      "id": "MDU6SXNzdWU1MTY5MzA1OTM=",
      "title": "Editor's draft is ancient",
      "url": "https://github.com/tlswg/dtls13-spec/issues/101",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Looks like CI is busted.",
      "createdAt": "2019-11-04T02:12:07Z",
      "updatedAt": "2019-11-09T21:33:28Z",
      "closedAt": "2019-11-09T21:33:28Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by hand. @seanturner @chris-wood please fix CI",
          "createdAt": "2019-11-09T21:33:28Z",
          "updatedAt": "2019-11-09T21:33:28Z"
        }
      ]
    },
    {
      "number": 102,
      "id": "MDU6SXNzdWU1MTcyMjI5NDE=",
      "title": "IANA Considerations",
      "url": "https://github.com/tlswg/dtls13-spec/issues/102",
      "state": "CLOSED",
      "author": "seanturner",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "content types and handshake types needs to say whether they are DTLS-OKAY.  The ones defined in the DTLS spec obviously are, but to ensure IANA gets clear instructions we should include a value for these columns.",
      "createdAt": "2019-11-04T15:22:33Z",
      "updatedAt": "2019-11-08T14:33:13Z",
      "closedAt": "2019-11-08T14:33:13Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed",
          "createdAt": "2019-11-08T14:33:13Z",
          "updatedAt": "2019-11-08T14:33:13Z"
        }
      ]
    },
    {
      "number": 104,
      "id": "MDU6SXNzdWU1MTcyNDg2Mzk=",
      "title": "Content Type - 25 taken by CID",
      "url": "https://github.com/tlswg/dtls13-spec/issues/104",
      "state": "CLOSED",
      "author": "seanturner",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "DTLS recommends using 25 as the ACK Content Type.  CID is using that number based on an early IANA assignment will change DTLS.",
      "createdAt": "2019-11-04T16:03:29Z",
      "updatedAt": "2019-11-08T14:28:15Z",
      "closedAt": "2019-11-08T14:28:15Z",
      "comments": []
    },
    {
      "number": 106,
      "id": "MDU6SXNzdWU1MTg5NjA2MDg=",
      "title": "\"Packet\" and \"datagram\"",
      "url": "https://github.com/tlswg/dtls13-spec/issues/106",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "I think that the older versions of the spec were good at using the term \"datagram\" to refer to the thing that holds DTLS records.  This version now uses \"packet\" in a good number of places.  Sometimes I think that it means \"record\", other times \"datagram\".\r\n\r\nI'm sure that this is just the influence of QUIC and it can be fixed easily.",
      "createdAt": "2019-11-07T00:03:42Z",
      "updatedAt": "2019-11-11T13:43:18Z",
      "closedAt": "2019-11-11T13:43:18Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Actually 6357 uses \"packet\" all over the place. I'll do an audit, but I'm not going to ones that mean IP packet.",
          "createdAt": "2019-11-08T14:35:32Z",
          "updatedAt": "2019-11-08T14:35:32Z"
        }
      ]
    },
    {
      "number": 108,
      "id": "MDU6SXNzdWU1MTg5NjU2MTI=",
      "title": "Omitting length",
      "url": "https://github.com/tlswg/dtls13-spec/issues/108",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "The requirement to include length on all records that are protected with handshake keys is overly constraining.  It is enough to just insist that all records aside from the last one included in the datagram have a length.",
      "createdAt": "2019-11-07T00:19:05Z",
      "updatedAt": "2019-11-20T06:26:36Z",
      "closedAt": "2019-11-20T06:26:36Z",
      "comments": []
    },
    {
      "number": 109,
      "id": "MDU6SXNzdWU1MTg5NjU5NDY=",
      "title": "ChaCha20 header encryption",
      "url": "https://github.com/tlswg/dtls13-spec/issues/109",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "... takes its sample inputs in a different order to the one used in QUIC.  This issue tracks the possibility of erasing that difference.",
      "createdAt": "2019-11-07T00:20:06Z",
      "updatedAt": "2019-11-11T13:43:31Z",
      "closedAt": "2019-11-11T13:43:31Z",
      "comments": []
    },
    {
      "number": 110,
      "id": "MDU6SXNzdWU1MTg5NjcwMjM=",
      "title": "Records from different connections in the same datagram",
      "url": "https://github.com/tlswg/dtls13-spec/issues/110",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "QUIC prohibits the inclusion of packets from multiple connections in the same datagram.  DTLS probably should too.  With the address tuple no longer being the only way to identify connections, this question is relevant.",
      "createdAt": "2019-11-07T00:23:40Z",
      "updatedAt": "2019-11-20T06:26:37Z",
      "closedAt": "2019-11-20T06:26:37Z",
      "comments": []
    },
    {
      "number": 114,
      "id": "MDU6SXNzdWU1MzAwNTgwOTg=",
      "title": "Fix Figure 11",
      "url": "https://github.com/tlswg/dtls13-spec/issues/114",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "1. There is no HRR, so you don't have a cookie in msg 0\r\n2. Certificate should be message 1\r\n",
      "createdAt": "2019-11-28T19:42:37Z",
      "updatedAt": "2020-03-06T22:14:09Z",
      "closedAt": "2020-03-06T22:14:09Z",
      "comments": []
    },
    {
      "number": 116,
      "id": "MDU6SXNzdWU1NDI1MzU2OTE=",
      "title": "Additional data definition is broken",
      "url": "https://github.com/tlswg/dtls13-spec/issues/116",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The RSN is AADed unencrypted.\r\n\r\nAlso, the text is a bit unclear about exactly what goes in here... It's the same as QUIC, but some editorial work is needed.",
      "createdAt": "2019-12-26T11:56:22Z",
      "updatedAt": "2020-03-06T22:18:09Z",
      "closedAt": "2020-03-06T22:18:09Z",
      "comments": []
    },
    {
      "number": 118,
      "id": "MDU6SXNzdWU1NzA3NTkwMjQ=",
      "title": "legacy cookie field",
      "url": "https://github.com/tlswg/dtls13-spec/issues/118",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "I can't reconcile:\r\n\r\n> In this case, the cookie extension is omitted and the legacy_cookie field in the ClientHello message SHOULD be set to a zero length vector (i.e., a single zero byte length field) and MUST be ignored by a server negotiating DTLS 1.3.\r\n\r\n... with:\r\n\r\n> If a DTLS 1.3 ClientHello is received with any other value in this field, the server MUST abort the handshake with an \"illegal_parameter\" alert.\r\n\r\nThe MUSTs in these appear to be pulling in opposite directions.  I suspect that the latter is correct though.  It is possible that a DTLS 1.3 client could get a legacy cookie from a DTLS 1.2 server, so that it is valid for the legacy cookie to appear when supported_versions includes DTLS 1.3.  However, that represents an attack and a DTLS 1.3 server shouldn't continue to establish the connection.  Maybe it isn't a bad attack because the client doesn't change its posture in ways that would materially affect the resulting session, but we have generally tried to avoid these.",
      "createdAt": "2020-02-25T18:45:38Z",
      "updatedAt": "2020-03-06T22:09:10Z",
      "closedAt": "2020-03-06T22:09:10Z",
      "comments": []
    },
    {
      "number": 128,
      "id": "MDU6SXNzdWU1ODkyNTM2MDg=",
      "title": "Improve ACK advice",
      "url": "https://github.com/tlswg/dtls13-spec/issues/128",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Hanno Becker writes:\r\n\r\nI have a minor comment on DTLS 1.3 draft 37.\r\n\r\nOn the topic of sending ACKs, the draft recommends:\r\n\r\n```\r\nACKs SHOULD NOT be sent for other complete\r\nflights because they are implicitly acknowledged by the receipt of\r\nthe next flight, which generally immediately follows the flight.\r\n```\r\n\r\nI wonder if the case of post-handshake authentication should be\r\nexplicitly mentioned as a potential exception to this rule, since\r\nthe TLS 1.3 RFC explicitly mentions that responses to\r\n`CertificateRequest` may be delayed in some contexts:\r\n\r\n```\r\nNote: Because client authentication could involve prompting the user,\r\nservers MUST be prepared for some delay, including receiving an\r\narbitrary number of other messages between sending the\r\nCertificateRequest and receiving a response.\r\n```\r\n\r\nIn this case, it would be beneficial to immediately explicitly ACK\r\nthe `CertificateRequest` message even though it is also implicitly\r\nacked through the eventual response via the `Certificate` message.\r\n\r\n",
      "createdAt": "2020-03-27T16:30:30Z",
      "updatedAt": "2020-04-19T21:53:24Z",
      "closedAt": "2020-04-19T21:53:24Z",
      "comments": []
    },
    {
      "number": 144,
      "id": "MDU6SXNzdWU2MDQzODM2Mjc=",
      "title": "Should we require CIDs on all packets",
      "url": "https://github.com/tlswg/dtls13-spec/issues/144",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Hanno Becker points out that the current text does not cryptographically protect the CID when we have coalesced packets. I created PR #143 to add this feature, but I think instead we should simply require that all packets have CIDs once the CID is established. This seems like a net reduction in complexity. There would be two changes here:\r\n\r\n1. Re-emphasize the point already in the DTLS CID spec that you abort if a CID is expected and none is found.\r\n2. Remove the text about allowing implicit CIDs.\r\n\r\n",
      "createdAt": "2020-04-22T01:22:04Z",
      "updatedAt": "2020-05-29T15:47:59Z",
      "closedAt": "2020-05-29T15:47:59Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson @chris-wood ",
          "createdAt": "2020-04-22T01:23:28Z",
          "updatedAt": "2020-04-22T01:23:28Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This was resolved by #148. Please re-open if that's not the case!",
          "createdAt": "2020-05-29T15:47:58Z",
          "updatedAt": "2020-05-29T15:47:58Z"
        }
      ]
    },
    {
      "number": 145,
      "id": "MDU6SXNzdWU2MTA1NjE5MTc=",
      "title": "Integrity bounds",
      "url": "https://github.com/tlswg/dtls13-spec/issues/145",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We should count failed \"deprotection\" attempts and limit the number that are permitted with any given key.  Otherwise, an attacker might be able to successfully forge a record.\r\n\r\nSee https://github.com/quicwg/base-drafts/issues/3619 for a more thorough description of the problem and the analysis of different options.",
      "createdAt": "2020-05-01T04:53:37Z",
      "updatedAt": "2020-05-19T00:36:10Z",
      "closedAt": "2020-05-19T00:36:10Z",
      "comments": []
    },
    {
      "number": 150,
      "id": "MDU6SXNzdWU2MjI5MzcwNzM=",
      "title": "Linkability via epoch",
      "url": "https://github.com/tlswg/dtls13-spec/issues/150",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "DTLS and QUIC share a lot of characteristics when it comes to protection of records/packets, but the DTLS sequence number encryption covers marginally less than the header protection in QUIC.  Notably, this doesn't include the epoch in DTLS, where QUIC protects its one-bit epoch value.\r\n\r\nThis avoids one issue QUIC has with respect to overuse of keys under an attempted forgery attack, because the choice of key is always clear, but it does mean that the epoch can be used to improve correlation between activity on different network paths.\r\n\r\nI don't think that this needs to be fixed, but it should be noted in the security considerations.",
      "createdAt": "2020-05-22T04:15:05Z",
      "updatedAt": "2020-05-29T15:55:05Z",
      "closedAt": "2020-05-29T15:55:05Z",
      "comments": []
    },
    {
      "number": 153,
      "id": "MDU6SXNzdWU3MTU2MzYxODM=",
      "title": "DTLS 1.3 header format",
      "url": "https://github.com/tlswg/dtls13-spec/issues/153",
      "state": "CLOSED",
      "author": "awcunning",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "In the current DTLS 1.3 spec (version 38 - https://www.ietf.org/id/draft-ietf-tls-dtls13-38.txt) there are conflicting DTLS header formats structures defined.\r\n\r\nFigure 3 defines the DTLSCiphertext header as comprising of Connection ID (if any, length as negotiated), Sequence Number and then Length field (if present)\r\n\r\nWhere as Figure 4 defines the dtls header with the Sequence number coming before the connection ID.\r\n\r\nWhich figure is correct?",
      "createdAt": "2020-10-06T12:41:35Z",
      "updatedAt": "2020-11-03T13:14:23Z",
      "closedAt": "2020-11-02T21:06:09Z",
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Good catch. Fixed in PR#154 - https://github.com/tlswg/dtls13-spec/pull/154",
          "createdAt": "2020-11-02T20:06:49Z",
          "updatedAt": "2020-11-02T20:06:49Z"
        },
        {
          "author": "awcunning",
          "authorAssociation": "NONE",
          "body": "Great. Just one more clarification. From the DTLS 1.2 Connection ID draft we have the following DTLS header format:\r\n        struct {\r\n            ContentType special_type = tls12_cid;\r\n            ProtocolVersion version;\r\n            uint16 epoch;\r\n            uint48 sequence_number;\r\n            opaque cid[cid_length];               // New field\r\n            uint16 length;\r\n            opaque enc_content[DTLSCiphertext.length];\r\n        } DTLSCiphertext;\r\n\r\n            Figure 3: DTLS 1.2 CID-enhanced Ciphertext Record.\r\n\r\nSo the packet formatting is epoch/seqnum/CID/length.\r\nIn the DTLS 1.3 Figure 4 we have the following unified header format: CID/ compressed seqnum/length.\r\n\r\nDo we have an interoperability issue here for Connection ID between DTLS 1.2 and 1.3 header formats?\r\n\r\nRegards\r\nAndy\r\n",
          "createdAt": "2020-11-03T13:14:23Z",
          "updatedAt": "2020-11-03T13:14:23Z"
        }
      ]
    },
    {
      "number": 158,
      "id": "MDU6SXNzdWU3NDA3OTE2NjM=",
      "title": "Explain differences between DTLS 1.2 CID and DTLS 1.3 in the appendix",
      "url": "https://github.com/tlswg/dtls13-spec/issues/158",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pr-exists",
        "propose-close"
      ],
      "body": "In both versions of DTLS we have to do the extension negotiation because you have to agree on the CID values. \r\n\r\nIn both versions we have to carry the CID in the record layer (if the CID is used). The way we incorporated the CID into the headers is different between the different versions. In DTLS 1.3 we have this variable length header and in DTLS 1.2 we don't. \r\n\r\nThere are also privacy differences. \r\n ",
      "createdAt": "2020-11-11T14:05:12Z",
      "updatedAt": "2021-01-20T13:48:54Z",
      "closedAt": "2021-01-20T13:48:54Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm inclined not to add anything here. If you feel strongly maybe you could provide a PR?",
          "createdAt": "2020-12-29T00:06:41Z",
          "updatedAt": "2020-12-29T00:06:41Z"
        },
        {
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think the privacy differences (and ability to change values over the lifetime of an association, e.g., when roaming) are probably worth mentioning.  @hannestschofenig do you plan to write some text?  If not I can try to squeeze it in.",
          "createdAt": "2020-12-30T02:02:29Z",
          "updatedAt": "2020-12-30T02:02:29Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "PR is available at #198 ",
          "createdAt": "2021-01-06T14:59:35Z",
          "updatedAt": "2021-01-06T14:59:35Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed in #198. Closing.",
          "createdAt": "2021-01-20T13:48:54Z",
          "updatedAt": "2021-01-20T13:48:54Z"
        }
      ]
    },
    {
      "number": 159,
      "id": "MDU6SXNzdWU3NDA3OTMxNDQ=",
      "title": "Add text on how DTLS 1.2 and 1.3 is differentiated on the wire",
      "url": "https://github.com/tlswg/dtls13-spec/issues/159",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "It would also be good to add a note on how we tell the difference between DTLS 1.2 and 1.3.\r\nVersion information is carried in various places and due to the use of the CID the multiplexing got more complex between 1.2 and 1.3.",
      "createdAt": "2020-11-11T14:07:13Z",
      "updatedAt": "2021-01-04T19:40:23Z",
      "closedAt": "2021-01-04T19:40:23Z",
      "comments": []
    },
    {
      "number": 162,
      "id": "MDU6SXNzdWU3NDc1NTIwNzc=",
      "title": "Clarify dynamically changing length and sequence number",
      "url": "https://github.com/tlswg/dtls13-spec/issues/162",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "Andy Cunningham wrote\r\n\r\n> The spec is very specific on the content type fields for C(CID) and EE(Epoch bits). What about S and L? Can the sequence number encoding dynamically change while using the DTLS connection? Same question for length field? Can the connection send packets with and without the length fields (i.e. single datagrams vs multiple datagrams)?  \r\n\r\nText would not hurt in the draft to explain this. ",
      "createdAt": "2020-11-20T14:53:05Z",
      "updatedAt": "2021-01-20T13:35:43Z",
      "closedAt": "2021-01-20T13:35:43Z",
      "comments": []
    },
    {
      "number": 167,
      "id": "MDU6SXNzdWU3NTgwNTQ1MDE=",
      "title": "Encryption limits are too long for SN encryption",
      "url": "https://github.com/tlswg/dtls13-spec/issues/167",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The RNE nonce is effectively 96 bit and for ChaCha20 we allow up to the sequence number which is 48 bits, so very close to the birthday limit for the record number. Also a potential issue for QUIC @martinthomson ",
      "createdAt": "2020-12-06T23:44:42Z",
      "updatedAt": "2020-12-10T18:13:30Z",
      "closedAt": "2020-12-10T16:23:14Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Not sure that I'm following.  Record number encryption runs 2^48 block operations of the block cipher with an identical input (it's ECB, so it's not a nonce).  We don't account for this in terms of the limits on key usage, so yes, it would benefit from some analysis.\r\n\r\nI don't think that this is a risk in that we are not using that key so much, and the sample - 128 bits - is large enough that we don't get near the birthday bound.  Neither protection model uses 96-bit inputs.\r\n\r\nIf we model the underlying block cipher as an ideal PRP (as the papers I've read do), then we only need to worry about collision risk, which isn't so bad.  The advantage reduces to approximately `q^2/2^128` then, which is 2^-32 for DTLS after all record numbers are used.  Even QUIC avoids hitting 0.5 on that basis, though I'll concede that it comes closer than might be ideal, but that's a lot of packets to cross-match.\r\n\r\nWith a collision, the attacker gains the ability to derive the XOR of two record sequence numbers (in QUIC, this includes a little more stuff).  This likely allows the attacker to confirm what the values of both values are.  It might also allow them to confirm a guess that two records sent on different paths (with different connection IDs) are for the same connection.\r\n\r\nMulti-user analysis could be interesting here to, but I think that it turns into a `q^2/2^(k + n)` formula as a result, which would even less of a worry.\r\n\r\nThis is pretty rough, but I don't think that it's particularly exciting.  I'd support adding a note saying that we don't know the confidentiality bounds are for multiple applications of RNE.",
          "createdAt": "2020-12-07T05:08:52Z",
          "updatedAt": "2020-12-07T05:08:52Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "You're right. I thought we were using the low 32 as a counter. So it is a 128-bit sample. Would like to hear from @prosecco\r\n\r\n",
          "createdAt": "2020-12-07T23:59:12Z",
          "updatedAt": "2020-12-07T23:59:12Z"
        },
        {
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "body": ">  I'd support adding a note saying that we don't know the confidentiality bounds are for multiple applications of RNE.\r\n\r\nDid that happen/do we expect it to happen?",
          "createdAt": "2020-12-10T18:13:29Z",
          "updatedAt": "2020-12-10T18:13:29Z"
        }
      ]
    },
    {
      "number": 170,
      "id": "MDU6SXNzdWU3NTgwNTg0Mjk=",
      "title": "DTLS version number",
      "url": "https://github.com/tlswg/dtls13-spec/issues/170",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "@kaduk writes\r\nWe specify a ClientHello.legacy_version = {254,253}, but we seem to be\r\ninheriting the unmodified TLS 1.3 ServerHello, complete with\r\nServerHello.legacy_version = 0x0303.  That seems problematic, since the\r\nlegacy DTLS 1.2 ServerHello would use the expected {254,253} like the\r\nClientHello.\r\n\r\nand later\r\n\r\n                                                                  In\r\n      DTLS 1.3, the client indicates its version preferences in the\r\n      \"supported_versions\" extension (see Section 4.2.1 of [TLS13]) and\r\n      the legacy_version field MUST be set to {254, 253}, which was the\r\n      version number for DTLS 1.2.  The version fields for DTLS 1.0 and\r\n      DTLS 1.2 are 0xfeff and 0xfefd (to match the wire versions) but\r\n      the version field for DTLS 1.3 is 0x0304.\r\n\r\nIt seems like reusing 0x0304 will make implementations more complex for\r\nlittle gain -- it's common to want to, e.g., compare (D)TLS versions to\r\nsee which are greater.  OpenSSL does that with macros like:\r\n\r\n/*\r\n * DTLS version numbers are strange because they're inverted. Except for\r\n * DTLS1_BAD_VER, which should be considered \"lower\" than the rest.\r\n */\r\n# define dtls_ver_ordinal(v1) (((v1) == DTLS1_BAD_VER) ? 0xff00 : (v1))\r\n# define DTLS_VERSION_GT(v1, v2) (dtls_ver_ordinal(v1) < dtls_ver_ordinal(v2))\r\n# define DTLS_VERSION_GE(v1, v2) (dtls_ver_ordinal(v1) <= dtls_ver_ordinal(v2))\r\n# define DTLS_VERSION_LT(v1, v2) (dtls_ver_ordinal(v1) > dtls_ver_ordinal(v2))\r\n# define DTLS_VERSION_LE(v1, v2) (dtls_ver_ordinal(v1) >= dtls_ver_ordinal(v2))\r\n\r\nwhich would have to grow another case of indirection to handle this,\r\nwhereas making TLS1_3_VERSION and DTLS1_3_VERSION have the same\r\nnumerical value doesn't seem to help the code at all.\r\n",
      "createdAt": "2020-12-07T00:04:16Z",
      "updatedAt": "2021-05-18T02:07:45Z",
      "closedAt": "2021-01-20T13:36:01Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@davidben I bet you have an opinion here.",
          "createdAt": "2020-12-07T15:22:28Z",
          "updatedAt": "2020-12-07T15:22:28Z"
        },
        {
          "author": "davidben",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't feel very strongly. I wish we had used the same numbers from the beginning but, now that we've used different ones, it may be easier to continue the trend.",
          "createdAt": "2020-12-07T16:01:33Z",
          "updatedAt": "2020-12-07T16:01:33Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Version information appears at two layers, namely at the record protocol and at the handshake protocol. \r\n\r\n* Record Protocol\r\nWe have two different types of header formats, namely one for plaintext and one for encrypted records. The latter has changed compared to DTLS 1.2 and does not carry version information anymore. We kept the plaintext version to ensure backwards compatibility with earlier versions of DTLS. We could put a new version number in there but we follow the spirit of TLS 1.3 and put the DTLS 1.2 version number in the legacy_record_version field ({254, 253}). \r\n\r\n* Handshake Protocol\r\nWe wanted to keep alignment with TLS 1.3 and therefore the content of the supported_versions counts. Currently, we are using 0x0304 there for DTLS 1.3. For the handshake protocol we again use the spirit of TLS 1.3 and put the DTLS 1.2 version into the legacy_version into the ClientHello (which is {254, 253}). For the ServerHello we use the TLS 1.3 ServerHello.legacy_version field (which is 0x0303) for the case where the server decides to use DTLS 1.3. One could argue that we should instead put {254, 253} in there as well.\r\n\r\nThe important aspect is that the version field in the record protocol and in the handshake protocol does not matter when two DTLS 1.3 peers talk to each other. They are irrelevant constants used in the code. For cTLS we are getting rid of them. For a dual-stack environment, however, it matters what is contained in the ClientHello and in the plaintext field of the record protocol (because of backwards compability reasons).\r\n\r\nMaybe we could make it more explicit what goes where and what the design rational is but setting the values differently does not matter much at all. ",
          "createdAt": "2020-12-24T15:07:45Z",
          "updatedAt": "2020-12-24T15:07:45Z"
        },
        {
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "body": "FWIW I basically agree with Hannes; my comment here was thinking about implementation complexity rather than \"protocol correctness\".  (I guess technically using 0x0303 for ServerHello.legacy_version would arguably make the openssl implementation simpler than using 0xfefd, amusingly enough.)  I'm not tied to any specific changes in this space, but wanted to consider if there were things we could do that would streamline implementation.",
          "createdAt": "2020-12-30T02:11:55Z",
          "updatedAt": "2020-12-30T02:11:55Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "The posted PR is consistent with existing DTLS practice. I.e., it uses the transformed version numbers throughout",
          "createdAt": "2020-12-30T04:06:01Z",
          "updatedAt": "2020-12-30T04:06:01Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Gee, I wish that I had seen this.  This is not a good outcome from my perspective, or from the perspective of NSS.  A better outcome would have been to keep the legacy cruft (ClientHello.legacy_version) and have clean version numbers in supported_versions.\r\n\r\nStill, it's too late now I guess.",
          "createdAt": "2021-05-18T02:07:45Z",
          "updatedAt": "2021-05-18T02:07:45Z"
        }
      ]
    },
    {
      "number": 174,
      "id": "MDU6SXNzdWU3NTgwNzgyNjI=",
      "title": "Say something about how large cert messages may cause congestion",
      "url": "https://github.com/tlswg/dtls13-spec/issues/174",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "",
      "createdAt": "2020-12-07T01:06:51Z",
      "updatedAt": "2021-01-04T19:53:51Z",
      "closedAt": "2021-01-04T19:53:51Z",
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "DTLS 1.3 does not really change this aspect compared to earlier DTLS versions. \r\n\r\nWe could reference a number of the other TLS WG documents that attempt to reduce the size of the certificate message, such as \r\n* Client Certificate URL\r\n* Cached Info\r\n* Certificate Compression\r\n* Following the guidelines in RFC 7925\r\n* Other certificate types\r\n\r\nIt may be possible to use the fragmentation mechanism to send one certificate after the other in the certificate chain. \r\n\r\nIs this what you had in mind?",
          "createdAt": "2020-12-22T18:36:26Z",
          "updatedAt": "2020-12-22T18:36:26Z"
        }
      ]
    },
    {
      "number": 175,
      "id": "MDU6SXNzdWU3NTgwODE5NTQ=",
      "title": "PDU appendix generator is not working properly.",
      "url": "https://github.com/tlswg/dtls13-spec/issues/175",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-07T01:18:57Z",
      "updatedAt": "2020-12-10T17:57:22Z",
      "closedAt": "2020-12-10T17:57:22Z",
      "comments": []
    },
    {
      "number": 176,
      "id": "MDU6SXNzdWU3NTgwODI5MTc=",
      "title": "Add an example for KeyUpdate",
      "url": "https://github.com/tlswg/dtls13-spec/issues/176",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "hannestschofenig",
        "chris-wood"
      ],
      "labels": [],
      "body": "@hannestschofenig @chris-wood could one of you do this?",
      "createdAt": "2020-12-07T01:22:02Z",
      "updatedAt": "2020-12-26T21:27:04Z",
      "closedAt": "2020-12-26T21:27:04Z",
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Added a PR #192 ",
          "createdAt": "2020-12-22T18:27:03Z",
          "updatedAt": "2020-12-22T18:27:03Z"
        }
      ]
    },
    {
      "number": 186,
      "id": "MDU6SXNzdWU3NTg1OTY1Mjk=",
      "title": "When can you send NCID and RCID",
      "url": "https://github.com/tlswg/dtls13-spec/issues/186",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "It's possible to negotiate the CID extension but that you want to receive an empty CID (this is how you get asymmetrical CID lengths). The current text says:\r\n\r\n> Endpoints MUST NOT send either of these messages if they did not negotiate a\r\nCID. If an implementation receives these messages when CIDs\r\nwere not negotiated, it MUST abort the connection with an unexpected_message\r\nalert.\r\n\r\nBut does this mean that (for instance) you can negotiate receiving an empty CID and then switch to a non-empty? I am tempted to say \"no\" as I recall QUIC did.\r\n\r\n",
      "createdAt": "2020-12-07T15:11:24Z",
      "updatedAt": "2021-01-20T13:35:11Z",
      "closedAt": "2021-01-20T13:35:11Z",
      "comments": [
        {
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Doing what QUIC did seems prudent ... and if I didn't know what QUIC did I think I would also lean towards disallowing switching between empty and non-empty on a live connection.",
          "createdAt": "2020-12-13T02:12:20Z",
          "updatedAt": "2020-12-13T02:12:20Z"
        }
      ]
    },
    {
      "number": 187,
      "id": "MDU6SXNzdWU3NTg1OTcwNjY=",
      "title": "Ben Kaduk's review requested a number of example fixes.",
      "url": "https://github.com/tlswg/dtls13-spec/issues/187",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "hannestschofenig"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-07T15:12:07Z",
      "updatedAt": "2020-12-28T22:51:48Z",
      "closedAt": "2020-12-28T22:51:48Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "> Section 5.6\r\n> \r\n> Numbering the flights like this with absolute identifiers could be quite\r\n> useful, but the current formulation leaves a bit to be desired, since we\r\n> don't have much consistency in numbering across the various scenarios.\r\n> If we are going to have to fall back to \"client's second flight\" to\r\n> refer to the given scenario in question, then perhaps it is not worth\r\n> giving different numbers to client vs server flight.\r\n>      Figure 6: Message flights for a full DTLS Handshake (with cookie\r\n>                                  exchange)\r\n> \r\n> I'd consider (but possibly not actually end up) noting that flights 2\r\n> and 3 are skipped when the cookie exchange is not needed.\r\n\r\nFiled under \"need to fix examples\"\r\n\r\n\r\n> It's also a bit surprising to see pre_shared_key as an\r\n> important/noteworthy extension in the sample full (i.e., non-resumption)\r\n> handshake alongside key_share.\r\n\r\nFiled under \"need to fix examples\"\r\n\r\n>            Figure 8: Message flights for the Zero-RTT handshake\r\n> \r\n> Why do we include psk_key_exchange_modes for the zero-RTT example but\r\n> not the other ones?  I don't think it's particularly more notable for\r\n> 0-RTT than other handshakes.\r\n\r\nFiled under \"need to fix examples\"\r\n\r\n\r\n>    Note: The application data sent by the client is not included in the\r\n>    timeout and retransmission calculation.\r\n> \r\n> This note also appears a little out of place here, since we don't\r\n> really get into timeout and retransmission until the next section\r\n\r\nFiled under \"need to fix examples\"\r\n\r\n\r\n> Section 5.7.1\r\n> \r\n> The state machine says \"receive record, send ACK\"; does that hold for\r\n> all records?  (I guess maybe it does, for all records that do not\r\n> complete a flight.)\r\n\r\nFiled under \"need to fix examples\"\r\n\r\n> Section 6\r\n> \r\n> Figure 11 seems to show that the initial ServerHello has message_seq=1,\r\n> but \u00a75.2 says that \"[t]he first message each side transmits in each\r\n> association always has message_seq = 0\".  Which one is it?  (A change\r\n> here would affect all the server's messages except the final ACK.)\r\n\r\nIt's 0. I think this example may have had an HRR. Will fix.\r\nFiled under \"need to fix examples\"\r\n\r\n\r\n> Also in Figure 11, the client has to send an empty ACK because Record 1\r\n> could only be ACK'd in epoch 2, but the client doesn't have the epoch 2\r\n> keys yet.  We should at least forward-reference \u00a77.1 and acknowledge\r\n> (pun intended) that the empty ACK is correct in this case even if we\r\n> don't go into the details of why it is correct yet.\r\n\r\nFiled under \"need to fix examples\"\r\n\r\n>    The use of the ACK for the second case is mandatory for the proper\r\n>    functioning of the protocol.  For instance, the ACK message sent by\r\n>    the client in Figure 12, acknowledges receipt and processing of\r\n>    record 2 (containing the NewSessionTicket message) and if it is not\r\n> \r\n> The records in Figure 12 are not labeled (anymore?).\r\n\r\nFiled under \"need to fix examples\"\r\n\r\n\r\n\r\n",
          "createdAt": "2020-12-07T15:12:45Z",
          "updatedAt": "2020-12-07T15:12:45Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@hannestschofenig can you take these?",
          "createdAt": "2020-12-07T15:13:01Z",
          "updatedAt": "2020-12-07T15:13:01Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "PRs for the example updates are \r\nhttps://github.com/tlswg/dtls13-spec/pull/188\r\nhttps://github.com/tlswg/dtls13-spec/pull/190\r\nhttps://github.com/tlswg/dtls13-spec/pull/191",
          "createdAt": "2020-12-21T14:18:35Z",
          "updatedAt": "2020-12-21T14:18:35Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed",
          "createdAt": "2020-12-28T22:51:48Z",
          "updatedAt": "2020-12-28T22:51:48Z"
        }
      ]
    },
    {
      "number": 189,
      "id": "MDU6SXNzdWU3NzIxMzExODc=",
      "title": "State Machine Fix",
      "url": "https://github.com/tlswg/dtls13-spec/issues/189",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Review from Ben:\r\n\r\n    Section 5.7.1\r\n\r\n    The state machine says \"receive record, send ACK\"; does that hold for\r\n    all records? (I guess maybe it does, for all records that do not\r\n    complete a flight.)\r\n",
      "createdAt": "2020-12-21T12:27:16Z",
      "updatedAt": "2020-12-29T00:25:37Z",
      "closedAt": "2020-12-29T00:25:37Z",
      "comments": []
    },
    {
      "number": 224,
      "id": "MDU6SXNzdWU4NTA2MjkxMTc=",
      "title": "Invalid records and impact on timers",
      "url": "https://github.com/tlswg/dtls13-spec/issues/224",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "propose-close"
      ],
      "body": " Zaheduzzaman Sarker wrote\r\n \r\n> * Section 4.5.2: I assume the silent discard of invalid records will not impact the timers, is that a valid assumption? if yes, then it would be good if this is clarified in the text. \r\n\r\n-> need to add text",
      "createdAt": "2021-04-05T20:08:48Z",
      "updatedAt": "2021-04-13T17:01:06Z",
      "closedAt": "2021-04-13T17:01:06Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't actually understand the ask here. Why would it matter?",
          "createdAt": "2021-04-06T01:14:33Z",
          "updatedAt": "2021-04-06T01:14:33Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "I believe he wants us to note that when an invalid record is received and silently discarded then it does not impact timers in any way. It would be surprising if it did but do we want to add a sentence about that?",
          "createdAt": "2021-04-07T07:01:21Z",
          "updatedAt": "2021-04-07T07:01:21Z"
        },
        {
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Since we have a dedicated section for \"handling invalid records\" that does allow for things other than silent discard, it makes sense to mention the lack of effect on timers.  \"[...] however, an error MAY be logged for diagnostic purposes.  In no case does an invalid record affect pending retransmission timers.\"?",
          "createdAt": "2021-04-12T19:55:00Z",
          "updatedAt": "2021-04-12T19:55:00Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm not sure I agree, but I added something.",
          "createdAt": "2021-04-13T16:55:04Z",
          "updatedAt": "2021-04-13T16:55:04Z"
        }
      ]
    },
    {
      "number": 225,
      "id": "MDU6SXNzdWU4NTA2MzI1ODQ=",
      "title": "Feedback by \u00c9ric Vyncke ",
      "url": "https://github.com/tlswg/dtls13-spec/issues/225",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "== COMMENTS ==\r\n\r\n-- Section 3 --\r\ns/TLS cannot be used directly in datagram environments/TLS cannot be used directly over a datagram transport/ ?\r\n\r\n[Hannes] DTLS is also used over non-IP-based networks (e.g. LoRaWAN, NB IoT, Bluetooth Smart) and \"datagram transport\". What would be the right term to describe \"environments\" that include transport layer protocols like UDP as well as those non-IP-based networks?\r\n\r\nBullet 2) s/to enable reassembly in the correct order/to enable reordering/ ?\r\n\r\n[Hannes] The complete sentence is:\r\n\r\n\"\r\n       The DTLS handshake includes message\r\n       sequence numbers to enable reassembly in the correct order in\r\n       case datagrams are lost or reordered.\r\n\"\r\n\r\nI believe that saying sequence numbers enable reassembly in the correct order is correct. \r\n\r\n-- Section 3.1 --\r\nShould there be a hint to a maximum retry count ?\r\n\r\n[Hannes] There will be a retry count in an implementation. Do we need to say that if we don't have a number to suggest? Not sure. \r\n\r\n-- Section 3.3 --\r\nI understand the motivation (and no need to reply), but, sigh... implementing frag/reassembly above the transport layer...\r\n\r\n[Hannes] Seems to be common these days. Examples: CoAP, and QUIC",
      "createdAt": "2021-04-05T20:14:32Z",
      "updatedAt": "2021-04-13T16:52:29Z",
      "closedAt": "2021-04-13T16:52:29Z",
      "comments": [
        {
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't think I found the PR to match up with the \"pr-exists\" label; could I get a pointer?",
          "createdAt": "2021-04-12T22:34:04Z",
          "updatedAt": "2021-04-12T22:34:04Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "My bad. https://github.com/tlswg/dtls13-spec/pull/240",
          "createdAt": "2021-04-13T16:49:48Z",
          "updatedAt": "2021-04-13T16:49:48Z"
        }
      ]
    },
    {
      "number": 228,
      "id": "MDU6SXNzdWU4NTA4Njc0MjU=",
      "title": "Erik Kline comments",
      "url": "https://github.com/tlswg/dtls13-spec/issues/228",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "[ section 4.4 ]\r\n\r\n* \"respectively\" -> \"respectively.\"\r\n\r\n* Could a DTLS implementation packetize to a min-MTU for an IP version\r\n  and avoid all pMTU issues?  Such a strategy would probably be poor for\r\n  IPv4 but might be acceptable for IPv6 communications.\r\n\r\n[ section 4.5.3 ]\r\n\r\n* \"MUST NOT used\" -> \"MUST NOT be used\"\r\n\r\n[ section 5.8.4 ]\r\n\r\n* \"NOT have send\" -> \"NOT send\", I think\r\n\r\n[ section 6 ]\r\n\r\n* \"which are needed to encrypt to decrypt\"?",
      "createdAt": "2021-04-06T01:08:43Z",
      "updatedAt": "2021-04-12T18:00:48Z",
      "closedAt": "2021-04-12T18:00:47Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "> Could a DTLS implementation packetize to a min-MTU for an IP version\r\nand avoid all pMTU issues? Such a strategy would probably be poor for\r\nIPv4 but might be acceptable for IPv6 communications.\r\n\r\nI'm reluctant to recommend this, given that we know one can run into situations where there is more overhead due to tunnels, etc.",
          "createdAt": "2021-04-06T01:18:47Z",
          "updatedAt": "2021-04-06T01:18:47Z"
        }
      ]
    },
    {
      "number": 229,
      "id": "MDU6SXNzdWU4NTA4Njc1NjE=",
      "title": "Francesca Palombini Comments",
      "url": "https://github.com/tlswg/dtls13-spec/issues/229",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "Thank you for this document. Please find some minor comments below.\r\n\r\nFrancesca\r\n\r\n1. -----\r\n\r\nsection 2.  Conventions and Terminology\r\n\r\nFP: Please spell out that network byte order (most significant byte first) is used throughout the document.\r\n\r\n2. -----\r\n\r\n   Once the client has transmitted the ClientHello message, it expects\r\n   to see a HelloRetryRequest or a ServerHello from the server.\r\n   However, if the server's message is lost, the client knows that\r\n   either the ClientHello or the response from the server has been lost\r\n   and retransmits.  When the server receives the retransmission, it\r\n   knows to retransmit.\r\n\r\nFP: It would be good to mention retransmission max times here.\r\n\r\n3. -----\r\n\r\n                |                |   /+----------------+\\\r\n                | 31 < OCT < 64 -+--> |DTLS Ciphertext |\r\n                |                |    |(header bits    |\r\n                |      else      |    | start with 001)|\r\n                |       |        |   /+-------+--------+\\\r\n\r\n\r\n\r\n\r\n   26.  The value for the \"DTLS-OK\" column is \"Y\".  IANA is requested to\r\n   reserve the content type range 32-63 so that content types in this\r\n   range are not allocated.\r\n\r\nFP: IANA is asked to reserve 32-63, but I could not see any explanation for that. I would like to see it justified in section 4.1 or in the respective IANA section.\r\n\r\n4. -----\r\n\r\n   fragmentation, clients of the DTLS record layer SHOULD attempt to\r\n   size records so that they fit within any PMTU estimates obtained from\r\n   the record layer.\r\n\r\nFP: First time PMTU appears, please expand and add reference.\r\n\r\n5. -----\r\n\r\n   performing PMTU discovery, whether via [RFC1191] or [RFC4821]\r\n   mechanisms.  In particular:\r\n\r\nFP: I think this is missing areference to RFC 8201 since IPv6 is mentioned below.\r\n\r\n6. -----\r\n\r\n   Any TLS cipher suite that is specified for use with DTLS MUST define\r\n   limits on the use of the associated AEAD function that preserves\r\n   margins for both confidentiality and integrity.  That is, limits MUST\r\n   be specified for the number of packets that can be authenticated and\r\n   for the number of packets that can fail authentication before a key\r\n   update is required.  Providing a reference to any analysis upon which\r\n   values are based - and any assumptions used in that analysis - allows\r\n   limits to be adapted to varying usage conditions.\r\n\r\nFP: This seems important enough that it should be highlighted for the experts reviewing the registration. I see that https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-4 has a number of notes, maybe that would be enough, or maybe add it (as an update?) to RFC 8447?\r\n\r\n7. -----\r\n\r\n zero\r\n length vector (i.e., a single zero byte length field).\r\n\r\nFP: I suggest using TLS 1.3 terminology of \"zero-length vector (i.e., a zero-valued single byte length field)\"\r\n\r\n8. -----\r\n\r\n   flow shown in Figure 11 if the client does not send the ACK message\r\n\r\nFP: s/11/12",
      "createdAt": "2021-04-06T01:09:12Z",
      "updatedAt": "2021-04-13T16:50:07Z",
      "closedAt": "2021-04-13T16:50:07Z",
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in #234 ",
          "createdAt": "2021-04-06T06:46:45Z",
          "updatedAt": "2021-04-06T06:46:45Z"
        }
      ]
    },
    {
      "number": 230,
      "id": "MDU6SXNzdWU4NTA4Njc2NjU=",
      "title": "Martin Duke Comments",
      "url": "https://github.com/tlswg/dtls13-spec/issues/230",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "Thanks for this document -- badly needed and easy to read.\r\n\r\nThanks also to Bernard Adoba for his recent tsvart review. I support his comments.\r\n\r\nCOMMENTS:\r\nSec 2. It might be useful to introduce the term \"epoch\" in the glossary, for those who read this front to back.\r\n\r\nSec 4.2.3: \"The encrypted sequence number is computed by XORing the leading bytes of the Mask with the sequence number. Decryption is accomplished by the same process.\"\r\n\r\nThe text is unclear if the XOR is applied to the expanded sequence number or merely the 1-2 octets on the wire. I presume it's the latter, but this should be clarified.\r\n\r\nSec 4.2.3: It's implied here that the sn_key rotates with the epoch. As this is different from QUIC, it's probably worth spelling out.\r\n\r\nSec 5.1 is a bit vague about the amplification limit; why not at least RECOMMEND 3, as we've converged on this elsewhere?\r\n\r\nSec 5.1. Reading between the lines, it's clear that the cookie can't be used as address verification across connections in the way that a NEW_TOKEN token is. It would be good to spell this out for clients -- use the resumption token or whatever instead.\r\n\r\nSec 7.2 \"As noted above, the receipt of any record responding to a given flight MUST be taken as an implicit acknowledgement for the entire flight.\" I think this should be s/entire flight/entire previous flight?\r\n\r\nSec 7.2 \"Upon receipt of an ACK that leaves it with only some messages from a flight having been acknowledged an implementation SHOULD retransmit the unacknowledged messages or fragments.\"\r\n\r\nThis language appears inconsistent with Figure 12, where Record 1 has not been acknowledged but is also not retransmitted. It appears there is an implied handling of empty ACKs that isn't written down anywhere in Sec 7.2\r\n\r\nSec 9. Should there be any flow control limits on new_connection_id? Or should receivers be free to simply drop CIDs they can't handle? It might be good to specify.\r\n\r\nFinally, a really weird one. Reading this document and references to connection ID prompted to me to think how QUIC-LB could apply to DTLS. The result is here: https://github.com/quicwg/load-balancers/pull/106/files. Please note the rather unfortunate third-to-last paragraph. I'm happy to take the answer that this use case doesn't matter, since I made it up today. But if it does, it would be very helpful if (1) DTLS 1.3 clients MUST include a connection_id extension in their ClientHello, even if zero length, and/or (2) this draft updated 4.1.4 of 8446 to allow the server to include connection_id in HelloRetryRequest even if the client didn't offer it. Thoughts?\r\n\r\nNITS:\r\n5.2 s/select(HandshakeType)/select(msg_type). Though with pseudocode your mileage may vary as to what's clearer.\r\n\r\n5.7 s/consitute/constitute\r\n\r\nSec 5.7 In table 1, why include one ACK in the diagram but not the other? It's clear from the note, but the figure is a weird omission.",
      "createdAt": "2021-04-06T01:09:32Z",
      "updatedAt": "2021-04-12T18:15:22Z",
      "closedAt": "2021-04-12T18:15:22Z",
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in https://github.com/tlswg/dtls13-spec/pull/226",
          "createdAt": "2021-04-06T06:51:02Z",
          "updatedAt": "2021-04-06T06:51:02Z"
        }
      ]
    },
    {
      "number": 231,
      "id": "MDU6SXNzdWU4NTA4Njc4MjQ=",
      "title": "Bernard Aboba Comments",
      "url": "https://github.com/tlswg/dtls13-spec/issues/231",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "This document has been reviewed as part of the transport area review team's\r\nongoing effort to review key IETF documents. These comments were written\r\nprimarily for the transport area directors, but are copied to the document's\r\nauthors and WG to allow them to address any issues raised and also to the IETF\r\ndiscussion list for information.\r\n\r\nWhen done at the time of IETF Last Call, the authors should consider this\r\nreview as part of the last-call comments they receive. Please always CC\r\ntsv-art@ietf.org if you reply to or forward this review.\r\n\r\nTSV-ART Review of draft-ietf-tls-dtls13-41\r\nReviewer: Bernard Aboba\r\n\r\nSummary: The timeout and retransmission scheme looks workable for common cases, but could use some refinement to make it more robust. \r\n\r\nTechnical Comments\r\n\r\n4.5.2.  Handling Invalid Records\r\n\r\n   Unlike TLS, DTLS is resilient in the face of invalid records (e.g.,\r\n   invalid formatting, length, MAC, etc.).  In general, invalid records\r\n   SHOULD be silently discarded, thus preserving the association;\r\n   however, an error MAY be logged for diagnostic purposes.\r\n\r\n[BA] How does silent discard of invalid records interact with retransmission timers? \r\n\r\n   Implementations which choose to generate an alert instead, MUST\r\n   generate error alerts to avoid attacks where the attacker repeatedly\r\n   probes the implementation to see how it responds to various types of\r\n   error.  Note that if DTLS is run over UDP, then any implementation\r\n   which does this will be extremely susceptible to denial-of-service\r\n   (DoS) attacks because UDP forgery is so easy.  Thus, this practice is\r\n   NOT RECOMMENDED for such transports, both to increase the reliability\r\n   of DTLS service and to avoid the risk of spoofing attacks sending\r\n   traffic to unrelated third parties.\r\n\r\n[BA] \"this practice\" refers to \"generate an alert instead\", correct?\r\n\r\n5.8.2.  Timer Values\r\n\r\n   Though timer values are the choice of the implementation, mishandling\r\n   of the timer can lead to serious congestion problems, for example if\r\n\r\n[BA] Saying \"timer values are the choice of the implementation\" seems\r\nodd, because it is followed by normative language. I would delete this\r\nand start the sentence with \"Mishandling...\". \r\n\r\n   many instances of a DTLS time out early and retransmit too quickly on\r\n   a congested link.  Implementations SHOULD use an initial timer value\r\n   of 100 msec (the minimum defined in RFC 6298 [RFC6298]) and double\r\n   the value at each retransmission, up to no less than 60 seconds (the\r\n   RFC 6298 maximum).  Application specific profiles, such as those used\r\n   for the Internet of Things environment, may recommend longer timer\r\n   values.  Note that a 100 msec timer is recommended rather than the\r\n   3-second RFC 6298 default in order to improve latency for time-\r\n   sensitive applications.  Because DTLS only uses retransmission for\r\n   handshake and not dataflow, the effect on congestion should be\r\n   minimal.\r\n\r\n   Implementations SHOULD retain the current timer value until a message\r\n   is transmitted and acknowledged without having to be retransmitted,\r\n   at which time the value may be reset to the initial value.  \r\n\r\n[BA] Is it always possible to distinguish a retransmission from a late\r\narrival of an original packet? This seems like it could result in\r\nwrongly resetting the timer in some situations. \r\n\r\n5.8.3.  Large Flight Sizes\r\n\r\n   DTLS does not have any built-in congestion control or rate control;\r\n   in general this is not an issue because messages tend to be small.\r\n   However, in principle, some messages - especially Certificate - can\r\n   be quite large.  If all the messages in a large flight are sent at\r\n   once, this can result in network congestion.  A better strategy is to\r\n   send out only part of the flight, sending more when messages are\r\n   acknowledged.  DTLS offers a number of mechanisms for minimizing the\r\n   size of the certificate message, including the cached information\r\n   extension [RFC7924] and certificate compression [RFC8879].\r\n\r\n[BA] How does the implementation know how much of the flight to send? \r\nNot sure how prevalent large certs are for DTLS  (e.g. compared with the self-signed certs of WebRTC),\r\nbut in EAP-TLS deployments, large certs have caused problems. \r\nThe  EAP-TLS cert document draft-ietf-emu-eaptlscert cites some additional\r\nmechanisms for reducing certificate sizes, such as draft-ietf-tls-ctls\r\nand [RFC6066] which defines the \"client_certificate_url\" \r\nextension which allows TLS clients to send a sequence of Uniform \r\nResource Locators (URLs) instead of the client certificate. \r\n\r\n5.11.  Alert Messages\r\n\r\n   Note that Alert messages are not retransmitted at all, even when they\r\n   occur in the context of a handshake.  However, a DTLS implementation\r\n   which would ordinarily issue an alert SHOULD generate a new alert\r\n   message if the offending record is received again (e.g., as a\r\n   retransmitted handshake message).  Implementations SHOULD detect when\r\n   a peer is persistently sending bad messages and terminate the local\r\n   connection state after such misbehavior is detected.  Note that\r\n   alerts are not reliably transmitted; implementation SHOULD NOT depend\r\n   on receiving alerts in order to signal errors or connection closure.\r\n\r\n[BA] For the fatal alert case, it does seem like retransmission would\r\nbe a good idea; otherwise the peer can be left hanging. \r\n\r\nSection 7.1\r\n\"Disruptions\" such as reordering do not affect timers, correct? \r\n\r\n   ACKs SHOULD NOT be sent for these flights unless generating the\r\n   responding flight takes significant time.\r\n\r\nWhat is \"significant time\"? \r\n\r\nEditorial Comments (NITs)\r\n\r\nSection 2\r\n\r\n   The reader is also as to be familiar with\r\n\r\n[BA] \"as\" -> \"assumed\" \r\n\r\nSection 3\r\n\r\n   The basic design philosophy of DTLS is to construct \"TLS over\r\n   datagram transport\".  Datagram transport does not require nor provide\r\n   reliable or in-order delivery of data.  The DTLS protocol preserves\r\n   this property for application data.  Applications such as media\r\n   streaming, Internet telephony, and online gaming use datagram\r\n   transport for communication due to the delay-sensitive nature of\r\n   transported data.  The behavior of such applications is unchanged\r\n   when the DTLS protocol is used to secure communication, since the\r\n   DTLS protocol does not compensate for lost or reordered data traffic.\r\n\r\n[BA] While low-latency streaming and gaming does use DTLS to protect data (e.g. for \r\nprotection of WebRTC data channel), telephony and RTC Audio/Video uses DTLS/SRTP for\r\nkey derivation only, and SRTP for protection of data. So you might want to make a\r\ndistinction.\r\n\r\nSection 3.1\r\n\r\n   Note that timeout and retransmission do not apply to the\r\n   HelloRetryRequest since this would require creating state on the\r\n   server.  The HelloRetryRequest is designed to be small enough that it\r\n   will not itself be fragmented, thus avoiding concerns about\r\n   interleaving multiple HelloRetryRequests.\r\n\r\n[BA] I would add \"For more detail on timeouts and retransmission, \r\nsee Section 5.8.\"\r\n\r\n4.3.  Transport Layer Mapping\r\n\r\n   DTLS messages MAY be fragmented into multiple DTLS records.  Each\r\n   DTLS record MUST fit within a single datagram.  In order to avoid IP\r\n   fragmentation, clients of the DTLS record layer SHOULD attempt to\r\n   size records so that they fit within any PMTU estimates obtained from\r\n   the record layer.\r\n\r\n[BA] You might reference PMTU considerations described in Section 4.4.\r\n\r\n   5.  Post-handshake client authentication\r\n\r\n   Messages of each category can be sent independently, and reliability\r\n   is established via independent state machines each of which behaves\r\n   as described in Section 5.8.1.  For example, if a server sends a\r\n   NewSessionTicket and a CertificateRequest message, two independent\r\n   state machines will be created.\r\n\r\n   As explained in the corresponding sections, sending multiple\r\n   instances of messages of a given category without having completed\r\n   earlier transmissions is allowed for some categories, but not for\r\n   others.  Specifically, a server MAY send multiple NewSessionTicket\r\n   messages at once without awaiting ACKs for earlier NewSessionTicket\r\n   first.  Likewise, a server MAY send multiple CertificateRequest\r\n   messages at once without having completed earlier client\r\n   authentication requests before.  In contrast, implementations MUST\r\n   NOT have send KeyUpdate, NewConnectionId or RequestConnectionId\r\n\r\n[BA] \"send\" -> \"sent\"\r\n\r\n\r\n6.  Example of Handshake with Timeout and Retransmission\r\n\r\n   The following is an example of a handshake with lost packets and\r\n   retransmissions.  Note that the client sends an empty ACK message\r\n   because it can only acknowledge Record 1 sent by the server once it\r\n   has processed messages in Record 0 needed to establish epoch 2 keys,\r\n   which are needed to encrypt to decrypt messages found in Record 1.\r\n\r\n[BA] \"encrypt to decrypt\" -> \"encrypt or decrypt\"?\r\n \r\nSection 7.3\r\n\r\n   In the first case the use of the ACK message is optional because the\r\n   peer will retransmit in any case and therefore the ACK just allows\r\n   for selective retransmission, as opposed to the whole flight\r\n   retransmission in previous versions of DTLS.  For instance in the\r\n   flow shown in Figure 11 if the client does not send the ACK message\r\n\r\n[BA] Figure 11 is the DTLS State Machine. Are you referring to another figure? \r\n\r\n   The use of the ACK for the second case is mandatory for the proper\r\n   functioning of the protocol.  For instance, the ACK message sent by\r\n   the client in Figure 13, acknowledges receipt and processing of\r\n   record 4 (containing the NewSessionTicket message) and if it is not\r\n   sent the server will continue retransmission of the NewSessionTicket\r\n   indefinitely until its transmission cap is reached.\r\n\r\n[BA] Do you mean \"maximum retransmission timemout value\"?",
      "createdAt": "2021-04-06T01:10:05Z",
      "updatedAt": "2021-04-13T16:50:07Z",
      "closedAt": "2021-04-13T16:50:07Z",
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in #233 ",
          "createdAt": "2021-04-06T06:47:08Z",
          "updatedAt": "2021-04-06T06:47:08Z"
        }
      ]
    },
    {
      "number": 235,
      "id": "MDU6SXNzdWU4NTEwNjcwMTA=",
      "title": "AEAD Limits",
      "url": "https://github.com/tlswg/dtls13-spec/issues/235",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pr-exists"
      ],
      "body": "Francesca says\r\n\r\n\r\n>    Any TLS cipher suite that is specified for use with DTLS MUST define\r\n>    limits on the use of the associated AEAD function that preserves\r\n>    margins for both confidentiality and integrity.  That is, limits MUST\r\n>    be specified for the number of packets that can be authenticated and\r\n>    for the number of packets that can fail authentication before a key\r\n>    update is required.  Providing a reference to any analysis upon which\r\n>    values are based - and any assumptions used in that analysis - allows\r\n>    limits to be adapted to varying usage conditions.\r\n> \r\n> FP: This seems important enough that it should be highlighted for the experts reviewing the registration. I see that https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-4 has a number of notes, maybe that would be enough, or maybe add it (as an update?) to RFC 8447?\r\n\r\n\r\nI am uncertain whether this document is the right place to place restrictions on IANA for this purpose beyond what has already been done elsewhere. Maybe there is a chance to do something in the TLS 1.3 update. ",
      "createdAt": "2021-04-06T06:49:06Z",
      "updatedAt": "2021-04-13T16:50:07Z",
      "closedAt": "2021-04-13T16:50:07Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I added some text to the PR.",
          "createdAt": "2021-04-06T22:35:00Z",
          "updatedAt": "2021-04-06T22:35:00Z"
        },
        {
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Since #234 got merged, should this issue be closed now?",
          "createdAt": "2021-04-12T23:01:02Z",
          "updatedAt": "2021-04-12T23:01:02Z"
        }
      ]
    },
    {
      "number": 236,
      "id": "MDU6SXNzdWU4NTEwNjc4MTM=",
      "title": "Retransmissions",
      "url": "https://github.com/tlswg/dtls13-spec/issues/236",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "propose-close"
      ],
      "body": "Bernard writes: \r\n\r\n> [BA] Is it always possible to distinguish a retransmission from a late\r\n> arrival of an original packet? This seems like it could result in\r\n> wrongly resetting the timer in some situations.\r\n> \r\n> [BA] How does the implementation know how much of the flight to send?\r\n> \r\n> [BA] For the fatal alert case, it does seem like retransmission would\r\n> be a good idea; otherwise the peer can be left hanging.\r\n> \r\n> \r\n> Section 7.1\u2028\"Disruptions\" such as reordering do not affect timers, correct?\r\n> ACKs SHOULD NOT be sent for these flights unless generating the\u2028responding flight takes significant time.\r\n> What is \"significant time\"?",
      "createdAt": "2021-04-06T06:49:55Z",
      "updatedAt": "2021-04-13T19:16:02Z",
      "closedAt": "2021-04-13T19:16:02Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "\r\n\r\n  >  [BA] Is it always possible to distinguish a retransmission from a late\r\n    arrival of an original packet? This seems like it could result in\r\n    wrongly resetting the timer in some situations.\r\n\r\nNo, because if there are any retransmissions you shouldn't reset.\r\n\r\n\r\n>     [BA] How does the implementation know how much of the flight to send?\r\n\r\nWe just give some guidance and let them sort it out. There's no really good answer.\r\n\r\n\r\n>     [BA] For the fatal alert case, it does seem like retransmission would\r\n    be a good idea; otherwise the peer can be left hanging.\r\n\r\nDTLS has been this way for some time, and there's no really obvious way to deal with it, so i think we leave as-is.\r\n\r\n>    Section 7.1\u2028\"Disruptions\" such as reordering do not affect timers, correct?\r\n\r\nYes. How could they.\r\n\r\n\r\n>    ACKs SHOULD NOT be sent for these flights unless generating the\u2028responding flight takes significant time.\r\n>    What is \"significant time\"?\r\n\r\nChanged this to \"immediate\"\r\n",
          "createdAt": "2021-04-07T01:29:58Z",
          "updatedAt": "2021-04-07T01:29:58Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Regarding: \r\n\r\n> [BA] How does the implementation know how much of the flight to send?\r\n\r\nI guess the question is about whether one or multiple handshake messages are packed in single underlying datagram. \r\n\r\nI would say it depends a bit on the use case and the PMTU size.  If there is enough space (PMTU-wise) then it may be good in some cases to wait until a number of messages are ready for transmission. In other cases, it may be better to transmit the messages right away individually without packing. \r\n\r\n",
          "createdAt": "2021-04-07T06:49:35Z",
          "updatedAt": "2021-04-07T06:49:35Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@chris-wood I propose we just close this.",
          "createdAt": "2021-04-13T16:56:01Z",
          "updatedAt": "2021-04-13T16:56:01Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That seems reasonable. @ekr, please feel free to close with no action (beyond \"immediate\" above).",
          "createdAt": "2021-04-13T19:14:01Z",
          "updatedAt": "2021-04-13T19:14:26Z"
        }
      ]
    },
    {
      "number": 237,
      "id": "MDU6SXNzdWU4NTE5MTczODc=",
      "title": "Remove ACK from flight table",
      "url": "https://github.com/tlswg/dtls13-spec/issues/237",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Martin duke writes:\r\n> Sec 5.7 In table 1, why include one ACK in the diagram but not the other? It's clear from the note, but the figure is a weird omission.\r\n\r\nWell, it's not a flight in those other cases. It's just sort of out of band data. Maybe we should just\r\nremove flight entirely?\r\n",
      "createdAt": "2021-04-07T01:12:38Z",
      "updatedAt": "2021-04-13T16:52:53Z",
      "closedAt": "2021-04-13T16:52:53Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@hannestschofenig: ^^?",
          "createdAt": "2021-04-07T01:31:12Z",
          "updatedAt": "2021-04-07T01:31:12Z"
        }
      ]
    },
    {
      "number": 243,
      "id": "MDU6SXNzdWU4NjY2OTMwMDI=",
      "title": "It seems there a merge conflict.",
      "url": "https://github.com/tlswg/dtls13-spec/issues/243",
      "state": "CLOSED",
      "author": "lvht",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "It seems there a merge conflict.\r\n```\r\n##  Transport Layer Mapping {#transport-layer-mapping}\r\n\r\nDTLS messages MAY be fragmented into multiple DTLS records.\r\nEach DTLS record MUST fit within a single datagram.  In order to\r\navoid IP fragmentation, clients of the DTLS record layer SHOULD\r\n<<<<<<< HEAD\r\nattempt to size records so that they fit within any PMTU estimates\r\nobtained from the record layer. For more information about PMTU issues\r\nsee {{pmtu-issues}}.\r\n=======\r\nattempt to size records so that they fit within any Path MTU (PMTU) estimates\r\nobtained from the record layer.\r\n>>>>>>> hannestschofenig-patch-40\r\n```",
      "createdAt": "2021-04-24T08:26:15Z",
      "updatedAt": "2021-05-01T04:10:27Z",
      "closedAt": "2021-05-01T04:10:27Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, I have fixed it in my copy.",
          "createdAt": "2021-04-24T23:46:51Z",
          "updatedAt": "2021-04-24T23:46:51Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "and now in the repo",
          "createdAt": "2021-04-24T23:47:14Z",
          "updatedAt": "2021-04-24T23:47:14Z"
        }
      ]
    },
    {
      "number": 247,
      "id": "MDU6SXNzdWU5MDk5MjgyMDk=",
      "title": "message_hash construction is ambiguous in DTLS",
      "url": "https://github.com/tlswg/dtls13-spec/issues/247",
      "state": "OPEN",
      "author": "davidben",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "In DTLS 1.2, we do this funny thing where, rather than using the type + length TLS Handshake message header, the transcript uses the longer DTLS header and pretends it was a single fragment:\r\nhttps://www.rfc-editor.org/rfc/rfc6347.html#section-4.2.6\r\n\r\nDTLS 1.3 preserves this text, so I assume the intent is to keep doing this.\r\nhttps://tlswg.org/dtls13-spec/draft-ietf-tls-dtls13.html#name-certificateverify-and-finis\r\n\r\nAlthough we use the transcript in a lot more places now, so perhaps that should be restructured into section about the Transcript Hash. That also gives a good place to talk about...\r\n\r\nRFC8446 describes the message_hash machinery as follows:\r\nhttps://www.rfc-editor.org/rfc/rfc8446.html#section-4.4.1\r\n\r\n```\r\n   As an exception to this general rule, when the server responds to a\r\n   ClientHello with a HelloRetryRequest, the value of ClientHello1 is\r\n   replaced with a special synthetic handshake message of handshake type\r\n   \"message_hash\" containing Hash(ClientHello1).  I.e.,\r\n\r\n  Transcript-Hash(ClientHello1, HelloRetryRequest, ... Mn) =\r\n      Hash(message_hash ||        /* Handshake type */\r\n           00 00 Hash.length  ||  /* Handshake message length (bytes) */\r\n           Hash(ClientHello1) ||  /* Hash of ClientHello1 */\r\n           HelloRetryRequest  || ... || Mn)\r\n```\r\n\r\nI don't see any text in DTLS 1.3 which overrides this, but this text is awkward for DTLS 1.3. Do you follow the implication of the CertificateVerify/Finished text and use the longer DTLS header, or do you follow the formula and use the TLS header, switching back to the DTLS header afterwards? We should probably pick one and specify it.\r\n\r\n(As an aside, this transcript difference means that DTLS and TLS transcripts are not obviously separable. So anything which uses the transcript must use separate labels between the two, which is a bit annoying given things like ECH invent new uses of the transcript. Though switch DTLS to the TLS construction is probably too late now, and will be differently obnoxious because DTLS 1.2 still requires the old one.)",
      "createdAt": "2021-06-02T22:15:45Z",
      "updatedAt": "2021-06-02T22:15:45Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 248,
      "id": "MDU6SXNzdWU5MTQ1NzkzMTg=",
      "title": "Should the protocol specify a mechanism to ensure that the link is disconnected if the peer is restarted or some reason?",
      "url": "https://github.com/tlswg/dtls13-spec/issues/248",
      "state": "CLOSED",
      "author": "yangyangtiantianlonglong",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Since there are various versions of dtls implementations, should the protocol specify a common mechanism for disconnects? When the status of the peer end is unknown.",
      "createdAt": "2021-06-08T08:30:41Z",
      "updatedAt": "2021-07-22T01:15:13Z",
      "closedAt": "2021-07-22T01:15:13Z",
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Generally, I think that's out of scope at this time. We could graft\nsomething like QUIC's stateless reset on later if needed, but DTLS has\ngotten along pretty well without it so far\n\nOn Tue, Jun 8, 2021 at 1:31 AM TiaLo ***@***.***> wrote:\n\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tlswg/dtls13-spec/issues/248>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAIPLIM6FXUX7P3QBXXAUDDTRXIMHANCNFSM46JME4XQ>\n> .\n>\n",
          "createdAt": "2021-06-08T15:17:00Z",
          "updatedAt": "2021-06-08T15:17:00Z"
        },
        {
          "author": "yangyangtiantianlonglong",
          "authorAssociation": "NONE",
          "body": "```DTLS has gotten along pretty well without it so far```\r\nWhen disconnecting a dtls link with a third-party device, there is no common disconnection mechanism and we are always speculating on the behavior of the third-party device. Most dtls users disconnect the link by timeout, and setting different times will cause confusion. And timeout disconnection makes app user experience poor. It would make things easier to suggest a common mechanism to solve the problem.",
          "createdAt": "2021-06-09T01:39:10Z",
          "updatedAt": "2021-06-09T01:39:10Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm not saying this wouldn't be helpful. I'm saying that at this point in\nthe process it would be disruptive to hold the document to add it.\nMoreover, we would probably add something like QUIC's stateless reset,\nwhich would end up being an extension anyway. So I think the right thing to\ndo is to write an extension document.\n\nOn Tue, Jun 8, 2021 at 6:39 PM TiaLo ***@***.***> wrote:\n\n> DTLS has gotten along pretty well without it so far\n> When disconnecting a dtls link with a third-party device, there is no\n> common disconnection mechanism and we are always speculating on the\n> behavior of the third-party device. Most dtls users disconnect the link by\n> timeout, and setting different times will cause confusion. And timeout\n> disconnection makes app user experience poor. It would make things easier\n> to suggest a common mechanism to solve the problem.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tlswg/dtls13-spec/issues/248#issuecomment-857305080>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAIPLILQLQFIQVFQ35E3FELTR3A4XANCNFSM46JME4XQ>\n> .\n>\n",
          "createdAt": "2021-06-09T02:00:22Z",
          "updatedAt": "2021-06-09T02:00:22Z"
        },
        {
          "author": "yangyangtiantianlonglong",
          "authorAssociation": "NONE",
          "body": "I see. Thank you for your reply.",
          "createdAt": "2021-06-09T02:58:37Z",
          "updatedAt": "2021-06-09T02:58:37Z"
        },
        {
          "author": "seanturner",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ekr should this be closed?",
          "createdAt": "2021-07-15T18:38:49Z",
          "updatedAt": "2021-07-15T18:38:49Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "yes imo\n\nOn Thu, Jul 15, 2021 at 11:39 AM Sean Turner ***@***.***>\nwrote:\n\n> @ekr <https://github.com/ekr> should this be closed?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tlswg/dtls13-spec/issues/248#issuecomment-880926436>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAIPLIJ7UZIPPW5YZ6AJCWDTX4TMJANCNFSM46JME4XQ>\n> .\n>\n",
          "createdAt": "2021-07-15T20:55:42Z",
          "updatedAt": "2021-07-15T20:55:42Z"
        }
      ]
    },
    {
      "number": 249,
      "id": "MDU6SXNzdWU5NDQxODIzOTc=",
      "title": "DTLS 1.3 limits the number of packets that can be encrypted with AES-GCM to 2^40.5",
      "url": "https://github.com/tlswg/dtls13-spec/issues/249",
      "state": "OPEN",
      "author": "emanjon",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "If I have understood and calculated correctly DTLS 1.3 limits the number of\r\npackets in a AES-GCM connection to 2^40.5 compared to 2^64 in DTLS 1.2. This\r\nis quite a severe limitation that is not mentioned explicitly. The AEAD limits\r\nin themselves are not a problem, but the combination of AEAD limits (2^24.5)\r\nand a small epoch (2^16) is a problem.\r\n\r\nI think this is major problem in some use cases of DTLS. E.g. most 3GPP 5G use\r\ncases where DTLS or DTLS/SCTP is used for semi-permanent connections (lasting years)\r\nand where the terminating the connection cause severe disturbances.\r\n\r\nI did not find any discussion about this problem (but I could easily have missed it)\r\n\r\nIt is known that the limit of 2^48 packets in SRTP can be reached and 2^40.5 is\r\nsignificantly smaller than this...\r\n\r\nIf the document was not in such a late stage, I would have suggested to increase the size\r\nof the epoch to 32 bits.....\r\n\r\nI think this and the other problems DTLS 1.3 has with semi-permanent connections has to be\r\nsolved sooner than later.\r\n",
      "createdAt": "2021-07-14T08:31:13Z",
      "updatedAt": "2021-07-29T09:13:00Z",
      "closedAt": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@emanjon thanks for filing this. I hear you about the late stage, but IIRC we never represent the entire epoch on the wire in any case, so it seems like just changing it to 32 bits would be pretty easy, so why not do it now?",
          "createdAt": "2021-07-14T18:20:33Z",
          "updatedAt": "2021-07-14T18:20:33Z"
        },
        {
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "body": "How do the chacha20 numbers compare to the AES-GCM ones?",
          "createdAt": "2021-07-14T18:31:37Z",
          "updatedAt": "2021-07-14T18:31:37Z"
        },
        {
          "author": "emanjon",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@kaduk I don't think (D)TLS 1.3 puts any limits on ChaCha20 so my understanding\r\nis understanding is that the total number of packets can be protected in the current drafts is\r\n\r\nChaCha20 2^64 (2^48 * 2^16)\r\nAES-GCM 2^40.5 (2^24.5 * 2^16)\r\nAES-GCM 2^39 (2^23 * 2^16)\r\n\r\n",
          "createdAt": "2021-07-14T22:29:11Z",
          "updatedAt": "2021-07-14T22:29:11Z"
        },
        {
          "author": "emanjon",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ekr I am all for changing this now. I made a PR #250 that change epoch from uint16 to uint32. As you say, it seems like a pretty easy change to do.\r\n\r\nIs uint32 the right size?",
          "createdAt": "2021-07-14T22:29:58Z",
          "updatedAt": "2021-07-14T22:29:58Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Unless you think we should do uint64.\r\n\r\n@kaduk @chris-wood what would we have to do to make this change?",
          "createdAt": "2021-07-14T23:06:14Z",
          "updatedAt": "2021-07-14T23:06:14Z"
        },
        {
          "author": "emanjon",
          "authorAssociation": "CONTRIBUTOR",
          "body": "https://github.com/gloinul/draft-westerlund-tsvwg-dtls-over-sctp-bis/issues/63\r\n\r\n- Magnus Westerlund thinks uint64 would be a safer bet.\r\n\r\n- Michael T\u00fcxen suggest to wrap the uint16 epoch instead. That might be an easier solution. I don't see a direct problem in DTLSPlaintext, ACK message, or record_sequence_number with a uint16 epoch that is allowed to wrap like:\r\n\r\n4, 5, ... 2^16-1, 4, 5, ... 2^16-1, 4, 5, ... ",
          "createdAt": "2021-07-15T10:56:02Z",
          "updatedAt": "2021-07-15T10:56:02Z"
        },
        {
          "author": "seanturner",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ekr @kaduk @chris-wood since it's through the IESG we would need to at least raise that this change was made after they had approved it.  I suspect that doing some kind of 2-week heads up to the WG/IESG that we want to make the change before landing it. But, if we do that or something more drastic that's really up to @kaduk.",
          "createdAt": "2021-07-15T18:36:51Z",
          "updatedAt": "2021-07-15T18:36:51Z"
        },
        {
          "author": "gloinul",
          "authorAssociation": "NONE",
          "body": "I want to point out that allowing wrapping per #252 may not be the best solution if one considers to use the DTLS epoch as part of the input to the TLS exporter as suggested in #253. Then one want an input that doesn't wrap, and then to ensure that one doesn't practically run into any limits, then an uint64 would be better. \r\n\r\nAn unit32 appears to be sufficient for a quite extreme use case with minimal messages size (which is one DTLS record with 4 byte user message) and high bandwidth (10 Gbps) sustained over a period of more than 5 years before the epoch would wrap. However, to my understanding the full epoch value are so rarely included in transmitted DTLS messages that its size have minimal implication on the overhead that it is not worth saving 4-bytes to be certain to have eliminated any practical limitation. ",
          "createdAt": "2021-07-16T11:51:26Z",
          "updatedAt": "2021-07-16T11:51:26Z"
        },
        {
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> @ekr @kaduk @chris-wood since it's through the IESG we would need to at least raise that this change was made after they had approved it. I suspect that doing some kind of 2-week heads up to the WG/IESG that we want to make the change before landing it. But, if we do that or something more drastic that's really up to @kaduk.\r\n\r\nI think a 2-week WGLC and notifying the IESG will suffice.",
          "createdAt": "2021-07-21T19:49:42Z",
          "updatedAt": "2021-07-21T19:49:42Z"
        },
        {
          "author": "emanjon",
          "authorAssociation": "CONTRIBUTOR",
          "body": "FYI. We have now run into quite many problems with the interworking of semi-permanent DTLS/SCTP connections (lasting years) and DTLS 1.3:\r\n\r\n- No Diffie-Hellman rekeying\r\n- No post-handshake server authentication\r\n- No rekeying of the exporter_secret\r\n- 2^40.5 packets limit\r\n- 2 minute MSL requirement\r\n- 2^38.5 byte SCTP user message size limit\r\n\r\nOur initial plan was to just replace DTLS 1.2 with DTLS 1.3, leave DTLS/SCTP as is, but as the problems keep adding up we are now startnig to consider quite big changes to DTLS/SCTP 1.3 to make this work:\r\nhttps://github.com/gloinul/draft-westerlund-tsvwg-dtls-over-sctp-bis/issues/52\r\n\r\nUsing new DTLS connections instead of KeyUpdate could potentially address the first five, but is a significant change. ",
          "createdAt": "2021-07-29T09:13:00Z",
          "updatedAt": "2021-07-29T09:13:00Z"
        }
      ]
    },
    {
      "number": 251,
      "id": "MDU6SXNzdWU5NDU1MjQ1NDc=",
      "title": "Establishing New Associations with Existing Parameters - SHOULD / please add description of the alternatives",
      "url": "https://github.com/tlswg/dtls13-spec/issues/251",
      "state": "CLOSED",
      "author": "boaks",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "[Establishing New Associations with Existing Parameters](https://github.com/tlswg/dtls13-spec/blob/master/draft-ietf-tls-dtls13.md#establishing-new-associations-with-existing-parameters)\r\n\r\n> In cases where a server believes it has an existing association on a given host/port quartet and it receives an epoch=0 ClientHello, it SHOULD proceed with a new handshake but MUST NOT destroy the existing association until the client has demonstrated reachability either by completing a cookie exchange or by completing a complete handshake including delivering a verifiable Finished message.\r\n\r\n(The same statement is also used in [DTLS 1.2, RFC6347 4.2.8.  Establishing New Associations with Existing Parameters](https://datatracker.ietf.org/doc/html/rfc6347#section-4.2.8).)\r\n\r\nBasically it's about the `SHOULD`, because in a naive interpretation of that opens also alternative ways to go. Otherwise it would be a `MUST`. Therefore I would enjoy it, if some words about that alternatives, e.g. environments or other motivation, could be added.\r\n\r\nIn my experience with the IoT usage of DTLS 1.2, it seems, that `RFC5246 - 7.2.1.  Closure Alert` is used as alternative. But that results in some unreliability (e.g. [RIOT](https://github.com/RIOT-OS/RIOT/pull/16422), down the comments, about the motivation to use `close`).\r\n\r\nReading #248 and the \"Generally, I think that's out of scope at this time.\", I somehow think, this is the same for this issue. Maybe, if it's more the rough ideas behind than the details of the alternative, it 's not that disruptive (but more helpful than using a Closure Alert).",
      "createdAt": "2021-07-15T15:46:15Z",
      "updatedAt": "2021-08-06T12:12:06Z",
      "closedAt": "2021-08-06T12:12:06Z",
      "comments": [
        {
          "author": "boaks",
          "authorAssociation": "NONE",
          "body": "I guess, it's too late.",
          "createdAt": "2021-08-06T12:12:06Z",
          "updatedAt": "2021-08-06T12:12:06Z"
        }
      ]
    },
    {
      "number": 253,
      "id": "MDU6SXNzdWU5NDYxNzcxMDk=",
      "title": "Rekeying in (D)TLS 1.3 does not update the exporter_secret",
      "url": "https://github.com/tlswg/dtls13-spec/issues/253",
      "state": "OPEN",
      "author": "emanjon",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is another major problem for SCTP/DTLS and other semi-permanent uses of DTLS 1.3 uncovered during the work on RFC6083bis.\r\n\r\nhttps://github.com/gloinul/draft-westerlund-tsvwg-dtls-over-sctp-bis\r\n\r\nThe current text is RFC6083bis is a quite unfortune (We would really like to encourage and recommend use of DTLS 1.3):\r\n\"For upper layer protocols where frequent re-run of Diffie-Hellman, rekeying of SCTP-AUTH, and server reauthentication is required and creating a new SCTP connection with DTLS 1.3 to replace the current is not a viable option it is RECOMMENDED to use DTLS 1.2.\"\r\n\r\nSCTP/DTLS uses the TLS exporter to derive keys for SCTP-AUTH. SCTP/DTLS also uses SCTP-AUTH to handle when DTLS traffic keys from old epochs can be forgotten. With DTLS 1.2, renogotiation with ECDHE updates the exporter_secret. In DTLS 1.3, KeyUpdate does not update the exporter_secret. \r\n\r\nRFC6083bis is now considering using a \"hack\" of adding the epoch value (or other info) to the DTLS 1.3 exporter context to at least get different SCTP-AUTH keys for each epoch. This would solve any \"AEAD limits\" problems with HMAC-SHA256 (we don't know what these limits would be but keying at some point seems good). It does not provide good protection against key leakage/compromise as the exporter_secret must be stored for years. A future solution for SCTP/DTLS 1.3 should make sure that an attacker is forced to do dynamic key exfiltration {{RFC7624}}.\r\n\r\nhttps://github.com/gloinul/draft-westerlund-tsvwg-dtls-over-sctp-bis/issues/52\r\n\r\nThe RFC6083bis authors discussed this today and would like to ask **if DTLS 1.3 could provide the feature that the output of the TLS exporter changes after a KeyUpdate?**\r\n\r\nWhile the epoch limitations #249 are purely DTLS, this issue is inherited from TLS 1.3.",
      "createdAt": "2021-07-16T10:56:46Z",
      "updatedAt": "2021-07-29T09:11:58Z",
      "closedAt": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree that that text is unfortunate, but I feel like I'm kind of misunderstanding the situation.\r\n\r\nBecause KeyUpdate does not introduce new entropy, I would have expected users of exporters to export a key once and then to generate fresh keys as needed in an analagous fashion to the TLS transport key ladder rather than by re-exporting, which seems like it has risks of things getting desynchronized (for instance, how does the exporter work when you are sending with epoch X but receiving with X+1). What am I missing?\r\n\r\n\r\n\r\n\r\n",
          "createdAt": "2021-07-16T14:45:13Z",
          "updatedAt": "2021-07-16T14:45:13Z"
        },
        {
          "author": "emanjon",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That is a good point. RFC6038 does (as far as know) and RFC6083bis intends to control DTLS rekeying to sync the epoch used in DTLS with the \"epoch\" used for the SCTP-AUTH key. DTLS/SCTP cannot as far as we currently see follow the 2 minute default MSL requirement in DTLS. Very frequent rekeying (minutes) would lead to a large number of keys having to be stored. As KeyUpdate updates traffic keys I think that our exporting ideas do not work at all. DTLS/SCTP has to do like you suggest (export once and do key ladder) or setup new DTLS connections.",
          "createdAt": "2021-07-29T09:08:22Z",
          "updatedAt": "2021-07-29T09:08:22Z"
        },
        {
          "author": "emanjon",
          "authorAssociation": "CONTRIBUTOR",
          "body": "FYI. We have now run into quite many problems with the interworking of semi-permanent DTLS/SCTP connections (lasting years) and DTLS 1.3:\r\n\r\n- No Diffie-Hellman rekeying\r\n- No post-handshake server authentication\r\n- No rekeying of the exporter_secret\r\n- 2^40.5 packets limit\r\n- 2 minute MSL requirement\r\n- 2^38.5 byte SCTP user message size limit\r\n\r\nOur initial plan was to just replace DTLS 1.2 with DTLS 1.3, leave DTLS/SCTP as is, but as the problems keep adding up we are now considereing quite big changes to DTLS/SCTP 1.3 to make this work:\r\nhttps://github.com/gloinul/draft-westerlund-tsvwg-dtls-over-sctp-bis/issues/52\r\n\r\nUsing new DTLS connections instead of KeyUpdate could potentially address the first five, but is a significant change. ",
          "createdAt": "2021-07-29T09:11:57Z",
          "updatedAt": "2021-07-29T09:11:57Z"
        }
      ]
    },
    {
      "number": 254,
      "id": "MDU6SXNzdWU5NjQ0NTYxNzg=",
      "title": "Mention RFC 7457 in Security section",
      "url": "https://github.com/tlswg/dtls13-spec/issues/254",
      "state": "OPEN",
      "author": "elvey",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I think it makes sense to refer to [RFC 7457](https://datatracker.ietf.org/doc/rfc7457/), \"Summarizing Known Attacks on Transport Layer Security (TLS) and Datagram TLS (DTLS)\" from the Security Considerations section.\r\nI think this would just be an informative reference.  Would improve the draft, IMVHO. \r\n\r\n<sup>(Hopefully I'm following [CONTRIBUTING.md](https://github.com/tlswg/dtls13-spec/blob/master/CONTRIBUTING.md) by opening this issue.  If such a Security Considerations section change is considered to change the spec, and 1+ editors support a change like this then I should post to the list? [8/15 edit: It's in today's GitHub digest; hope it garners a response.])</sup>",
      "createdAt": "2021-08-09T23:06:12Z",
      "updatedAt": "2021-08-15T18:10:36Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTE4MjQ5Mjc3",
      "title": "Add more references",
      "url": "https://github.com/tlswg/dtls13-spec/pull/1",
      "state": "MERGED",
      "author": "xiaoyinl",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Add references to \r\n* RFC 768: UDP\r\n* RFC 4347: DTLS 1.0\r\n* RFC 4346: TLS 1.1\r\n* RFC 6347: DTLS 1.2\r\n* RFC 5246: TLS 1.2 \r\n\r\nin the Introduction section. Currently they are mentioned but with no citations.",
      "createdAt": "2017-04-28T23:07:38Z",
      "updatedAt": "2017-06-24T15:33:34Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "7e74d161ae006ab92910d140f7354fc04c492507",
      "headRepository": null,
      "headRefName": "patch-1",
      "headRefOid": "2b53697c242122d2c6ea984c970a3eb3d107e44a",
      "closedAt": "2017-06-24T15:25:53Z",
      "mergedAt": "2017-06-24T15:25:53Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "61e13ee44bbf5f2985a1b34d82c5b4af3e91d381"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 9,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI3MzMyNDYx",
      "title": "Implement ACKs",
      "url": "https://github.com/tlswg/dtls13-spec/pull/9",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I have taken a slightly different approach here than we discussed\r\nin Chicago. Specifically:\r\n\r\n- ACKs are not handshake messages but a new content type. This\r\n  avoids the need to ack ACKs or worry about reassembling\r\n  when ACKs are lost.\r\n\r\n- The receipt of a flight also counts as an implicit ACK and\r\n  so you shouldn't ACK full flights. I tried removing this\r\n  feature but it leads to weird anomalies where you have\r\n  two flights you should be retransmitting if the ACKs get\r\n  lost.\r\n\r\n- ACKs are always encrypted with the then-current key.\r\n\r\n- I also removed the rule that you don't stop retransmitting\r\n  when you receive a partial flight. That was intended to have\r\n  fast retransmission for missing messages because the retransmit\r\n  of flight A triggered retransmission of partial flight B, but\r\n  ACKs serve this purpose.",
      "createdAt": "2017-06-24T14:53:31Z",
      "updatedAt": "2017-07-03T17:29:20Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "8ba9ec786eb04440b775bb42c94d1df5c70c4fee",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "improve_ack",
      "headRefOid": "d3fb0a680a6098d65d8573283b3d6714729af670",
      "closedAt": "2017-07-03T17:29:20Z",
      "mergedAt": "2017-07-03T17:29:20Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "f10525040128c0a3703f0605a206b27aff031fcf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNTI5NTU=",
          "commit": {
            "abbreviatedOid": "a7cda22"
          },
          "author": "ianswett",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-06-26T19:04:16Z",
          "updatedAt": "2017-06-26T19:04:16Z",
          "comments": [
            {
              "originalPosition": 460,
              "body": "Is the current retransmit timer a single RTT?  Commonly the retransmission timer(ie: RTO timer) is based on the delayed ack time, so I think basing the delayed ack timer on smoothed RTT or another RTT based metric is wiser than specifying it from a retransmit timer, assuming that's possible.\r\n\r\n1/4 RTT seems like a good recommendation for most RTTs, though for very small RTTs, this could be very small, particularly if it's smaller than the timer granularity.  I'm not sure you need explicit wording on that or not?",
              "createdAt": "2017-06-26T19:04:16Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNDU0NTU=",
          "commit": {
            "abbreviatedOid": "a7cda22"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2017-06-26T18:36:32Z",
          "updatedAt": "2017-06-26T21:17:41Z",
          "comments": [
            {
              "originalPosition": 257,
              "body": "\"receive next flight\" is now split",
              "createdAt": "2017-06-26T18:36:32Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            },
            {
              "originalPosition": 320,
              "body": "You should mention here that receiving a partial flight causes the implementation to send an ACK.  Not because it is a state transition, but because that is shown on the diagram, but not otherwise mentioned in prose.",
              "createdAt": "2017-06-26T18:43:49Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            },
            {
              "originalPosition": 389,
              "body": "Missing message_seq=3 here.",
              "createdAt": "2017-06-26T18:45:15Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            },
            {
              "originalPosition": 442,
              "body": "Yes, I think that you need to say that ACK needs to use an epoch that is equal to or higher than the one used in the records that it acknowledges.\r\n\r\nFor simplicity, keeping this to the current keys avoids a lot of mess.",
              "createdAt": "2017-06-26T18:47:20Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            },
            {
              "originalPosition": 420,
              "body": "I think that you need to explicitly mention that ACK acknowledges handshake messages, and only those with a content type of handshake.",
              "createdAt": "2017-06-26T18:49:09Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            },
            {
              "originalPosition": 415,
              "body": "I also think that making ACK a handshake message is unnecessary.  This doesn't need fragmentation and reassembly, and certainly doesn't need 2^24 length.  Just pack the data in the record directly.",
              "createdAt": "2017-06-26T18:50:11Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            },
            {
              "originalPosition": 424,
              "body": "At 8 octets each and with flights taking at most a handful of records, would 2^8 be enough here?  That's 31 packets.  I think  that's enough.",
              "createdAt": "2017-06-26T18:51:10Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            },
            {
              "originalPosition": 455,
              "body": "Even for duplicates that they discard?",
              "createdAt": "2017-06-26T18:54:13Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            },
            {
              "originalPosition": 447,
              "body": "nit: the indent here is odd",
              "createdAt": "2017-06-26T18:57:19Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            },
            {
              "originalPosition": 471,
              "body": "Might like to add that this can be immediate.",
              "createdAt": "2017-06-26T18:57:53Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            },
            {
              "originalPosition": 487,
              "body": "What is implied here is that the implementation tracks the message fragments that it sent in each record.",
              "createdAt": "2017-06-26T18:58:52Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MzIxNjM=",
          "commit": {
            "abbreviatedOid": "a7cda22"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-07-01T15:32:32Z",
          "updatedAt": "2017-07-01T15:32:32Z",
          "comments": [
            {
              "originalPosition": 460,
              "body": "It's actually pretty much undefined. We mostly just say \"start with a timer of X and then back off\".  For the main handshake, generally the only flight that is sent with an RTT estimate is the client's second flight, so it's kind of ad hoc. @ianswett would welcome wording here.",
              "createdAt": "2017-07-01T15:32:32Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MzIyNTc=",
          "commit": {
            "abbreviatedOid": "a7cda22"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-07-01T15:37:08Z",
          "updatedAt": "2017-07-01T15:37:08Z",
          "comments": [
            {
              "originalPosition": 455,
              "body": "Good question. TCP does this, but then we're not TCP",
              "createdAt": "2017-07-01T15:37:08Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTE1Mzc=",
          "commit": {
            "abbreviatedOid": "a7cda22"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-07-03T17:15:13Z",
          "updatedAt": "2017-07-03T17:15:13Z",
          "comments": [
            {
              "originalPosition": 320,
              "body": "It actually is mentioned but I added an xref",
              "createdAt": "2017-07-03T17:15:13Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTE2NDI=",
          "commit": {
            "abbreviatedOid": "a7cda22"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-07-03T17:16:00Z",
          "updatedAt": "2017-07-03T17:16:00Z",
          "comments": [
            {
              "originalPosition": 415,
              "body": "That's just a leftover. It's not ahandshake message.",
              "createdAt": "2017-07-03T17:16:00Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTE3NjI=",
          "commit": {
            "abbreviatedOid": "a7cda22"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-07-03T17:17:03Z",
          "updatedAt": "2017-07-03T17:17:03Z",
          "comments": [
            {
              "originalPosition": 420,
              "body": "That's below",
              "createdAt": "2017-07-03T17:17:03Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTE3ODE=",
          "commit": {
            "abbreviatedOid": "a7cda22"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-07-03T17:17:13Z",
          "updatedAt": "2017-07-03T17:17:13Z",
          "comments": [
            {
              "originalPosition": 424,
              "body": "Eh, it's one byte, so I'd rather be sure.",
              "createdAt": "2017-07-03T17:17:13Z",
              "updatedAt": "2017-07-03T17:28:27Z"
            }
          ]
        }
      ]
    },
    {
      "number": 10,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI3OTc1NDM3",
      "title": "Remove trailing whitespace",
      "url": "https://github.com/tlswg/dtls13-spec/pull/10",
      "state": "MERGED",
      "author": "beurdouche",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-06-28T17:18:37Z",
      "updatedAt": "2017-06-28T17:33:39Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "61e13ee44bbf5f2985a1b34d82c5b4af3e91d381",
      "headRepository": "beurdouche/dtls13-spec",
      "headRefName": "review",
      "headRefOid": "692b9341b2160f4e9e40ed05e606d9b626d3da9b",
      "closedAt": "2017-06-28T17:33:39Z",
      "mergedAt": "2017-06-28T17:33:39Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "8ba9ec786eb04440b775bb42c94d1df5c70c4fee"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 11,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI5Mjg2NzQy",
      "title": "Minor editorial alignments on the TLS specification style",
      "url": "https://github.com/tlswg/dtls13-spec/pull/11",
      "state": "MERGED",
      "author": "beurdouche",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-07-06T21:36:53Z",
      "updatedAt": "2017-07-07T01:34:26Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "35d0aea07876ac3395caa69015f2aed078c0475e",
      "headRepository": "beurdouche/dtls13-spec",
      "headRefName": "beurdouche_editorial",
      "headRefOid": "76b619c7c80901abba6e7ffff179abb56cdda50b",
      "closedAt": "2017-07-07T01:34:26Z",
      "mergedAt": "2017-07-07T01:34:26Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "a8eff29c52ac4f12123cc6e2efefa76aac5ed3a7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 12,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI5NDY4Njkx",
      "title": "Attempt to clarify susceptible/vunlerable re DoS",
      "url": "https://github.com/tlswg/dtls13-spec/pull/12",
      "state": "MERGED",
      "author": "kaduk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Attempt to address #3 though I'm not entirely happy with this text.\r\n\r\nHaving gone through the existing text looking at \"vulnerable\" and \"susceptible\", it doesn't seem in particularly bad shape, so my comment there may have been stronger than needed.",
      "createdAt": "2017-07-07T19:07:03Z",
      "updatedAt": "2017-10-26T14:24:26Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "a8eff29c52ac4f12123cc6e2efefa76aac5ed3a7",
      "headRepository": "kaduk/dtls13-spec",
      "headRefName": "reflect",
      "headRefOid": "9ee874ad3f13c726c315b7143a67fe21ae46b4b1",
      "closedAt": "2017-10-26T14:24:26Z",
      "mergedAt": "2017-10-26T14:24:26Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "53fb17487716c0e1db5ff94d5e743570bdd6a0ea"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 14,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ1MjE2MjU2",
      "title": "Document the use of empty ACKs.",
      "url": "https://github.com/tlswg/dtls13-spec/pull/14",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-10-06T18:23:21Z",
      "updatedAt": "2017-10-26T14:23:47Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "a8eff29c52ac4f12123cc6e2efefa76aac5ed3a7",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "update_acks",
      "headRefOid": "24c2a601421b46cba3b37a9a0087e475bd3f97a9",
      "closedAt": "2017-10-26T14:23:47Z",
      "mergedAt": "2017-10-26T14:23:47Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "85a6a97d677695dda4d3c1b191b0f248e7b1fdd0"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 15,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ4OTE4NDE5",
      "title": "Text mentioning the security implications of the implicit key update \u2026",
      "url": "https://github.com/tlswg/dtls13-spec/pull/15",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026procedure",
      "createdAt": "2017-10-26T12:19:45Z",
      "updatedAt": "2018-10-23T17:22:36Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "a8eff29c52ac4f12123cc6e2efefa76aac5ed3a7",
      "headRepository": "hannestschofenig/dtls13-spec",
      "headRefName": "patch-1",
      "headRefOid": "ef310c2c6d74f28d2cab3ae88bd0a3a664827a96",
      "closedAt": "2017-10-26T14:24:55Z",
      "mergedAt": "2017-10-26T14:24:55Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "690490dbdc17f3975784f6c47c1a8b93f1cc8596"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 16,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ4OTc3MTM4",
      "title": "Short header format",
      "url": "https://github.com/tlswg/dtls13-spec/pull/16",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "@martinthomson, PTAL",
      "createdAt": "2017-10-26T15:59:39Z",
      "updatedAt": "2017-10-29T21:00:47Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "690490dbdc17f3975784f6c47c1a8b93f1cc8596",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "short_headers",
      "headRefOid": "210977c979bda7cf2a9d241d74765dead8d2bc21",
      "closedAt": "2017-10-29T21:00:47Z",
      "mergedAt": "2017-10-29T21:00:47Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "785dbf1d5941ffb2fefe5db1dc9f6f54f8e26ccb"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Oops. Thanks.\n\nOn Thu, Oct 26, 2017 at 1:11 PM, Hannes Tschofenig <notifications@github.com\n> wrote:\n\n> *@hannestschofenig* commented on this pull request.\n> ------------------------------\n>\n> In draft-ietf-tls-dtls13.md\n> <https://github.com/tlswg/dtls13-spec/pull/16#discussion_r147253263>:\n>\n> > @@ -347,6 +392,51 @@ allowing the sequence number to wrap.\n>  Implementations MUST NOT allow the epoch to wrap, but instead MUST establish\n>  a new association, terminating the old association.\n>\n> +### Determining the Header Format\n> +\n> +Implementations can distinguish the two header formats by examining\n> +the first byte, which in the DTLSCiphertext header represents the\n> +content type. The only valid values for the content type are\n> +alert(21), handshake(22), or application_data(23), which actually\n>\n> there is also the ACK message, which has a separate content type.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tlswg/dtls13-spec/pull/16#pullrequestreview-72325118>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABD1odzUOr5KGMDlf2kO6sYWGKKqCrvCks5swOdogaJpZM4QH0Ic>\n> .\n>\n",
          "createdAt": "2017-10-26T20:12:18Z",
          "updatedAt": "2017-10-26T20:12:18Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Sorry, I forgot to mention that I plan to do a separate PR for shrinking DTLS ciphertext. I have part of it in my buffer, but got this up and had to move on to something else for a bit.\r\n",
          "createdAt": "2017-10-26T22:35:18Z",
          "updatedAt": "2017-10-26T22:37:22Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIzMjA1NDk=",
          "commit": {
            "abbreviatedOid": "243586e"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-10-26T19:55:17Z",
          "updatedAt": "2017-10-26T19:55:17Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "maybe it should say \"allow multiplexing between DTLS and VoIP protocols (STUN, RTP/RTCP, etc.)",
              "createdAt": "2017-10-26T19:55:17Z",
              "updatedAt": "2017-10-29T21:00:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIzMjUxMTg=",
          "commit": {
            "abbreviatedOid": "243586e"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-10-26T20:11:20Z",
          "updatedAt": "2017-10-26T20:11:20Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "there is also the ACK message, which has a separate content type.",
              "createdAt": "2017-10-26T20:11:20Z",
              "updatedAt": "2017-10-29T21:00:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIzNTcxODE=",
          "commit": {
            "abbreviatedOid": "f5facaa"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Did you consider adding a second shorter format for handshake and 0-RTT but decided against it?  I was thinking about that some more just now and it seems like there might be some value in it (if only so that we use fewer bytes for constrained implementations).  I'm happy to do that as a second change.\r\n\r\nThat model would take a ContentType is application_data to indicate a shorter header format.  You could reduce that to 5 octets: type (8), epoch+seq_no (2+14 bits should be enough here if 12 bits is enough for the short header), and length (16).",
          "createdAt": "2017-10-26T22:12:47Z",
          "updatedAt": "2017-10-26T22:27:17Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "deprotection doesn't appear to be a word, maybe \"when removing packet protection, the nonce is computed...\"",
              "createdAt": "2017-10-26T22:12:47Z",
              "updatedAt": "2017-10-29T21:00:36Z"
            },
            {
              "originalPosition": 35,
              "body": "At this point I would point out that you can include multiple records in the same datagram.",
              "createdAt": "2017-10-26T22:13:57Z",
              "updatedAt": "2017-10-29T21:00:36Z"
            },
            {
              "originalPosition": 94,
              "body": "deprotection again",
              "createdAt": "2017-10-26T22:14:41Z",
              "updatedAt": "2017-10-29T21:00:36Z"
            },
            {
              "originalPosition": 116,
              "body": "Are you suggesting that the next and previous epoch are checked?  Or maybe all potentially active epochs?  If so, you need to mention that the next sequence number is from the selected epoch and not the current one.\r\n\r\nI think that we can avoid some of the potential for variation with a different algorithm (noting of course that you permit variations).  If we restrict KeyUpdate to only one outstanding change, then you only ever have to select between two epochs.  If you require acknowledgment of KeyUpdate before switching epochs, then you know to expect a change.\r\n\r\nThen, without KeyUpdate, you have just one epoch and can discard records that don't match parity.\r\n\r\nWith KeyUpdate (which you should put in a new section), you have two epochs active from the moment that you send an acknowledgment for a KeyUpdate.  You can select between them using the bit.",
              "createdAt": "2017-10-26T22:21:23Z",
              "updatedAt": "2017-10-29T21:00:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIzNjE1MTI=",
          "commit": {
            "abbreviatedOid": "f5facaa"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-10-26T22:34:47Z",
          "updatedAt": "2017-10-26T22:34:47Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "I agree with these comments. Note the OPEN ISSUE markers below. I was hoping to just get this in.\r\n",
              "createdAt": "2017-10-26T22:34:47Z",
              "updatedAt": "2017-10-29T21:00:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIzNjMxNzM=",
          "commit": {
            "abbreviatedOid": "f5facaa"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-10-26T22:44:02Z",
          "updatedAt": "2017-10-26T22:44:02Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "Missed this:  it isn't \"most recently\".  In QUIC we use the numeric closest to the highest successfully decrypted packet plus one.  Or the closest to the next expected packet.  Otherwise delayed packets will shift the window backwards.  (Basically, this means that negative differences are used to allow for delays, and positive differences for lost packets).",
              "createdAt": "2017-10-26T22:44:02Z",
              "updatedAt": "2017-10-29T21:00:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIzNjg4OTU=",
          "commit": {
            "abbreviatedOid": "404e6a8"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "I'm happy to defer fixing KeyUpdate, which is basically non-functional as it is.  This is fine on that basis.",
          "createdAt": "2017-10-26T23:19:56Z",
          "updatedAt": "2017-10-26T23:19:56Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI1MDE0ODI=",
          "commit": {
            "abbreviatedOid": "404e6a8"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-10-27T13:19:14Z",
          "updatedAt": "2017-10-27T13:23:32Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "Maybe \"an application_traffic_secret for message protection\" to be consistent with the previous sentence?",
              "createdAt": "2017-10-27T13:19:14Z",
              "updatedAt": "2017-10-29T21:00:36Z"
            }
          ]
        }
      ]
    },
    {
      "number": 17,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ4OTkyODg4",
      "title": "Reformatted Transport Mapping Section",
      "url": "https://github.com/tlswg/dtls13-spec/pull/17",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Added references to RSL/MFL.\r\nRe-arranged the text that belongs together.",
      "createdAt": "2017-10-26T17:06:29Z",
      "updatedAt": "2018-10-23T17:22:39Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "690490dbdc17f3975784f6c47c1a8b93f1cc8596",
      "headRepository": "hannestschofenig/dtls13-spec",
      "headRefName": "patch-2",
      "headRefOid": "7343067e14d481d2cfeebc9a2208824cee35b41a",
      "closedAt": "2017-11-24T17:16:54Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "There is one sentence from version -01 that appears to be wrong: \r\n\"\r\n   Multiple DTLS records may be placed in a single datagram.  They are\r\n   simply encoded consecutively.  The DTLS record framing is sufficient\r\n   to determine the boundaries.  Note, however, that the first byte of\r\n   the datagram payload must be the beginning of a record.  Records may\r\n   not span datagrams.\r\n\"\r\n\r\nWhen the first byte of a datagram must be the beginning of a record then it is not possible for a record to span multiple datagrams. Hence, the sentence \"Records may not span datagrams.\" should actually read \"Records MUST NOT span datagrams.\"\r\n",
          "createdAt": "2017-10-26T17:21:15Z",
          "updatedAt": "2017-10-26T17:21:15Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@hannestschofenig you seem to have reverted some other people's commits. Can you rebase?",
          "createdAt": "2017-10-26T20:57:44Z",
          "updatedAt": "2017-10-26T20:57:44Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "This definitely isn't going to apply any more. I'm closing it. Hannes, feel free to resubmit with an updated version,",
          "createdAt": "2017-11-24T17:16:54Z",
          "updatedAt": "2017-11-24T17:16:54Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIyNzUyMDM=",
          "commit": {
            "abbreviatedOid": "7343067"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-10-26T17:23:27Z",
          "updatedAt": "2017-10-26T17:23:32Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "It might be worthwhile to reference the additional rules related to the record layer definition in Section 5 of draft-ietf-tls-tls13.",
              "createdAt": "2017-10-26T17:23:27Z",
              "updatedAt": "2017-10-26T17:23:32Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI3MTA0MDE=",
          "commit": {
            "abbreviatedOid": "7343067"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-10-29T21:09:07Z",
          "updatedAt": "2017-10-29T21:09:07Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "Actually, I think this text is right. The first byte must be the beginning of a record but not vice versa.",
              "createdAt": "2017-10-29T21:09:07Z",
              "updatedAt": "2017-10-29T21:09:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 19,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ5MDQxMzcx",
      "title": "Assign code point 25 for ACK",
      "url": "https://github.com/tlswg/dtls13-spec/pull/19",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-10-26T20:46:53Z",
      "updatedAt": "2017-10-27T21:34:03Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "690490dbdc17f3975784f6c47c1a8b93f1cc8596",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "ack_code_point",
      "headRefOid": "da8571ff8c041e16c21142ef746cbe6a718a3ba6",
      "closedAt": "2017-10-27T21:34:03Z",
      "mergedAt": "2017-10-27T21:34:03Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "a6504d4b0e80a8559fd989385513e81fe8e125ad"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 20,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ5MDY4MzM2",
      "title": "Shrink long header",
      "url": "https://github.com/tlswg/dtls13-spec/pull/20",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-10-26T23:20:11Z",
      "updatedAt": "2017-10-29T21:02:53Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "690490dbdc17f3975784f6c47c1a8b93f1cc8596",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "shrink_long_header",
      "headRefOid": "407c3425fb48e4ce17224884e3d272f5d5e80eb7",
      "closedAt": "2017-10-29T21:02:53Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Merged by hand",
          "createdAt": "2017-10-29T21:02:53Z",
          "updatedAt": "2017-10-29T21:02:53Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0MDM5NjE=",
          "commit": {
            "abbreviatedOid": "2d6228a"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-10-27T05:06:03Z",
          "updatedAt": "2017-10-27T05:06:04Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "\"The first 2 bits hold low order bits from the epoch and the remaining 30 bits hold the low order bits from the sequence number.\"  Or something like that.",
              "createdAt": "2017-10-27T05:06:03Z",
              "updatedAt": "2017-10-28T13:58:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI0MDQwMjc=",
          "commit": {
            "abbreviatedOid": "2d6228a"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-10-27T05:06:49Z",
          "updatedAt": "2017-10-27T05:06:49Z",
          "comments": [
            {
              "originalPosition": 137,
              "body": "The epoch is two bits in the long header.",
              "createdAt": "2017-10-27T05:06:49Z",
              "updatedAt": "2017-10-28T13:58:30Z"
            }
          ]
        }
      ]
    },
    {
      "number": 21,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ5MjE0NTA5",
      "title": "Move back to a KeyUpdate-type structure for updating keys. This works",
      "url": "https://github.com/tlswg/dtls13-spec/pull/21",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "better now that we have ACK. This PR is technically independent of PR#20,\r\nbut actually has a dependency because of epoch reconstruction. Before\r\nlanding I'll rebase and fix up the reference.",
      "createdAt": "2017-10-27T15:10:47Z",
      "updatedAt": "2017-10-29T21:07:13Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "690490dbdc17f3975784f6c47c1a8b93f1cc8596",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "update_key_update",
      "headRefOid": "346febbacfcac593bf5c062cecc7298466ae0997",
      "closedAt": "2017-10-29T21:07:13Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "While I liked the idea of the implicit key update we also noticed that it does not fit nicely into layered design where the record layer message handling happens at a different layer than the handshake itself. The implicit key update turned our design into a mess. Hence, I think it is better to align DTLS 1.3 with the explicit KeyUpdate message from TLS 1.3.",
          "createdAt": "2017-10-29T14:46:46Z",
          "updatedAt": "2017-10-29T14:46:46Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Merged by hand",
          "createdAt": "2017-10-29T21:07:13Z",
          "updatedAt": "2017-10-29T21:07:13Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 27,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ5OTY1MzM0",
      "title": "Typo",
      "url": "https://github.com/tlswg/dtls13-spec/pull/27",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-11-01T05:33:12Z",
      "updatedAt": "2017-11-24T16:42:55Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "84df3e638b8eefce0b495161afcfb50b01033b43",
      "headRepository": "martinthomson/dtls13-spec",
      "headRefName": "patch-1",
      "headRefOid": "c760e7097547ca813bd9878b31133350593bb0f6",
      "closedAt": "2017-11-24T16:42:55Z",
      "mergedAt": "2017-11-24T16:42:55Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "4774c14b87b7c1f1bbdfd07dcf26fa306f84c503"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 28,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ5OTY1NjI3",
      "title": "Clarify no implicit acknowledgement for KeyUpdate",
      "url": "https://github.com/tlswg/dtls13-spec/pull/28",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-11-01T05:36:15Z",
      "updatedAt": "2017-11-24T16:42:31Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "84df3e638b8eefce0b495161afcfb50b01033b43",
      "headRepository": "martinthomson/dtls13-spec",
      "headRefName": "patch-2",
      "headRefOid": "dbdc5eab388a7c5b75abc1745ce2c300c1019196",
      "closedAt": "2017-11-24T16:42:31Z",
      "mergedAt": "2017-11-24T16:42:31Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "5c1cd3f8abf75b97fa875d87d7938986226cda50"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 30,
      "id": "MDExOlB1bGxSZXF1ZXN0MTU0NTg2MTIz",
      "title": "Key update timing",
      "url": "https://github.com/tlswg/dtls13-spec/pull/30",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-11-24T17:00:39Z",
      "updatedAt": "2018-03-04T19:15:27Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "4774c14b87b7c1f1bbdfd07dcf26fa306f84c503",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "key_update_timing",
      "headRefOid": "3edff13e4fbed7a4ae786a413711aaac4dd4ba68",
      "closedAt": "2018-03-04T19:15:27Z",
      "mergedAt": "2018-03-04T19:15:27Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "4c753ae55a62ff91e475db855f5d804dd7e7c4a1"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 31,
      "id": "MDExOlB1bGxSZXF1ZXN0MTU0NTg4MDI0",
      "title": "Ignore the compatibility mode. Fixes #29",
      "url": "https://github.com/tlswg/dtls13-spec/pull/31",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-11-24T17:15:09Z",
      "updatedAt": "2018-03-04T19:04:56Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "61501e0e74ded361c49a1133d548d15a636cb98e",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "ignore_compat_mode",
      "headRefOid": "bf1c6ea67205bbbf20f62c283c2b54317a1b97be",
      "closedAt": "2018-03-04T19:04:56Z",
      "mergedAt": "2018-03-04T19:04:56Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "ec282f3319f5d3d385d4c5e49d9d827bfdbaa229"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 32,
      "id": "MDExOlB1bGxSZXF1ZXN0MTYxNTAwOTAw",
      "title": "fix typo in Figure 2 caption",
      "url": "https://github.com/tlswg/dtls13-spec/pull/32",
      "state": "MERGED",
      "author": "iluxonchik",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-01-06T23:40:22Z",
      "updatedAt": "2018-01-06T23:44:10Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "3b2062335b436d68b90e385b64f57056053cc410",
      "headRepository": "iluxonchik/dtls13-spec",
      "headRefName": "typo-fix",
      "headRefOid": "b8102896fc378b0c735c6bd2463d217b9da85f2f",
      "closedAt": "2018-01-06T23:44:10Z",
      "mergedAt": "2018-01-06T23:44:10Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "5a74770823e12b6e44885b95422691297e4aa33c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 33,
      "id": "MDExOlB1bGxSZXF1ZXN0MTYyMjgxMzYz",
      "title": "Grammar fixes in \"Anti-Replay\" paragraph",
      "url": "https://github.com/tlswg/dtls13-spec/pull/33",
      "state": "MERGED",
      "author": "iluxonchik",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I do understand that the text is consistent with the one in [RFC 4303 Section 3.4.3](https://tools.ietf.org/html/rfc4303#section-3.4.3), but I think that it could benefit from some rework.\r\n ",
      "createdAt": "2018-01-11T02:50:16Z",
      "updatedAt": "2018-03-04T19:27:52Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5a74770823e12b6e44885b95422691297e4aa33c",
      "headRepository": "iluxonchik/dtls13-spec",
      "headRefName": "grammar-fixes",
      "headRefOid": "1641a62715764bf871abd746776cfc83fefe3271",
      "closedAt": "2018-03-04T19:27:52Z",
      "mergedAt": "2018-03-04T19:27:51Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "0c8ef95a0fc8b594a4d227400ac2e1f2301e2ea5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 34,
      "id": "MDExOlB1bGxSZXF1ZXN0MTYyMjgzNzIz",
      "title": "Consistency fix",
      "url": "https://github.com/tlswg/dtls13-spec/pull/34",
      "state": "MERGED",
      "author": "iluxonchik",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-01-11T03:13:00Z",
      "updatedAt": "2018-03-04T19:29:11Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5a74770823e12b6e44885b95422691297e4aa33c",
      "headRepository": "iluxonchik/dtls13-spec",
      "headRefName": "consistency-fix",
      "headRefOid": "ae7eef0d5caca1bcbb5ce5b4eccef4efbaadce81",
      "closedAt": "2018-03-04T19:29:11Z",
      "mergedAt": "2018-03-04T19:29:11Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "c67fb5bc2bdd870294d21a368b72a3735de21641"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 35,
      "id": "MDExOlB1bGxSZXF1ZXN0MTY0MjIxMjk1",
      "title": "updating ike reference",
      "url": "https://github.com/tlswg/dtls13-spec/pull/35",
      "state": "MERGED",
      "author": "seanturner",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Avoid I-D nit.",
      "createdAt": "2018-01-22T04:33:04Z",
      "updatedAt": "2018-03-04T19:06:44Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5a74770823e12b6e44885b95422691297e4aa33c",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "ike_ref",
      "headRefOid": "0b0a789cfe2ccebfefd496bc7da1a8fb353790be",
      "closedAt": "2018-03-04T19:06:44Z",
      "mergedAt": "2018-03-04T19:06:44Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "b0505d5bb5c20ff89b762cfb7d6de0430b3f6dd8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 36,
      "id": "MDExOlB1bGxSZXF1ZXN0MTY0MjIyMDE5",
      "title": "updating conventions paragraph",
      "url": "https://github.com/tlswg/dtls13-spec/pull/36",
      "state": "MERGED",
      "author": "seanturner",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Avoid GEN-ART comment.",
      "createdAt": "2018-01-22T04:41:59Z",
      "updatedAt": "2018-03-04T19:09:12Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5a74770823e12b6e44885b95422691297e4aa33c",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "conventions",
      "headRefOid": "07be0401e76ff9249b1196bbe68b605d72196e6c",
      "closedAt": "2018-03-04T19:09:12Z",
      "mergedAt": "2018-03-04T19:09:12Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "3ef6a9b69d887cea0fb86b73b7d7721096953d0c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 41,
      "id": "MDExOlB1bGxSZXF1ZXN0MTY3NTIxMTg3",
      "title": "Nittty nits",
      "url": "https://github.com/tlswg/dtls13-spec/pull/41",
      "state": "MERGED",
      "author": "seanturner",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A collection of nits I noted while reviewing the draft.",
      "createdAt": "2018-02-06T20:27:13Z",
      "updatedAt": "2018-03-04T19:21:43Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5a74770823e12b6e44885b95422691297e4aa33c",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "nittty_nits",
      "headRefOid": "974584ff66192fb6621259e64c7b3d3c0618ecce",
      "closedAt": "2018-03-04T19:21:43Z",
      "mergedAt": "2018-03-04T19:21:43Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "974584ff66192fb6621259e64c7b3d3c0618ecce"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 42,
      "id": "MDExOlB1bGxSZXF1ZXN0MTY4NDIwMDI2",
      "title": "Sean comments",
      "url": "https://github.com/tlswg/dtls13-spec/pull/42",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-02-10T20:44:54Z",
      "updatedAt": "2018-02-10T20:45:00Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5a74770823e12b6e44885b95422691297e4aa33c",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "sean_comments",
      "headRefOid": "8428d45cb04bb2ef2c62ef42d6d671e7c34d3476",
      "closedAt": "2018-02-10T20:45:00Z",
      "mergedAt": "2018-02-10T20:45:00Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "be91c8169fc8edbe21ffbdceb6e5e540f6a5e2b5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 43,
      "id": "MDExOlB1bGxSZXF1ZXN0MTcyNzI2NjUw",
      "title": "HelloRetryRequest message clarified",
      "url": "https://github.com/tlswg/dtls13-spec/pull/43",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-03-04T16:05:12Z",
      "updatedAt": "2018-10-23T17:22:42Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "be91c8169fc8edbe21ffbdceb6e5e540f6a5e2b5",
      "headRepository": "hannestschofenig/dtls13-spec",
      "headRefName": "patch-3",
      "headRefOid": "83a6bbb44998104c01266fab6351c155dc60bb26",
      "closedAt": "2018-03-04T19:26:36Z",
      "mergedAt": "2018-03-04T19:26:36Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "83a6bbb44998104c01266fab6351c155dc60bb26"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 44,
      "id": "MDExOlB1bGxSZXF1ZXN0MTc1NjgyMDgx",
      "title": "change function name to term",
      "url": "https://github.com/tlswg/dtls13-spec/pull/44",
      "state": "MERGED",
      "author": "iluxonchik",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "\"Transcript-Hash\" is the name of the function. I belive it would be more appropriate to use\r\nthe \"transcript hash\" term here.",
      "createdAt": "2018-03-17T04:05:36Z",
      "updatedAt": "2018-10-21T14:38:44Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "07ee3793f193b3b2c4dba8b2d2d99f4c181b4a3c",
      "headRepository": "iluxonchik/dtls13-spec",
      "headRefName": "fix-term-usage",
      "headRefOid": "898c9545f8fd5085cac7a3c70ad963a2cc7bc928",
      "closedAt": "2018-10-21T14:38:44Z",
      "mergedAt": "2018-10-21T14:38:44Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "9b2c3956aea07cdf40cadf4a28009e0c696391f9"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 45,
      "id": "MDExOlB1bGxSZXF1ZXN0MTc1NjgyNTcy",
      "title": "grammar fixes in DoS section",
      "url": "https://github.com/tlswg/dtls13-spec/pull/45",
      "state": "MERGED",
      "author": "iluxonchik",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-03-17T04:24:11Z",
      "updatedAt": "2018-10-21T14:39:10Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "07ee3793f193b3b2c4dba8b2d2d99f4c181b4a3c",
      "headRepository": "iluxonchik/dtls13-spec",
      "headRefName": "dos-section-grammar-fix",
      "headRefOid": "513267d5d26fe47b10c71a8f55bb36a808003786",
      "closedAt": "2018-10-21T14:39:10Z",
      "mergedAt": "2018-10-21T14:39:10Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "776f03f74bd2683b35d40c44b84ea8fc3e617dea"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 47,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk4MDk5NjQw",
      "title": "Unified record layer and CID",
      "url": "https://github.com/tlswg/dtls13-spec/pull/47",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-06-28T17:26:30Z",
      "updatedAt": "2018-10-23T17:22:45Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "07ee3793f193b3b2c4dba8b2d2d99f4c181b4a3c",
      "headRepository": "hannestschofenig/dtls13-spec",
      "headRefName": "unified-header",
      "headRefOid": "7f70fcde7c7a2511e9b4ea04fa878d07ea600aa8",
      "closedAt": "2018-07-02T13:42:27Z",
      "mergedAt": "2018-07-02T13:42:27Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "7f70fcde7c7a2511e9b4ea04fa878d07ea600aa8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMzMDQ3NDgz",
          "commit": {
            "abbreviatedOid": "e60fabf"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-06-28T22:42:53Z",
          "updatedAt": "2018-06-28T22:50:51Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "different from",
              "createdAt": "2018-06-28T22:42:53Z",
              "updatedAt": "2018-06-29T19:46:59Z"
            },
            {
              "originalPosition": 8,
              "body": "changes to previous versions of the DTLS record layer: \r\n\r\nRemove \"the changes are\"",
              "createdAt": "2018-06-28T22:43:15Z",
              "updatedAt": "2018-06-29T19:46:59Z"
            },
            {
              "originalPosition": 8,
              "body": "This text is kind of confusing because some of these are TLS -> DTLS changes and some are DTLS 1.2 -> DTLS 1.3 changes. I think I would just remove the bit about the DTLS changes or put at the end \"Note that the DTLS 1.3 record layer is different from the DTLS 1.2 record layer.\"",
              "createdAt": "2018-06-28T22:45:23Z",
              "updatedAt": "2018-06-29T19:46:59Z"
            },
            {
              "originalPosition": 22,
              "body": "I think you want to say variable length header.",
              "createdAt": "2018-06-28T22:46:08Z",
              "updatedAt": "2018-06-29T19:46:59Z"
            },
            {
              "originalPosition": 37,
              "body": "This isn't correct. We removed it.",
              "createdAt": "2018-06-28T22:46:45Z",
              "updatedAt": "2018-06-29T19:46:59Z"
            },
            {
              "originalPosition": 37,
              "body": "I think I would just stop trying to describe this in TLS syntax.",
              "createdAt": "2018-06-28T22:47:01Z",
              "updatedAt": "2018-06-29T19:46:59Z"
            },
            {
              "originalPosition": 74,
              "body": "This bit is all wrong.",
              "createdAt": "2018-06-28T22:47:25Z",
              "updatedAt": "2018-06-29T19:46:59Z"
            },
            {
              "originalPosition": 310,
              "body": "Can you actually write the PNE encryption?",
              "createdAt": "2018-06-28T22:48:21Z",
              "updatedAt": "2018-06-29T19:46:59Z"
            },
            {
              "originalPosition": 224,
              "body": "I'm not sure how excited I am about RequestConnectionId.... Do you think we really need it?",
              "createdAt": "2018-06-28T22:49:43Z",
              "updatedAt": "2018-06-29T19:46:59Z"
            },
            {
              "originalPosition": 224,
              "body": "You should say that you MUST NOT send either of these messages if oyu didn't negotiate CID.",
              "createdAt": "2018-06-28T22:50:48Z",
              "updatedAt": "2018-06-29T19:46:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMzNDY0NDQz",
          "commit": {
            "abbreviatedOid": "ab954f0"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2018-07-01T20:17:04Z",
          "updatedAt": "2018-07-01T20:18:10Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "I know it's a pain, but can you put the plaintext in the first column",
              "createdAt": "2018-07-01T20:17:04Z",
              "updatedAt": "2018-07-01T20:18:10Z"
            },
            {
              "originalPosition": 46,
              "body": "I think CID should go before length. That would match the bits and 1.2.",
              "createdAt": "2018-07-01T20:17:50Z",
              "updatedAt": "2018-07-01T20:18:10Z"
            }
          ]
        }
      ]
    },
    {
      "number": 48,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk5MTgwNDcy",
      "title": "Sequence number encryption",
      "url": "https://github.com/tlswg/dtls13-spec/pull/48",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This pull request aims to address the open issues regarding sequence number encryption. The approach chosen follows the design used in QUIC. ",
      "createdAt": "2018-07-04T08:52:24Z",
      "updatedAt": "2018-10-23T17:28:20Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "864668c5ffec851bba6346c78546fe4fd9921f4d",
      "headRepository": "hannestschofenig/dtls13-spec",
      "headRefName": "PNE",
      "headRefOid": "e374f32bd32944c056c289f18294729d70a6e436",
      "closedAt": "2018-10-22T23:14:03Z",
      "mergedAt": "2018-10-22T23:14:03Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "e374f32bd32944c056c289f18294729d70a6e436"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 49,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk5MjAyNDg4",
      "title": "Fix typos",
      "url": "https://github.com/tlswg/dtls13-spec/pull/49",
      "state": "MERGED",
      "author": "yanesca",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-07-04T10:13:33Z",
      "updatedAt": "2018-10-21T14:42:35Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "864668c5ffec851bba6346c78546fe4fd9921f4d",
      "headRepository": "yanesca/dtls13-spec",
      "headRefName": "typo-fix-01",
      "headRefOid": "f4af8ae66713837d1cc65ba1b1dc58992ad3b22a",
      "closedAt": "2018-10-21T14:42:35Z",
      "mergedAt": "2018-10-21T14:42:35Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "7ac20e85fdd9af191e7638ea2ba9f151b3ba5e75"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 57,
      "id": "MDExOlB1bGxSZXF1ZXN0MjEyMjcxMjM2",
      "title": "Update references to RFC 8446",
      "url": "https://github.com/tlswg/dtls13-spec/pull/57",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Also, use nicer labels for those references.",
      "createdAt": "2018-08-31T04:23:21Z",
      "updatedAt": "2018-10-21T22:26:21Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "864668c5ffec851bba6346c78546fe4fd9921f4d",
      "headRepository": "martinthomson/dtls13-spec",
      "headRefName": "update-references",
      "headRefOid": "7f0c8db94ce2df285e87844eb6fbd48663039066",
      "closedAt": "2018-10-21T22:26:21Z",
      "mergedAt": "2018-10-21T22:26:21Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "7f0c8db94ce2df285e87844eb6fbd48663039066"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "merged by hand",
          "createdAt": "2018-10-21T14:45:49Z",
          "updatedAt": "2018-10-21T14:45:49Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 58,
      "id": "MDExOlB1bGxSZXF1ZXN0MjEyMjcxMzc4",
      "title": "Don't bother reserving bits",
      "url": "https://github.com/tlswg/dtls13-spec/pull/58",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is a bikeshed colour, but I think a good one.  In the 5 bits that\r\nwe have, we can pack two epoch bits (we only need one in practice, but\r\nlet's leave that aside for the moment), and a bit each to signal\r\npresence of connection ID and length.  That leaves one spare bit.  I'm\r\nsuggesting that we spend this on signaling the difference between an\r\n8-bit and 16-bit sequence number.  16 bits is far more comfortable than\r\n14, and 8 is probably enough for many use cases (saving a byte).\r\n\r\nThat is, unless you were saving this for a spin bit and VEC.\r\n\r\nThis doesn't do anything about #56, but I think that we can save a bit\r\nfrom the epoch.  More on that later.",
      "createdAt": "2018-08-31T04:24:43Z",
      "updatedAt": "2018-10-21T22:24:48Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "864668c5ffec851bba6346c78546fe4fd9921f4d",
      "headRepository": "martinthomson/dtls13-spec",
      "headRefName": "no-wasted-bits",
      "headRefOid": "2fedfdce57781e79528348688348eee42fa6c3bb",
      "closedAt": "2018-10-21T22:24:48Z",
      "mergedAt": "2018-10-21T22:24:48Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "411ab29876d0b499747b377e9f107a4a70cdca67"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If epoch can be one bit - the [rationale](https://github.com/tlswg/dtls13-spec/issues/56#issuecomment-417561065) you provided is quite convincing - then this proposal could coexist with #56.",
          "createdAt": "2018-09-06T17:41:00Z",
          "updatedAt": "2018-09-06T17:41:00Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 59,
      "id": "MDExOlB1bGxSZXF1ZXN0MjEzNDE4MzU0",
      "title": "Disable compatibility mode more thoroughly",
      "url": "https://github.com/tlswg/dtls13-spec/pull/59",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I split and reordered the paragragh to maintain the integrity of the\r\n\"aside from these exceptions, this is TLS 1.3\".",
      "createdAt": "2018-09-05T20:30:08Z",
      "updatedAt": "2018-10-21T14:43:05Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "864668c5ffec851bba6346c78546fe4fd9921f4d",
      "headRepository": "martinthomson/dtls13-spec",
      "headRefName": "compat_no",
      "headRefOid": "c587d6ef3a83279514150b23a1e528f5fe6fc205",
      "closedAt": "2018-10-21T14:43:05Z",
      "mergedAt": "2018-10-21T14:43:05Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "1e8e0e91afa7eaaf22bbeac27a2501999b5efff1"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 60,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0NzY4Mzk3",
      "title": "Clarify AD. Fixes #46",
      "url": "https://github.com/tlswg/dtls13-spec/pull/60",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-10-22T18:22:51Z",
      "updatedAt": "2018-10-22T18:23:28Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "8640728d440ac4bbd32061cfe79de552726067a2",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "ad_value",
      "headRefOid": "5e0737a99406e117f82a31e5b739e24335c47dba",
      "closedAt": "2018-10-22T18:23:28Z",
      "mergedAt": "2018-10-22T18:23:28Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "70c971741d9b1f92691bf1f87a948ebf2cab609d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 61,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0ODExOTI3",
      "title": "Pne",
      "url": "https://github.com/tlswg/dtls13-spec/pull/61",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-10-22T20:57:31Z",
      "updatedAt": "2018-10-22T23:14:02Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "70c971741d9b1f92691bf1f87a948ebf2cab609d",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "pne",
      "headRefOid": "4695991446810fc1eee4943f9db6940d0647f2b8",
      "closedAt": "2018-10-22T23:14:02Z",
      "mergedAt": "2018-10-22T23:14:02Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "0fba102977d35791f8a5e0a1b7f9d475bd9a2195"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY3MTMyMjg5",
          "commit": {
            "abbreviatedOid": "9e2bfbb"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2018-10-22T22:13:18Z",
          "updatedAt": "2018-10-22T22:19:18Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "s/nonce/counter?",
              "createdAt": "2018-10-22T22:13:18Z",
              "updatedAt": "2018-10-22T23:13:17Z"
            },
            {
              "originalPosition": 39,
              "body": "s/there the/the",
              "createdAt": "2018-10-22T22:14:35Z",
              "updatedAt": "2018-10-22T23:13:17Z"
            },
            {
              "originalPosition": 45,
              "body": "Perhaps an example would be useful?",
              "createdAt": "2018-10-22T22:15:39Z",
              "updatedAt": "2018-10-22T23:13:17Z"
            },
            {
              "originalPosition": 45,
              "body": "And I assume one pads with zeros?",
              "createdAt": "2018-10-22T22:18:29Z",
              "updatedAt": "2018-10-22T23:13:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY3MTM3MTEy",
          "commit": {
            "abbreviatedOid": "9e2bfbb"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-22T22:31:39Z",
          "updatedAt": "2018-10-22T22:31:39Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "this is just with the conventional padding mechanism.",
              "createdAt": "2018-10-22T22:31:39Z",
              "updatedAt": "2018-10-22T23:13:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 62,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0ODI0NTAx",
      "title": "Remove EOED. This aligns with QUIC.",
      "url": "https://github.com/tlswg/dtls13-spec/pull/62",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-10-22T21:44:58Z",
      "updatedAt": "2018-11-05T07:11:09Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "70c971741d9b1f92691bf1f87a948ebf2cab609d",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "remove_eoed",
      "headRefOid": "1484390b47f5c89eb1e59786ed42c5b048372202",
      "closedAt": "2018-11-05T07:11:08Z",
      "mergedAt": "2018-11-05T07:11:08Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "6d3ad8aaf36237289e88946aacde50bc3ffbbc71"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson ",
          "createdAt": "2018-10-22T21:45:11Z",
          "updatedAt": "2018-10-22T21:45:11Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "s'OK wi' me.\r\n\r\nThe other thing to consider mentioning is that record shadowing (key compromise at epoch N allowing the attacker to send records that cause records at epoch >N to be dropped) isn't a concern because dropping records in DTLS is trivial.",
          "createdAt": "2018-10-22T22:33:21Z",
          "updatedAt": "2018-10-22T22:33:21Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@adl: thoughts?",
          "createdAt": "2018-10-22T23:30:43Z",
          "updatedAt": "2018-10-22T23:30:43Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY3MTM0NDMz",
          "commit": {
            "abbreviatedOid": "7ce3738"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-10-22T22:21:16Z",
          "updatedAt": "2018-10-22T22:21:16Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY3MTY5MjIz",
          "commit": {
            "abbreviatedOid": "5baef4d"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-23T00:59:46Z",
          "updatedAt": "2018-10-23T00:59:46Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nprevents in TLS. Servers SHOULD aggressively\r\n```",
              "createdAt": "2018-10-23T00:59:46Z",
              "updatedAt": "2018-10-23T03:45:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 64,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI1MTIwMTM3",
      "title": "Updated reference to RFC 8446",
      "url": "https://github.com/tlswg/dtls13-spec/pull/64",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Noticed that one reference still points to the TLS 1.3 draft. Updated that reference",
      "createdAt": "2018-10-23T17:16:15Z",
      "updatedAt": "2018-10-23T20:43:35Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "0fba102977d35791f8a5e0a1b7f9d475bd9a2195",
      "headRepository": "hannestschofenig/dtls13-spec",
      "headRefName": "master",
      "headRefOid": "80dab48de4b1163f8a43f9b5ca8fa33bb4d69b42",
      "closedAt": "2018-10-23T20:43:35Z",
      "mergedAt": "2018-10-23T20:43:35Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "9ed5b987acef8d64b7511bd199526b4eea6a8341"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 65,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI4MTYzNzA2",
      "title": "Allow multiple CIDs in the NewConnnectionId and RequestConnectionId",
      "url": "https://github.com/tlswg/dtls13-spec/pull/65",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "messages, but also forbid having multiple ones outstanding.\r\nFixes #50, Fixes #52, Fixes #53.\r\n\r\n@martinthomson @ekinnear\r\n",
      "createdAt": "2018-11-04T09:17:29Z",
      "updatedAt": "2018-11-05T07:10:52Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "c016fdb01a629e98979e1e982b7fb1a87f02cad2",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "cid_flexibility",
      "headRefOid": "c67c6228cd055b9b769a24df59033e96b979d9b6",
      "closedAt": "2018-11-05T07:10:52Z",
      "mergedAt": "2018-11-05T07:10:52Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "16727feda88073235ec641cda1d27ec3f36aa309"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 66,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI4MjYxNjcx",
      "title": "Reorder the bits in the header so that they are in a more rational",
      "url": "https://github.com/tlswg/dtls13-spec/pull/66",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "order.\r\n\r\n@martinthomson ",
      "createdAt": "2018-11-05T07:25:07Z",
      "updatedAt": "2018-11-06T07:07:53Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "6d3ad8aaf36237289e88946aacde50bc3ffbbc71",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "reorder_bits",
      "headRefOid": "89ce841fbd0934445fcbe97496baf1b27b06740c",
      "closedAt": "2018-11-06T07:07:53Z",
      "mergedAt": "2018-11-06T07:07:53Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "51e7aa6e338ab1d4d972aaffc5cb6259d72e6d2f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTcxODQ0Nzc5",
          "commit": {
            "abbreviatedOid": "89ce841"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-11-06T02:28:03Z",
          "updatedAt": "2018-11-06T02:28:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 68,
      "id": "MDExOlB1bGxSZXF1ZXN0MjMxODcxNTY5",
      "title": "Fix nesting of section numbers",
      "url": "https://github.com/tlswg/dtls13-spec/pull/68",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "You can't jump from h1 to h3.",
      "createdAt": "2018-11-19T07:00:22Z",
      "updatedAt": "2019-03-11T22:26:00Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "51e7aa6e338ab1d4d972aaffc5cb6259d72e6d2f",
      "headRepository": "martinthomson/dtls13-spec",
      "headRefName": "section-nesting",
      "headRefOid": "72fcf8c304d5aa47f36440ab5bd437071e84d5dc",
      "closedAt": "2019-03-11T22:26:00Z",
      "mergedAt": "2019-03-11T22:26:00Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "ac7e005ae8d21aa22a88bd53ccbe847e6a035318"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 69,
      "id": "MDExOlB1bGxSZXF1ZXN0MjMxODcxOTI0",
      "title": "Quote brackets",
      "url": "https://github.com/tlswg/dtls13-spec/pull/69",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Some of these look suspicious, but we'll get back to that.",
      "createdAt": "2018-11-19T07:02:18Z",
      "updatedAt": "2019-03-11T22:26:15Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "51e7aa6e338ab1d4d972aaffc5cb6259d72e6d2f",
      "headRepository": "martinthomson/dtls13-spec",
      "headRefName": "brackets",
      "headRefOid": "245464ce91ee8e4f10b009d74b7dce2ccb56001f",
      "closedAt": "2019-03-11T22:26:15Z",
      "mergedAt": "2019-03-11T22:26:15Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "df2b0d0fc3afe7346efeaa5ba8963bcb541a2e95"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 80,
      "id": "MDExOlB1bGxSZXF1ZXN0MjMxOTA2NDY4",
      "title": "Editorial changes",
      "url": "https://github.com/tlswg/dtls13-spec/pull/80",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Lots of minor things in this batch.",
      "createdAt": "2018-11-19T09:38:32Z",
      "updatedAt": "2019-03-11T22:51:49Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "51e7aa6e338ab1d4d972aaffc5cb6259d72e6d2f",
      "headRepository": "martinthomson/dtls13-spec",
      "headRefName": "editorial-wglc",
      "headRefOid": "db0bcadba6b9dc2efced54548c3cbde5a23d396d",
      "closedAt": "2019-03-11T22:51:49Z",
      "mergedAt": "2019-03-11T22:51:49Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "db0bcadba6b9dc2efced54548c3cbde5a23d396d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 83,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQ1MTg5MTYy",
      "title": "Security guarantees",
      "url": "https://github.com/tlswg/dtls13-spec/pull/83",
      "state": "MERGED",
      "author": "emanjon",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Suggested pull request related to issue #82",
      "createdAt": "2019-01-16T15:31:16Z",
      "updatedAt": "2019-03-11T22:27:58Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "51e7aa6e338ab1d4d972aaffc5cb6259d72e6d2f",
      "headRepository": "emanjon/dtls13-spec",
      "headRefName": "patch-1",
      "headRefOid": "ec7a88ba31d3550cb42eba6903347ed60291fc62",
      "closedAt": "2019-03-11T22:27:58Z",
      "mergedAt": "2019-03-11T22:27:58Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "c7a9a6af8bc219691a3293707b6a325f57ed7288"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 84,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQ1MTkwOTQ2",
      "title": "Editorial: Explicit sequence number",
      "url": "https://github.com/tlswg/dtls13-spec/pull/84",
      "state": "MERGED",
      "author": "emanjon",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The draft states in three places that DTLS use explicit sequence numbers, while this was true for DTLS 1.2, the sequence number in the DTLSCipherstructure is a mixture of implicit and explict. Maybe \"Partly Explicit\"?",
      "createdAt": "2019-01-16T15:35:59Z",
      "updatedAt": "2019-03-11T22:43:37Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "51e7aa6e338ab1d4d972aaffc5cb6259d72e6d2f",
      "headRepository": "emanjon/dtls13-spec",
      "headRefName": "patch-2",
      "headRefOid": "c38fa9d29412cb0e71a48c34488e79db558f0d91",
      "closedAt": "2019-03-11T22:26:54Z",
      "mergedAt": "2019-03-11T22:26:54Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "836931bafdcb35d3684a412a4949f5262fc927b4"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Please provide me with a PR to add your name to acknowledgements.",
          "createdAt": "2019-03-11T22:27:38Z",
          "updatedAt": "2019-03-11T22:27:38Z"
        },
        {
          "author": "emanjon",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hi,\r\n\r\nI don\u2019t know what PR is an abbreviation for but I guess it is not clear from my username who I am. I should probably update it, I did not intend to be anonymous :)\r\n\r\nJohn Mattsson, Ericsson, john.mattsson@ericsson.com\r\n\r\nFrom: ekr <notifications@github.com>\r\nReply-To: tlswg/dtls13-spec <reply@reply.github.com>\r\nDate: Monday, 11 March 2019 at 23:28\r\nTo: tlswg/dtls13-spec <dtls13-spec@noreply.github.com>\r\nCc: John Mattsson <john.mattsson@ericsson.com>, Author <author@noreply.github.com>\r\nSubject: Re: [tlswg/dtls13-spec] Editorial: Explicit sequence number (#84)\r\n\r\n\r\nPlease provide me with a PR to add your name to acknowledgements.\r\n\r\n\u2014\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub<https://github.com/tlswg/dtls13-spec/pull/84#issuecomment-471764784>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AXF1YnjSHbMDxX0gJA6HSP63cw-euLABks5vVthbgaJpZM4aDVUi>.\r\n",
          "createdAt": "2019-03-11T22:43:37Z",
          "updatedAt": "2019-03-11T22:43:37Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 85,
      "id": "MDExOlB1bGxSZXF1ZXN0MjY2ODQ3NTQy",
      "title": "Various editorial fixes.",
      "url": "https://github.com/tlswg/dtls13-spec/pull/85",
      "state": "MERGED",
      "author": "davidben",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I read through the draft and amassed a number of comments. This PR resolves the easy stuff. I'll send an email to the WG list with the more interesting ones shortly.\r\n\r\n- Grammar fixes.\r\n\r\n- The text describing sequence number encryption doesn't say how the\r\n  receiver handles short ciphertexts. It's also phrased oddly. It says\r\n  \"In some (rare) cases the ciphertext may be less than 16 bytes\", but\r\n  the whole point of the text is to ensure it cannot be less than 16\r\n  bytes. Reword it.\r\n\r\n- Whether there's a Certificate message is no longer a function of the\r\n  ciphersuite, but of parameters in general. (With resumption that was\r\n  already true.)\r\n\r\n- The bits talking about epoch 1-3 so far before the definitions of\r\n  those epochs should link to the section.\r\n\r\n- Remove some remnants of EndOfEarlyData. They're still in the\r\n  definition of the Handshake struct. I wasn't sure how to handle that\r\n  since it was in the HandshakeType enum and we probably shouldn't call\r\n  it RESERVED when it exists in TLS?\r\n\r\n- Spell out [sender]\\_application\\_traffic\\_secret\\_\\* since traffic\\_secret\\_\\*\r\n  isn't defined.",
      "createdAt": "2019-04-02T23:53:02Z",
      "updatedAt": "2019-07-07T22:45:18Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "ea6758525e09b10ebb52d26233dab8f5f8874d44",
      "headRepository": "davidben/dtls13-spec",
      "headRefName": "various",
      "headRefOid": "627cbbac1d790b5eb8bcb378c58d59754e0bf276",
      "closedAt": "2019-07-07T22:45:18Z",
      "mergedAt": "2019-07-07T22:45:18Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "5c77889ecc0aac26f2f42782c1440f67451c102b"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "This looks good to me. ",
          "createdAt": "2019-07-07T09:02:52Z",
          "updatedAt": "2019-07-07T09:02:52Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjM1MTEwNTAx",
          "commit": {
            "abbreviatedOid": "8964324"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-05-08T15:00:24Z",
          "updatedAt": "2019-05-08T15:00:24Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nTLS_AES_128_CCM_8_SHA256 have a shorter authentication tag and may require padding\r\n```",
              "createdAt": "2019-05-08T15:00:24Z",
              "updatedAt": "2019-07-07T09:02:32Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjM1MTEwNzcw",
          "commit": {
            "abbreviatedOid": "8964324"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "These changes look good to me! @ekr, can you please have a look?",
          "createdAt": "2019-05-08T15:00:50Z",
          "updatedAt": "2019-05-08T15:00:50Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4NjE2Njc0",
          "commit": {
            "abbreviatedOid": "627cbba"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-07-07T09:03:10Z",
          "updatedAt": "2019-07-07T09:03:10Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "I fixed this issue\r\n",
              "createdAt": "2019-07-07T09:03:10Z",
              "updatedAt": "2019-07-07T09:03:10Z"
            }
          ]
        }
      ]
    },
    {
      "number": 86,
      "id": "MDExOlB1bGxSZXF1ZXN0MjcyMzYyNDM5",
      "title": "Updated draft version history info",
      "url": "https://github.com/tlswg/dtls13-spec/pull/86",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-04-22T12:39:06Z",
      "updatedAt": "2019-07-07T22:45:39Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "ea6758525e09b10ebb52d26233dab8f5f8874d44",
      "headRepository": "hannestschofenig/dtls13-spec",
      "headRefName": "history",
      "headRefOid": "705afda5178c5a265f11992c13183d0415daa6c8",
      "closedAt": "2019-07-07T22:45:39Z",
      "mergedAt": "2019-07-07T22:45:39Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "ebfcbba23c0f88ad5e56229a19577d2c78def2b3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 87,
      "id": "MDExOlB1bGxSZXF1ZXN0MjcyMzYyNTAw",
      "title": "Note about additional data handling for record layer protection",
      "url": "https://github.com/tlswg/dtls13-spec/pull/87",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-04-22T12:39:24Z",
      "updatedAt": "2019-07-07T22:49:49Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "ea6758525e09b10ebb52d26233dab8f5f8874d44",
      "headRepository": "hannestschofenig/dtls13-spec",
      "headRefName": "additional-data-remark",
      "headRefOid": "af2204f509e6a8f3060e935f94847cd66f1aa991",
      "closedAt": "2019-07-07T22:49:49Z",
      "mergedAt": "2019-07-07T22:49:49Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "af2204f509e6a8f3060e935f94847cd66f1aa991"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "I added this remark following my implementation experience of DTLS 1.2 CID followed by the work on the DTLS 1.3. We noticed this issue at the Prague IETF meeting (March 2019). ",
          "createdAt": "2019-07-07T08:50:23Z",
          "updatedAt": "2019-07-07T08:50:23Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 88,
      "id": "MDExOlB1bGxSZXF1ZXN0MjcyMzYyNTY3",
      "title": "Streamlined CID Terminology",
      "url": "https://github.com/tlswg/dtls13-spec/pull/88",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Use CID where possible. ",
      "createdAt": "2019-04-22T12:39:38Z",
      "updatedAt": "2019-07-07T22:52:53Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "ea6758525e09b10ebb52d26233dab8f5f8874d44",
      "headRepository": "hannestschofenig/dtls13-spec",
      "headRefName": "cid-editorial",
      "headRefOid": "5e4890e98f55a59d28e983584b188ec791cbf141",
      "closedAt": "2019-07-07T22:52:53Z",
      "mergedAt": "2019-07-07T22:52:53Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "5adceb239b2c2432c8c9a55e3954ed3df61250b7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 89,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjc0ODQ2OTE0",
      "title": "A right for the server to reboot",
      "url": "https://github.com/tlswg/dtls13-spec/pull/89",
      "state": "CLOSED",
      "author": "ximaera",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "IMO it's just an editorial suggestion to make a use case more clear to a reader.",
      "createdAt": "2019-04-30T18:52:58Z",
      "updatedAt": "2019-07-07T22:56:00Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "ea6758525e09b10ebb52d26233dab8f5f8874d44",
      "headRepository": "ximaera/dtls13-spec",
      "headRefName": "patch-1",
      "headRefOid": "5eb87a7246618c609a359c37d5690f45389e94cb",
      "closedAt": "2019-07-07T22:56:00Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "This extra text introduces possibilities for DoS attacks. The case where the server does not have enough memory to delay the deletion of the old association before completing the return routability check does not appear very common to me. ",
          "createdAt": "2019-07-07T08:56:48Z",
          "updatedAt": "2019-07-07T08:56:48Z"
        },
        {
          "author": "ximaera",
          "authorAssociation": "NONE",
          "body": "May I ask you to elaborate a bit on the DoS scenario you've mentioned?\r\n\r\nResource constrained environment is typical for IoT devices which are among the most prominent DTLS users.",
          "createdAt": "2019-07-07T09:04:41Z",
          "updatedAt": "2019-07-07T09:04:41Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree with Hannes that this doesn't actually help. If you're really low on memory you can just abandon associations whenever.",
          "createdAt": "2019-07-07T22:56:00Z",
          "updatedAt": "2019-07-07T22:56:00Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 91,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk1MDkyODU5",
      "title": "Dealing with invalid cookies",
      "url": "https://github.com/tlswg/dtls13-spec/pull/91",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "as raised by Martin in https://github.com/tlswg/dtls13-spec/issues/77",
      "createdAt": "2019-07-07T10:09:46Z",
      "updatedAt": "2019-07-08T20:37:50Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "492f320049564d30853b65b80d27d5c9d5a1a80a",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "ea439e285ff4c889df0ad9e9677996be8b239eb4",
      "closedAt": "2019-07-08T20:37:50Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "This is not what we agreed, so closing this.",
          "createdAt": "2019-07-08T20:37:50Z",
          "updatedAt": "2019-07-08T20:37:50Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 92,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk1MDkyOTM3",
      "title": "Handling of second HelloRetryRequest",
      "url": "https://github.com/tlswg/dtls13-spec/pull/92",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is an inconsistency between the TLS 1.3 text (which says \"MUST\" abort the handshake with an \"unexpected_message\" alert) and the text in this draft, which indicates a SHOULD.",
      "createdAt": "2019-07-07T10:11:21Z",
      "updatedAt": "2019-07-07T22:52:01Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "ea6758525e09b10ebb52d26233dab8f5f8874d44",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-2",
      "headRefOid": "1950ace0d208c99cf3fe272cb34130a36ffbd261",
      "closedAt": "2019-07-07T22:52:01Z",
      "mergedAt": "2019-07-07T22:52:01Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "4c083d2eeccc9ff7a24014ff06ed20776f31b689"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 93,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk1MDk0Njg3",
      "title": "Error handling for case where cookie has non-zero length",
      "url": "https://github.com/tlswg/dtls13-spec/pull/93",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addressing issue raised by Martin at https://github.com/tlswg/dtls13-spec/issues/76",
      "createdAt": "2019-07-07T10:44:05Z",
      "updatedAt": "2019-07-07T22:54:12Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "ea6758525e09b10ebb52d26233dab8f5f8874d44",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-3",
      "headRefOid": "ae92a2146d2e5b995f511b68c58a90a648223c27",
      "closedAt": "2019-07-07T22:54:12Z",
      "mergedAt": "2019-07-07T22:54:11Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "6385f5f80e966d3e15ed54df9459978682b8fb74"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 94,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk1MDk1MTAz",
      "title": "Deleted incorrect statement in the Epoch Processing Guidelines Section",
      "url": "https://github.com/tlswg/dtls13-spec/pull/94",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Deleted this sentence \"In particular, it is still impermissible to send data prior to completion of the first handshake.\" from the Epoch processing guidelines section. This statement is not correct when talking about the 0-RTT exchange.",
      "createdAt": "2019-07-07T10:50:57Z",
      "updatedAt": "2019-07-07T22:51:32Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "963ea4fc6b178e1d89b75963a416a1c2fbae0f6c",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-4",
      "headRefOid": "ec4f15da7a82b8f2ede3afac216165f615a6fa8c",
      "closedAt": "2019-07-07T22:51:31Z",
      "mergedAt": "2019-07-07T22:51:31Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "5ef11f3e4d48408ec43ac282a3afbc8ac06a0fa8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 95,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk1MDk1Mzkz",
      "title": "Deleted statement about accepting packets from old epochs",
      "url": "https://github.com/tlswg/dtls13-spec/pull/95",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Deleted the following statement: \"Until the handshake has completed, implementations MUST accept packets from the old epoch.\" because it appears to be redundant. \r\n\r\nMartin raised this issue in https://github.com/tlswg/dtls13-spec/issues/70",
      "createdAt": "2019-07-07T10:55:58Z",
      "updatedAt": "2019-07-07T22:52:25Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "963ea4fc6b178e1d89b75963a416a1c2fbae0f6c",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-5",
      "headRefOid": "54d14215a201922b1b6db154e1388dc626335f0c",
      "closedAt": "2019-07-07T22:52:24Z",
      "mergedAt": "2019-07-07T22:52:24Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "fcdba6baa42325939fa2a74b9c045c050b2caf94"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 96,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk1MDk1ODkw",
      "title": "Updated security consideration section to discuss path-validation issues",
      "url": "https://github.com/tlswg/dtls13-spec/pull/96",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Raised in issue https://github.com/tlswg/dtls13-spec/issues/90",
      "createdAt": "2019-07-07T11:04:46Z",
      "updatedAt": "2019-07-07T23:13:29Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "963ea4fc6b178e1d89b75963a416a1c2fbae0f6c",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-6",
      "headRefOid": "8525fce1765070e282552b8f53f121459ccb7262",
      "closedAt": "2019-07-07T23:13:28Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Merged by hand.",
          "createdAt": "2019-07-07T23:13:28Z",
          "updatedAt": "2019-07-07T23:13:28Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 97,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk1MTQyNTA0",
      "title": "Davidben comments",
      "url": "https://github.com/tlswg/dtls13-spec/pull/97",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-07-08T00:29:31Z",
      "updatedAt": "2019-07-08T20:32:40Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "492f320049564d30853b65b80d27d5c9d5a1a80a",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "davidben_comments",
      "headRefOid": "c80a037b1369f69e793e8f5a2cc9c593c7e65ff2",
      "closedAt": "2019-07-08T20:31:49Z",
      "mergedAt": "2019-07-08T20:31:49Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "bd01bfb5d65e084f5b83c3fde0e1518486f398a2"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@davidben @martinthomson ",
          "createdAt": "2019-07-08T00:29:41Z",
          "updatedAt": "2019-07-08T00:29:41Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Well, clients can recover by tearing down the connection and starting over.",
          "createdAt": "2019-07-08T20:31:39Z",
          "updatedAt": "2019-07-08T20:31:39Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Well, clients can recover by tearing down the connection and starting over.\r\n\r\nSure, sure. I think this was in the context of a \"single\" connection. Perhaps it's not that important to clarify? ",
          "createdAt": "2019-07-08T20:32:28Z",
          "updatedAt": "2019-07-08T20:32:28Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I'll add text.\r\n",
          "createdAt": "2019-07-08T20:32:40Z",
          "updatedAt": "2019-07-08T20:32:40Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4NjUzNzE0",
          "commit": {
            "abbreviatedOid": "0341e41"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-07-08T00:58:54Z",
          "updatedAt": "2019-07-08T01:02:23Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nM may be received after epoch N (where N > M) has begun.  In general,\r\n```\r\n\r\nElse you might think that you are talking about epoch \"N>M\".",
              "createdAt": "2019-07-08T00:58:54Z",
              "updatedAt": "2019-07-08T20:31:17Z"
            },
            {
              "originalPosition": 45,
              "body": "Weaker seems - for want of a better word - weak.  The consequence here is that you expose some information about the sequence number. That doesn't provide an attacker much advantage in terms of assisting in key recovery because the key is independent of other keys and the protected information is very low entropy anyway.",
              "createdAt": "2019-07-08T01:01:34Z",
              "updatedAt": "2019-07-08T20:31:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU5MTI1ODQy",
          "commit": {
            "abbreviatedOid": "a9ceee8"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "I think the only comment that's left to be addressed is this:\r\n\r\n> I don't understand the last paragraph of section 5.1. What's it trying \r\n> to describe? If the client got its hands on an invalid cookie, there's \r\n> no recovering that handshake. The server won't accept the cookie, and \r\n> the client won't accept a second HRR.\r\n\r\nPerhaps what's missing is precisely that clarifying statement. Namely, that clients which find themselves in such a situation cannot recover.",
          "createdAt": "2019-07-08T20:01:10Z",
          "updatedAt": "2019-07-08T20:15:01Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nThis 64-bit value is used in the ACK message as well as in the \"record_sequence_number\"\r\n```",
              "createdAt": "2019-07-08T20:01:10Z",
              "updatedAt": "2019-07-08T20:31:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 98,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk1NDg3OTM4",
      "title": "Clean up invalid cookie text",
      "url": "https://github.com/tlswg/dtls13-spec/pull/98",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-07-08T20:37:17Z",
      "updatedAt": "2019-07-08T20:39:15Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "a9b7e8b70f438dc8abf262bcb6f6223ad7118743",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "bad_cookies_are_unrecoverable",
      "headRefOid": "fb84c34b5a036230ba0148bd1dcb3f29c60096d2",
      "closedAt": "2019-07-08T20:39:15Z",
      "mergedAt": "2019-07-08T20:39:15Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "52286d89e118e33e66b0346de29eaff52660b564"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU5MTQzODU1",
          "commit": {
            "abbreviatedOid": "fb84c34"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-07-08T20:39:10Z",
          "updatedAt": "2019-07-08T20:39:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 99,
      "id": "MDExOlB1bGxSZXF1ZXN0MzIzNTA1NTMz",
      "title": "Change the key label for DTLS to be \"dtls13\". Note that we have to",
      "url": "https://github.com/tlswg/dtls13-spec/pull/99",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "omit the trailing space because TLS 1.3 went right up to the limit.",
      "createdAt": "2019-10-01T22:38:58Z",
      "updatedAt": "2019-10-11T16:54:08Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "52286d89e118e33e66b0346de29eaff52660b564",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "labels",
      "headRefOid": "1a4519bae1af91fe02a217509d1fd9ede9f35476",
      "closedAt": "2019-10-11T16:54:08Z",
      "mergedAt": "2019-10-11T16:54:08Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "2c75855c1fb7565568cef3ba1da0b0d4a9f6bcf4"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "No, no, DTLS also uses HKDR for Key Separation++\n\n\nOn Wed, Oct 2, 2019 at 9:23 AM David Benjamin <notifications@github.com>\nwrote:\n\n> *@davidben* commented on this pull request.\n> ------------------------------\n>\n> In draft-ietf-tls-dtls13.md\n> <https://github.com/tlswg/dtls13-spec/pull/99#discussion_r330645755>:\n>\n> > @@ -1350,6 +1350,15 @@ if each handshake message had been sent as a single fragment following\n>  the algorithm described in Section 4.4.3 and Section 4.4.4 of {{!TLS13}}, respectively.\n>\n>\n> +##  Cryptographic Label Prefix\n> +\n> +Section 7.1 of {{RFC8446}} specifies that HKDR-Expand-Label uses\n>\n> Nit: HKDF-Expand-Label (not HKDR).\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tlswg/dtls13-spec/pull/99?email_source=notifications&email_token=AAIPLIOB4YYGW6INWZBVE4LQMTDJ3A5CNFSM4I4PTVSKYY3PNVWWK3TUL52HS4DFWFIHK3DMKJSXC5LFON2FEZLWNFSXPKTDN5WW2ZLOORPWSZGOCGVCPBY#pullrequestreview-296363911>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAIPLIODHJLNKRHQI37K75TQMTDJ3ANCNFSM4I4PTVSA>\n> .\n>\n",
          "createdAt": "2019-10-02T17:07:33Z",
          "updatedAt": "2019-10-02T17:07:33Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hearing no objections, we're merging this change. I'll fix the HKDR->HKDF typo in a followup PR.",
          "createdAt": "2019-10-11T16:54:01Z",
          "updatedAt": "2019-10-11T16:54:01Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk2MzYzOTEx",
          "commit": {
            "abbreviatedOid": "1a4519b"
          },
          "author": "davidben",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-10-02T16:22:20Z",
          "updatedAt": "2019-10-02T16:23:56Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Nit: HKDF-Expand-Label (not HKDR).",
              "createdAt": "2019-10-02T16:22:21Z",
              "updatedAt": "2019-10-02T16:23:56Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzk0NDM0",
          "commit": {
            "abbreviatedOid": "1a4519b"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This is perfectly fine. Thanks for making the edit. ",
          "createdAt": "2019-10-05T14:45:40Z",
          "updatedAt": "2019-10-05T14:45:40Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk3Nzk0NTE1",
          "commit": {
            "abbreviatedOid": "1a4519b"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-10-05T14:47:48Z",
          "updatedAt": "2019-10-05T14:48:13Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nSection 7.1 of {{RFC8446}} specifies that HKDF-Expand-Label uses\r\n```",
              "createdAt": "2019-10-05T14:47:49Z",
              "updatedAt": "2019-10-05T14:48:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 100,
      "id": "MDExOlB1bGxSZXF1ZXN0MzI3Mjg2Mjgw",
      "title": "s/HKDR/HKDF.",
      "url": "https://github.com/tlswg/dtls13-spec/pull/100",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-10-11T16:55:30Z",
      "updatedAt": "2019-10-11T16:57:41Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "2c75855c1fb7565568cef3ba1da0b0d4a9f6bcf4",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "caw/nit",
      "headRefOid": "e5e960c597f0d7c3ee036e55907d39d9989077b4",
      "closedAt": "2019-10-11T16:57:41Z",
      "mergedAt": "2019-10-11T16:57:40Z",
      "mergedBy": "seanturner",
      "mergeCommit": {
        "oid": "dc6b80212432acb402821f2b5403a0c5f4c46c27"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 103,
      "id": "MDExOlB1bGxSZXF1ZXN0MzM2MzM2NDQ1",
      "title": "adding DTLS-OK column values",
      "url": "https://github.com/tlswg/dtls13-spec/pull/103",
      "state": "CLOSED",
      "author": "seanturner",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #102.",
      "createdAt": "2019-11-04T15:26:41Z",
      "updatedAt": "2019-11-08T14:33:00Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "dc6b80212432acb402821f2b5403a0c5f4c46c27",
      "headRepository": "seanturner/dtls13-spec",
      "headRefName": "iana",
      "headRefOid": "94252d91aa47a7ff59178e4e9c4738edfbc8da29",
      "closedAt": "2019-11-08T14:33:00Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "merged by hand",
          "createdAt": "2019-11-08T14:33:00Z",
          "updatedAt": "2019-11-08T14:33:00Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 105,
      "id": "MDExOlB1bGxSZXF1ZXN0MzM2MzU1NDY1",
      "title": "changing ack content type number",
      "url": "https://github.com/tlswg/dtls13-spec/pull/105",
      "state": "MERGED",
      "author": "seanturner",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #104.",
      "createdAt": "2019-11-04T16:04:10Z",
      "updatedAt": "2019-11-08T14:28:15Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "dc6b80212432acb402821f2b5403a0c5f4c46c27",
      "headRepository": "seanturner/dtls13-spec",
      "headRefName": "iana_ack",
      "headRefOid": "bc5ffc36388836fd5afe23bb1d8029e4559367cd",
      "closedAt": "2019-11-08T14:28:15Z",
      "mergedAt": "2019-11-08T14:28:15Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "026739e3db70ada06d78e04b2aea543ac4fa75e8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 107,
      "id": "MDExOlB1bGxSZXF1ZXN0MzM3NzkyOTE5",
      "title": "Fix typo",
      "url": "https://github.com/tlswg/dtls13-spec/pull/107",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-11-07T00:09:47Z",
      "updatedAt": "2019-11-08T14:27:54Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "dc6b80212432acb402821f2b5403a0c5f4c46c27",
      "headRepository": "martinthomson/dtls13-spec",
      "headRefName": "sercret",
      "headRefOid": "97da4cfbcc1814d8438a651a38346c8072cb033a",
      "closedAt": "2019-11-08T14:27:54Z",
      "mergedAt": "2019-11-08T14:27:54Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "618ec9b2366b992524a41ac1773289a43c6977d4"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 111,
      "id": "MDExOlB1bGxSZXF1ZXN0MzM5MDkwNzE0",
      "title": "Issue110 multiple connections same dg",
      "url": "https://github.com/tlswg/dtls13-spec/pull/111",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-11-09T21:26:29Z",
      "updatedAt": "2019-11-11T14:22:19Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "77f7682126329e85256e72861abfb0996b78ee74",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "issue110_multiple_connections_same_dg",
      "headRefOid": "ab8d3184b7736246762a64c2527a5978a198da5f",
      "closedAt": "2019-11-11T14:22:19Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson ",
          "createdAt": "2019-11-09T21:27:01Z",
          "updatedAt": "2019-11-09T21:27:01Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Merged by hand after some git screwups",
          "createdAt": "2019-11-11T14:22:19Z",
          "updatedAt": "2019-11-11T14:22:19Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE0NjU1NzI2",
          "commit": {
            "abbreviatedOid": "1231104"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-11-11T00:45:52Z",
          "updatedAt": "2019-11-11T00:46:08Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "\"That does not correspond to the same connection\"?  Do we want to allow for change of connection ID for the same connection?  It allows for correlation between the two, so it's hardly a good idea, but I don't see why it couldn't be done.",
              "createdAt": "2019-11-11T00:45:52Z",
              "updatedAt": "2019-11-11T13:45:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 112,
      "id": "MDExOlB1bGxSZXF1ZXN0MzM5MDkzMTQ0",
      "title": "Issue109 chacha order",
      "url": "https://github.com/tlswg/dtls13-spec/pull/112",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-11-09T22:01:07Z",
      "updatedAt": "2019-11-11T13:43:30Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "77f7682126329e85256e72861abfb0996b78ee74",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "issue109_chacha_order",
      "headRefOid": "4231525e8c1a590333339bf4576628621468983e",
      "closedAt": "2019-11-11T13:43:30Z",
      "mergedAt": "2019-11-11T13:43:30Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "f9ccd4f5211c009608e4cd62926e239d3ab0013d"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@davidben @martinthomson ",
          "createdAt": "2019-11-09T22:01:18Z",
          "updatedAt": "2019-11-09T22:01:18Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE0NjU1NTIx",
          "commit": {
            "abbreviatedOid": "4231525"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-11-11T00:43:42Z",
          "updatedAt": "2019-11-11T00:43:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 113,
      "id": "MDExOlB1bGxSZXF1ZXN0MzM5MDk0MjU2",
      "title": "Issue106 packets",
      "url": "https://github.com/tlswg/dtls13-spec/pull/113",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "hannestschofenig"
      ],
      "labels": [],
      "body": "@martinthomson ",
      "createdAt": "2019-11-09T22:18:58Z",
      "updatedAt": "2019-11-11T13:43:17Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "77f7682126329e85256e72861abfb0996b78ee74",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "issue106_packets",
      "headRefOid": "7ff29ba8b286535cf73e67bbe32b7a23107dd36c",
      "closedAt": "2019-11-11T13:43:17Z",
      "mergedAt": "2019-11-11T13:43:17Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "b2d14d7fcd3557fbf4c8ca9086e353bb2b0a4318"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE0NjU1NDc4",
          "commit": {
            "abbreviatedOid": "7ff29ba"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-11-11T00:43:16Z",
          "updatedAt": "2019-11-11T00:43:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 115,
      "id": "MDExOlB1bGxSZXF1ZXN0MzU2MjU0Njg1",
      "title": "Reference update",
      "url": "https://github.com/tlswg/dtls13-spec/pull/115",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- I-D.ietf-tls-dtls-connection-id became a normative reference\r\n- Removed duplicate reference to I-D.ietf-tls-dtls-connection-id.",
      "createdAt": "2019-12-23T09:32:55Z",
      "updatedAt": "2020-03-06T21:20:50Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "7e9cca24dfe47e8ef5c269f1e2c88edfe8fcf5e9",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-7",
      "headRefOid": "1b3ffefaa80190d41e09de8917f1bf459fbce86d",
      "closedAt": "2020-03-06T21:20:50Z",
      "mergedAt": "2020-03-06T21:20:50Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "47ff533ad211c2a6aadd8fc80106efb1bc25d1dd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NjAwNjU3",
          "commit": {
            "abbreviatedOid": "1b3ffef"
          },
          "author": "seanturner",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-02-26T03:21:11Z",
          "updatedAt": "2020-02-26T03:21:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 117,
      "id": "MDExOlB1bGxSZXF1ZXN0MzcxMjg4NDIz",
      "title": "Added Clarification regarding the message_seqnr use",
      "url": "https://github.com/tlswg/dtls13-spec/pull/117",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-02-05T10:15:20Z",
      "updatedAt": "2020-03-06T21:21:16Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "7e9cca24dfe47e8ef5c269f1e2c88edfe8fcf5e9",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-8",
      "headRefOid": "5c8eaa5a7ac1d53c7cd1568fe59ac75856d33aca",
      "closedAt": "2020-03-06T21:21:16Z",
      "mergedAt": "2020-03-06T21:21:16Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "5e7273f230f1dc7b37314fc10eb5831091dcc659"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 119,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg1MDI5NzA1",
      "title": "Zero length cookies must be used. Fixes #118",
      "url": "https://github.com/tlswg/dtls13-spec/pull/119",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-06T21:29:46Z",
      "updatedAt": "2020-03-06T22:09:09Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5e7273f230f1dc7b37314fc10eb5831091dcc659",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "issue118_refuse_cookie",
      "headRefOid": "94cf39019effa9196fa600d834c9ce0dc1d0ead3",
      "closedAt": "2020-03-06T22:09:09Z",
      "mergedAt": "2020-03-06T22:09:09Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "89fd00f657b1ba3f0a5524eee1b4a1ced991b21f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjU2OTg3",
          "commit": {
            "abbreviatedOid": "94cf390"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-03-06T22:09:03Z",
          "updatedAt": "2020-03-06T22:09:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 120,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg1MDMzMDcw",
      "title": "Clarify AAD",
      "url": "https://github.com/tlswg/dtls13-spec/pull/120",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-06T21:39:40Z",
      "updatedAt": "2020-03-06T22:09:47Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5e7273f230f1dc7b37314fc10eb5831091dcc659",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "issue116_fix_aad",
      "headRefOid": "7452d2503b527777046f213dea37e890ce5e7d54",
      "closedAt": "2020-03-06T22:09:47Z",
      "mergedAt": "2020-03-06T22:09:47Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9a0ca8c01914904777c348267282b63549789b80"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjU3MjMx",
          "commit": {
            "abbreviatedOid": "7452d25"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-03-06T22:09:38Z",
          "updatedAt": "2020-03-06T22:09:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 121,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg1MDQxMTIw",
      "title": "Clarify that you can't ACK records containing stuff you haven't proce\u2026",
      "url": "https://github.com/tlswg/dtls13-spec/pull/121",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026ssed",
      "createdAt": "2020-03-06T22:02:15Z",
      "updatedAt": "2020-03-06T22:16:55Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5e7273f230f1dc7b37314fc10eb5831091dcc659",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "clarify_ackable",
      "headRefOid": "28b401cec0ef2e1039e8690bafc509ee20a24534",
      "closedAt": "2020-03-06T22:16:55Z",
      "mergedAt": "2020-03-06T22:16:55Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "8e3fa5c01f16f332c95f0fb6c7a7979b363fb6d8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjU3ODYx",
          "commit": {
            "abbreviatedOid": "73fc674"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-06T22:11:13Z",
          "updatedAt": "2020-03-06T22:11:14Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "```suggestion\r\nDuring the handshake, ACKs only cover the current outstanding flight (this is\r\n```",
              "createdAt": "2020-03-06T22:11:14Z",
              "updatedAt": "2020-03-06T22:13:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjU4MDc2",
          "commit": {
            "abbreviatedOid": "73fc674"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-06T22:11:47Z",
          "updatedAt": "2020-03-06T22:11:47Z",
          "comments": [
            {
              "originalPosition": 83,
              "body": "```suggestion\r\nCertificate. Implementations can address this by clearing their ACK\r\n```",
              "createdAt": "2020-03-06T22:11:47Z",
              "updatedAt": "2020-03-06T22:13:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjU4MjIy",
          "commit": {
            "abbreviatedOid": "73fc674"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM modulo two nits.",
          "createdAt": "2020-03-06T22:12:06Z",
          "updatedAt": "2020-03-06T22:12:06Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjU5MTYz",
          "commit": {
            "abbreviatedOid": "28b401c"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-06T22:14:16Z",
          "updatedAt": "2020-03-06T22:14:17Z",
          "comments": [
            {
              "originalPosition": 83,
              "body": "Why do you say \"address\" rather than accomplished? I don't necessarily object, but...",
              "createdAt": "2020-03-06T22:14:16Z",
              "updatedAt": "2020-03-06T22:14:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 122,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg1MDQ0NjUx",
      "title": "Fix figure 11. Fixes #114",
      "url": "https://github.com/tlswg/dtls13-spec/pull/122",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-06T22:13:13Z",
      "updatedAt": "2020-03-06T22:14:08Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "9a0ca8c01914904777c348267282b63549789b80",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "issue114_figure_11",
      "headRefOid": "ff6a09cd220d744e0c23a5896ce5f3f73bed7ccf",
      "closedAt": "2020-03-06T22:14:08Z",
      "mergedAt": "2020-03-06T22:14:08Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "7ac3806ed8024a46caf113d1d0e0e7ac59c73022"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjU5MDQ2",
          "commit": {
            "abbreviatedOid": "ff6a09c"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-03-06T22:14:00Z",
          "updatedAt": "2020-03-06T22:14:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 123,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg1MjUzNzI1",
      "title": "Corrected content type for ACK message",
      "url": "https://github.com/tlswg/dtls13-spec/pull/123",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-08T11:02:59Z",
      "updatedAt": "2020-03-09T16:32:14Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "11ed880e636bd19beab885fc4c5411dd8713ddd3",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-9",
      "headRefOid": "8e6dab96cd807929cf3dd04b6442fd5c1050f7f8",
      "closedAt": "2020-03-09T16:32:14Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed differently.",
          "createdAt": "2020-03-09T16:32:14Z",
          "updatedAt": "2020-03-09T16:32:14Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 124,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg1MjU0MDI0",
      "title": "Corrected CID statement",
      "url": "https://github.com/tlswg/dtls13-spec/pull/124",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-08T11:06:49Z",
      "updatedAt": "2020-03-09T16:21:25Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "11ed880e636bd19beab885fc4c5411dd8713ddd3",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-10",
      "headRefOid": "50b6cd36058b1c9afbf2c03c05e14626a7e27126",
      "closedAt": "2020-03-09T16:21:25Z",
      "mergedAt": "2020-03-09T16:21:25Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "7dcfa258409358671b28b6c4ee5eaa848d0d90da"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 125,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg1MjU0MTY2",
      "title": "Re-worded DTLS Record Layer Intro",
      "url": "https://github.com/tlswg/dtls13-spec/pull/125",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-08T11:08:39Z",
      "updatedAt": "2020-03-09T16:23:39Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "11ed880e636bd19beab885fc4c5411dd8713ddd3",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-11",
      "headRefOid": "0d041521e4ff950a76df53f4ee7af677cf0d4c99",
      "closedAt": "2020-03-09T16:23:39Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Merged by hand",
          "createdAt": "2020-03-09T16:23:39Z",
          "updatedAt": "2020-03-09T16:23:39Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 126,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg1MjU0Njc1",
      "title": "Wording changes to the intro",
      "url": "https://github.com/tlswg/dtls13-spec/pull/126",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-08T11:14:12Z",
      "updatedAt": "2020-03-09T16:15:07Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "11ed880e636bd19beab885fc4c5411dd8713ddd3",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-12",
      "headRefOid": "088805c31df29ba78cc0e5317435cc69cff78ed8",
      "closedAt": "2020-03-09T16:15:06Z",
      "mergedAt": "2020-03-09T16:15:06Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "c9a3a513b4b1844d539ed2e10ea631ef2fbfea5c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 127,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg1MjU0ODgz",
      "title": "Clarification regarding the Cookie Exchange",
      "url": "https://github.com/tlswg/dtls13-spec/pull/127",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-08T11:16:27Z",
      "updatedAt": "2020-03-09T16:15:27Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "11ed880e636bd19beab885fc4c5411dd8713ddd3",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-13",
      "headRefOid": "d495ccf041993fe7b51e1515caba481b1cf44a8a",
      "closedAt": "2020-03-09T16:15:27Z",
      "mergedAt": "2020-03-09T16:15:26Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "587db3fdcefbb2079a33ee26a46f80a7071268d3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 129,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk1MjE4Mzg4",
      "title": "Removed term \"deprotection\"",
      "url": "https://github.com/tlswg/dtls13-spec/pull/129",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-29T08:38:11Z",
      "updatedAt": "2020-04-19T21:41:01Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d5220d22ca3a79c23590cddc9e76a227dcf62992",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-14",
      "headRefOid": "24ee9b9088c3dbace16d7176c6ed267771a26cf6",
      "closedAt": "2020-04-19T21:41:00Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't see a reason for this change 8446 already uses deprotect.",
          "createdAt": "2020-03-29T13:41:22Z",
          "updatedAt": "2020-03-29T13:41:22Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "The problem is that the TLS 1.3 spec does not define the term either. ",
          "createdAt": "2020-04-03T08:58:40Z",
          "updatedAt": "2020-04-03T08:58:40Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Well, because I thought it was obvious. However, if you can't understand TLS 1.3, then you can't understand DTLS 1.3, so I think the ship has sailed.",
          "createdAt": "2020-04-06T12:13:26Z",
          "updatedAt": "2020-04-06T12:13:26Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@hannestschofenig I think this is within our discretion and I think we should close it. LMK if you feel strongly.",
          "createdAt": "2020-04-19T21:41:00Z",
          "updatedAt": "2020-04-19T21:41:00Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 130,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk1MjE5MDc3",
      "title": "Update to Figure 1",
      "url": "https://github.com/tlswg/dtls13-spec/pull/130",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-29T08:46:03Z",
      "updatedAt": "2020-04-19T21:52:03Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d5220d22ca3a79c23590cddc9e76a227dcf62992",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-15",
      "headRefOid": "ee05cfce5013c93d08aa907cb690b4c418a1c986",
      "closedAt": "2020-04-19T21:52:02Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by hand",
          "createdAt": "2020-04-19T21:52:02Z",
          "updatedAt": "2020-04-19T21:52:02Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MTg5NzEy",
          "commit": {
            "abbreviatedOid": "ee05cfc"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-06T12:14:34Z",
          "updatedAt": "2020-04-06T12:14:34Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "You need to delete a space on the left here.",
              "createdAt": "2020-04-06T12:14:34Z",
              "updatedAt": "2020-04-06T12:14:34Z"
            }
          ]
        }
      ]
    },
    {
      "number": 131,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk1MjIyMDM0",
      "title": "Nits and wording improvements.",
      "url": "https://github.com/tlswg/dtls13-spec/pull/131",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-29T09:15:59Z",
      "updatedAt": "2020-04-19T22:05:02Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d5220d22ca3a79c23590cddc9e76a227dcf62992",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-16",
      "headRefOid": "b2adfa8f7056212da7fe3ed65011ead253280cb1",
      "closedAt": "2020-04-19T22:05:02Z",
      "mergedAt": "2020-04-19T22:05:02Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "d18ce645d0558036c0dea6614fbffe5027e8b624"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDY2OTYx",
          "commit": {
            "abbreviatedOid": "e0d0400"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-04-19T22:03:37Z",
          "updatedAt": "2020-04-19T22:04:40Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nThe reader is also as to be familiar with {{I-D.ietf-tls-dtls-connection-id}}\r\nas this document applies the CID functionality to DTLS 1.3. \r\n```",
              "createdAt": "2020-04-19T22:03:37Z",
              "updatedAt": "2020-04-19T22:04:53Z"
            },
            {
              "originalPosition": 87,
              "body": "```suggestion\r\n loss and re-ordering, an identifier is needed to determine which cipher state\r\n```",
              "createdAt": "2020-04-19T22:04:06Z",
              "updatedAt": "2020-04-19T22:04:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 132,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk1MjQ4MTc0",
      "title": "Adding Acknowledgements Section",
      "url": "https://github.com/tlswg/dtls13-spec/pull/132",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-29T13:05:10Z",
      "updatedAt": "2020-04-19T21:42:03Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d5220d22ca3a79c23590cddc9e76a227dcf62992",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-17",
      "headRefOid": "96827b0b4e469ede9ae960d0a31354831e7cfef2",
      "closedAt": "2020-04-19T21:42:03Z",
      "mergedAt": "2020-04-19T21:42:03Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "ad4ef8985e0e7ea59be706ea7730c38acc31b502"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 133,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk1MjQ4NDM5",
      "title": "Indicate to remove Working Group Info Section",
      "url": "https://github.com/tlswg/dtls13-spec/pull/133",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-29T13:07:09Z",
      "updatedAt": "2020-04-19T21:42:19Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d5220d22ca3a79c23590cddc9e76a227dcf62992",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-18",
      "headRefOid": "0e7b6e3571490ef68ab5ef15674226e940651efb",
      "closedAt": "2020-04-19T21:42:19Z",
      "mergedAt": "2020-04-19T21:42:19Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "33b70b78af789b50fcfb2b30c249c95f6c3ac000"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 134,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk1MjQ5MjQ5",
      "title": "Draft -37 changes not uploaded to repo (?)",
      "url": "https://github.com/tlswg/dtls13-spec/pull/134",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-29T13:12:57Z",
      "updatedAt": "2020-04-19T21:42:37Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d5220d22ca3a79c23590cddc9e76a227dcf62992",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-19",
      "headRefOid": "911b16d18ba18efd96d74ccb59e23a2a31f96bba",
      "closedAt": "2020-04-19T21:42:37Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Done separately.",
          "createdAt": "2020-04-19T21:42:37Z",
          "updatedAt": "2020-04-19T21:42:37Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 135,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk1Njc2ODg1",
      "title": "KeyUpdate Clarification",
      "url": "https://github.com/tlswg/dtls13-spec/pull/135",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Based on feedback from Hanno and Jonathan on the list.",
      "createdAt": "2020-03-30T14:09:15Z",
      "updatedAt": "2020-04-19T21:44:29Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d5220d22ca3a79c23590cddc9e76a227dcf62992",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-20",
      "headRefOid": "314ea5a4ff9a0cf0266781a196023acb911f5ae0",
      "closedAt": "2020-04-19T21:44:29Z",
      "mergedAt": "2020-04-19T21:44:29Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "c2ded2f1be65efd0db97936f548f2ecb61e090c3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NTg5OTcz",
          "commit": {
            "abbreviatedOid": "667c32b"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "I think the underlying issue here is the conception that all that needs to be ensured is the ability to ACK \r\nretransmissions of the KeyUpdate, and the modified version still gives that impression. If that was true, \r\nthe use of 'canned ACKs' as in Draft 37 would be fine. However, the example from the list shows that there's more to retaining old keying material than just ACKing retransmitted KeyUpdates, and I'd therefore opt for a more intrusive change of wording, such as:\r\n\r\n```\r\nDue to the possibility of an ACK message for a KeyUpdate being lost and thereby\r\npreventing the sender of the KeyUpdate from updating its keying material,\r\nreceivers MUST retain the pre-update keying material until receipt and successful\r\ndecryption of a message using the new keys. Receivers MUST NOT delete the\r\npre-update keying material immediately and use canned ACK messages for\r\nretransmitted KeyUpdate messages, since situations can occur in which receivers\r\nstill need to be able to decrypt messages secured with pre-update keying material.\r\n```\r\n\r\nWhat do you think, @hannestschofenig ?",
          "createdAt": "2020-03-31T10:12:58Z",
          "updatedAt": "2020-03-31T10:12:58Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTUxNzgz",
          "commit": {
            "abbreviatedOid": "314ea5a"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Thanks @hannestschofenig, looks good to me.",
          "createdAt": "2020-04-02T06:59:16Z",
          "updatedAt": "2020-04-02T06:59:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 136,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk3NTI0NTY5",
      "title": "Remove SENDING->FINISHED transition in state machine",
      "url": "https://github.com/tlswg/dtls13-spec/pull/136",
      "state": "MERGED",
      "author": "hanno-arm",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The previous version erroneously specified that implementations should transition from SENDING to FINISHED after sending the last flight in a handshake. Instead, they should transition to WAITING\r\nand only move to FINISHED upon receipt of ACKs for the entire last flight.\r\n\r\nThis PR fixes the state machine diagram and text.",
      "createdAt": "2020-04-02T11:40:20Z",
      "updatedAt": "2020-04-19T21:49:11Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d5220d22ca3a79c23590cddc9e76a227dcf62992",
      "headRepository": "hanno-arm/dtls13-spec",
      "headRefName": "dtls13_state_machine_no_sending_to_finished",
      "headRefOid": "d18db07c1ae112e4d12a804967480b36324c8163",
      "closedAt": "2020-04-19T21:49:10Z",
      "mergedAt": "2020-04-19T21:49:10Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "1bd6d2c225f3ac7ff077fedf8dec7b7c6c65d9c0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NDYxMDcx",
          "commit": {
            "abbreviatedOid": "d18db07"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "lgtm",
          "createdAt": "2020-04-02T14:06:55Z",
          "updatedAt": "2020-04-02T14:06:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 137,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk3NTQ1MzU2",
      "title": "Describe duplication of state machines for post-handshake messages",
      "url": "https://github.com/tlswg/dtls13-spec/pull/137",
      "state": "CLOSED",
      "author": "hanno-arm",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As discussed in https://mailarchive.ietf.org/arch/msg/tls/Pvg2IUJAYTyQDygUBDV_D_ozRHM/, post-handshake messages should be handled via independent state machines. This PR is a first attempt to add a section to the spec explicitly mentioning this.",
      "createdAt": "2020-04-02T12:25:12Z",
      "updatedAt": "2020-04-22T01:04:31Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d5220d22ca3a79c23590cddc9e76a227dcf62992",
      "headRepository": "hanno-arm/dtls13-spec",
      "headRefName": "state_machine_duplication",
      "headRefOid": "6f30e1fa476ec31962081c5f46b3835edcccf08b",
      "closedAt": "2020-04-22T01:04:30Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@thomas-fossati I have fixed two further typos, and also added further explanations on when multiple messages of a given post-HS category may be sent. Can you please take another look?",
          "createdAt": "2020-04-03T06:53:47Z",
          "updatedAt": "2020-04-03T06:53:47Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Merged by hand",
          "createdAt": "2020-04-22T01:04:30Z",
          "updatedAt": "2020-04-22T01:04:30Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NDQzNTc1",
          "commit": {
            "abbreviatedOid": "bdf19a5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-02T13:48:54Z",
          "updatedAt": "2020-04-02T13:56:53Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nvia independent state machines each of which behaves as described in {{state-machine}}.\r\n```",
              "createdAt": "2020-04-02T13:48:54Z",
              "updatedAt": "2020-04-22T00:42:44Z"
            },
            {
              "originalPosition": 58,
              "body": "```suggestion\r\neach category of post-handshake messages (e.g., NewSessionTicket or KeyUpdate)\r\n```",
              "createdAt": "2020-04-02T13:56:02Z",
              "updatedAt": "2020-04-22T00:42:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTMyNDMx",
          "commit": {
            "abbreviatedOid": "6b505b6"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-02T15:19:09Z",
          "updatedAt": "2020-04-02T15:19:09Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "Applied, thanks! :+1: ",
              "createdAt": "2020-04-02T15:19:09Z",
              "updatedAt": "2020-04-22T00:42:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTMyNDk5",
          "commit": {
            "abbreviatedOid": "6b505b6"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-02T15:19:14Z",
          "updatedAt": "2020-04-02T15:19:15Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Applied, thanks! :+1: ",
              "createdAt": "2020-04-02T15:19:15Z",
              "updatedAt": "2020-04-22T00:42:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2OTA4NDgz",
          "commit": {
            "abbreviatedOid": "691f95d"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-21T00:28:27Z",
          "updatedAt": "2020-04-22T00:42:36Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nsend KeyUpdate, NewConnectionId or RequestConnectionId message if an earlier message\r\n```",
              "createdAt": "2020-04-21T00:28:27Z",
              "updatedAt": "2020-04-22T00:42:44Z"
            },
            {
              "originalPosition": 42,
              "body": "unidirectional.",
              "createdAt": "2020-04-22T00:41:48Z",
              "updatedAt": "2020-04-22T00:42:44Z"
            }
          ]
        }
      ]
    },
    {
      "number": 138,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk3NzI5OTQw",
      "title": "Allow ACKing non-terminal complete flights if response takes time",
      "url": "https://github.com/tlswg/dtls13-spec/pull/138",
      "state": "MERGED",
      "author": "hanno-arm",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #128",
      "createdAt": "2020-04-02T17:54:48Z",
      "updatedAt": "2020-04-19T21:53:24Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d5220d22ca3a79c23590cddc9e76a227dcf62992",
      "headRepository": "hanno-arm/dtls13-spec",
      "headRefName": "issue_128",
      "headRefOid": "4b429c81c650b7a83059c5f30d8989ecd499c0f2",
      "closedAt": "2020-04-19T21:53:24Z",
      "mergedAt": "2020-04-19T21:53:24Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "9a657c54a9941acc430f04893ce591dc8215c78b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 139,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk3NzMwODA2",
      "title": "Clarify when to ACK and what to ACK",
      "url": "https://github.com/tlswg/dtls13-spec/pull/139",
      "state": "MERGED",
      "author": "hanno-arm",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "In response to feedback on the mailing list (https://mailarchive.ietf.org/arch/msg/tls/LMn0qma6t896esRO44DwaS_54VM/), this PR attempts to clarify (a) when to generate ACKs, and (b) which records to ACK.",
      "createdAt": "2020-04-02T17:56:41Z",
      "updatedAt": "2020-04-22T01:07:24Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d5220d22ca3a79c23590cddc9e76a227dcf62992",
      "headRepository": "hanno-arm/dtls13-spec",
      "headRefName": "ack_clarification",
      "headRefOid": "c7855357e0ca85121631d34eba450b04df466665",
      "closedAt": "2020-04-22T01:07:24Z",
      "mergedAt": "2020-04-22T01:07:24Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "7882d4cf09f5dfd1016ef5a925c2aae1ccda5334"
      },
      "comments": [
        {
          "author": "jfhamme-cccs",
          "authorAssociation": "NONE",
          "body": "This is much clearer to me.  I see that you have removed the sentence I was having a problem with in the bullet: \"Implementations MUST NOT send ACKs for handshake messages which they discard as out-of-order, because otherwise those messages will not be retransmitted\"; logically, I believe you have captured this better by adding \"and processed\" above in  \"The ACK message is used by an endpoint to indicate which handshake records it has received and processed from the other side.\"",
          "createdAt": "2020-04-02T20:18:09Z",
          "updatedAt": "2020-04-02T20:18:09Z"
        },
        {
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@jfhamme-cccs Thank you for your feedback! I have removed the sentence because its content is already implied by what's stated in the previous section [ACK message](https://tools.ietf.org/html/draft-ietf-tls-dtls13-37#section-7). See the commit description of https://github.com/tlswg/dtls13-spec/pull/139/commits/f22743cb31e444b4efeabbbca5a69d54a0b3f8a8.",
          "createdAt": "2020-04-02T20:42:33Z",
          "updatedAt": "2020-04-02T20:42:33Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@hanno-arm thanks.  This sensibly improves readability and clarity.",
          "createdAt": "2020-04-03T11:12:06Z",
          "updatedAt": "2020-04-03T11:12:06Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDY2MzUy",
          "commit": {
            "abbreviatedOid": "c785535"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-19T21:56:25Z",
          "updatedAt": "2020-04-19T21:57:39Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "This is actually different. Consider the case where I receive:\r\n\r\n```\r\n1: MSG=1 [1:100]\r\n2: MSG=2 [1:100]\r\n3: MSG=1 [1:50]\r\n```\r\nI may discard three because it's duplicative and/or out of order, but I should ACK it.",
              "createdAt": "2020-04-19T21:56:25Z",
              "updatedAt": "2020-04-19T21:57:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MDk0OTAz",
          "commit": {
            "abbreviatedOid": "c785535"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-21T08:17:57Z",
          "updatedAt": "2020-04-21T08:17:57Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Ah, that's what's meant here - @thomas-fossati and I were pondering for a bit, but didn't get the intended meaning of non-duplicative. I agree that in your example, msg 3 should be ACKed.\r\n\r\nI think the issue here is the ambiguity of what 'processed' means - I'd say that message 3 will still be 'processed', even though it will be noted that its content doesn't reveal anything new.\r\n\r\nMaybe we can find a wording which is less prone to different interpretations.",
              "createdAt": "2020-04-21T08:17:57Z",
              "updatedAt": "2020-04-21T08:17:57Z"
            }
          ]
        }
      ]
    },
    {
      "number": 140,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk4MTA5OTY2",
      "title": "Providing an informational design rational for the ACK message",
      "url": "https://github.com/tlswg/dtls13-spec/pull/140",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-03T11:08:47Z",
      "updatedAt": "2020-04-19T22:02:53Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d5220d22ca3a79c23590cddc9e76a227dcf62992",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-21",
      "headRefOid": "bcce54094b5cfe803e458b3685571aaf5d855550",
      "closedAt": "2020-04-19T22:02:53Z",
      "mergedAt": "2020-04-19T22:02:53Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "f777986566de44ae02c11b46cbe9bc025a6277fa"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 141,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA1NzM4NDQ3",
      "title": "Ack epochs",
      "url": "https://github.com/tlswg/dtls13-spec/pull/141",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Clarify the sending epoch.",
      "createdAt": "2020-04-19T21:34:52Z",
      "updatedAt": "2020-04-19T21:38:56Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d5220d22ca3a79c23590cddc9e76a227dcf62992",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "ack_epochs",
      "headRefOid": "8922129f9356d4a69f995fdff58691160101090b",
      "closedAt": "2020-04-19T21:38:56Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 142,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA1NzM5MTE3",
      "title": "Ack epochs2",
      "url": "https://github.com/tlswg/dtls13-spec/pull/142",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Clarify the sending epoch.",
      "createdAt": "2020-04-19T21:39:17Z",
      "updatedAt": "2020-04-22T00:36:17Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5960ef2eb654e8c16647739507cda1cc310e3484",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "ack_epochs2",
      "headRefOid": "6d77033c07cb8a4b7ad30cdc739771401f472970",
      "closedAt": "2020-04-22T00:36:17Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This LGTM, pending merge conflicts.",
          "createdAt": "2020-04-21T02:28:07Z",
          "updatedAt": "2020-04-21T02:28:07Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Merged by hand",
          "createdAt": "2020-04-22T00:36:17Z",
          "updatedAt": "2020-04-22T00:36:17Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MzUwODY2",
          "commit": {
            "abbreviatedOid": "8922129"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-20T11:01:26Z",
          "updatedAt": "2020-04-20T11:01:27Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Trivial: \r\n```suggestion\r\nmultiple epochs. For instance, if the client receives only the ServerHello\r\n```",
              "createdAt": "2020-04-20T11:01:27Z",
              "updatedAt": "2020-04-20T12:47:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MzUxNzk1",
          "commit": {
            "abbreviatedOid": "8922129"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-20T11:02:55Z",
          "updatedAt": "2020-04-20T11:02:56Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "This is a bit pedantic, but strictly speaking this would allow a Client to ACK a ServerHello with epoch 1 (early data) - this doesn't seem right, because the server might not accept it.",
              "createdAt": "2020-04-20T11:02:56Z",
              "updatedAt": "2020-04-20T12:47:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MzU2MzMy",
          "commit": {
            "abbreviatedOid": "8922129"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-20T11:09:51Z",
          "updatedAt": "2020-04-20T11:09:51Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I find this slightly confusing: After the handshake, as far as I understand there's an unambiguously defined 'current outgoing epoch', and that's what should always be used, including ACKs. Talking of the 'highest available epoch' suggests there is some leeway which I don't see at the moment. \r\nIn particular, even though sending a `KeyUpdate` suggests the transition to the next sending epoch which could hence be seen 'available', it must not be used before the `KeyUpdate` has been ACKed.\r\n\r\nCan't we simply say:\r\n```suggestion\r\nAfter the handshake, implementations MUST use the current sending epoch\r\nfor sending ACKs.\r\n```\r\n\r\n",
              "createdAt": "2020-04-20T11:09:51Z",
              "updatedAt": "2020-04-20T12:47:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MzU3NTMx",
          "commit": {
            "abbreviatedOid": "8922129"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks @ekr for the PR. Apart from a typo, I left two comments on where I think the text can be further clarified.",
          "createdAt": "2020-04-20T11:11:42Z",
          "updatedAt": "2020-04-20T11:11:42Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDE4NTk2",
          "commit": {
            "abbreviatedOid": "e8c1b52"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-20T12:46:09Z",
          "updatedAt": "2020-04-20T12:46:10Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Sorry, I had QUIC epochs in my head. Will fix.",
              "createdAt": "2020-04-20T12:46:10Z",
              "updatedAt": "2020-04-20T12:47:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDE5MDYy",
          "commit": {
            "abbreviatedOid": "e8c1b52"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-20T12:46:49Z",
          "updatedAt": "2020-04-20T12:46:50Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Right. I'll change.",
              "createdAt": "2020-04-20T12:46:49Z",
              "updatedAt": "2020-04-20T12:47:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDE5NjIx",
          "commit": {
            "abbreviatedOid": "07e6ac6"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-20T12:47:36Z",
          "updatedAt": "2020-04-20T12:47:37Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nequal to or higher than the record which is being acknowledged (with the exception of epoch 1, which MUST NOT be used for sending ACKs).\r\n```",
              "createdAt": "2020-04-20T12:47:36Z",
              "updatedAt": "2020-04-20T12:47:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2OTQ0NzIw",
          "commit": {
            "abbreviatedOid": "6d77033"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-04-21T02:27:57Z",
          "updatedAt": "2020-04-21T02:27:57Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MDUwOTQ4",
          "commit": {
            "abbreviatedOid": "6d77033"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-21T07:18:34Z",
          "updatedAt": "2020-04-21T07:18:35Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Trivial style change:\r\n```suggestion\r\nequal to or higher than the record which is being acknowledged (with \r\nthe exception of epoch 1, which MUST NOT be used for sending ACKs).\r\n```",
              "createdAt": "2020-04-21T07:18:35Z",
              "updatedAt": "2020-04-21T07:18:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MDU5OTcz",
          "commit": {
            "abbreviatedOid": "6d77033"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "@ekr LGTM, thanks!",
          "createdAt": "2020-04-21T07:31:22Z",
          "updatedAt": "2020-04-21T07:31:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 143,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA2OTg3Mjk5",
      "title": "Explicitly provide integrity for the CID",
      "url": "https://github.com/tlswg/dtls13-spec/pull/143",
      "state": "CLOSED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is in response to @hanno-arm pointing out that otherwise the CID is not protected.\r\n\r\nWith that said, I think it might be simpler to simply forbid CID elision.",
      "createdAt": "2020-04-22T01:15:20Z",
      "updatedAt": "2020-05-29T15:47:42Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "c86041133c06d8bcf7ccfad1b593e5bd48ae31fd",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "ad_for_cid",
      "headRefOid": "8a9823c76b0832bed04d6121bc98d7f565388018",
      "closedAt": "2020-05-29T15:47:42Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing since #148 was merged.",
          "createdAt": "2020-05-29T15:47:42Z",
          "updatedAt": "2020-05-29T15:47:42Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMzM0MzQy",
          "commit": {
            "abbreviatedOid": "8a9823c"
          },
          "author": "seanturner",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-25T00:24:52Z",
          "updatedAt": "2020-04-25T00:24:52Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Is this missing \"with Connection ID.\" from the end of the last sentence?",
              "createdAt": "2020-04-25T00:24:52Z",
              "updatedAt": "2020-04-25T00:24:52Z"
            }
          ]
        }
      ]
    },
    {
      "number": 146,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE3MTI4Mzg0",
      "title": "Cleanup whitespace",
      "url": "https://github.com/tlswg/dtls13-spec/pull/146",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-05-13T05:35:12Z",
      "updatedAt": "2020-05-17T22:15:57Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "c86041133c06d8bcf7ccfad1b593e5bd48ae31fd",
      "headRepository": "martinthomson/dtls13-spec",
      "headRefName": "fix-lints",
      "headRefOid": "98b3a828c2d7139d4c440372adc7f3659a959b40",
      "closedAt": "2020-05-17T22:15:57Z",
      "mergedAt": "2020-05-17T22:15:57Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "d60c2918d62da859c885a02517b1368b11e28db2"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Fine for me. ",
          "createdAt": "2020-05-15T11:56:14Z",
          "updatedAt": "2020-05-15T11:56:14Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 147,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE3MTQ5OTY4",
      "title": "Define anti-forgery limits for DTLS",
      "url": "https://github.com/tlswg/dtls13-spec/pull/147",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "And define limits for the CCM ciphers.\r\n\r\nThis turned out to be a little tricky.  I copied the text about\r\nAEAD_AES_128_CCM from the QUIC PR, which is easy, but AEAD_AES_128_CCM_8\r\nis a while different story.  As that is defined in TLS 1.3, it seems\r\nnecessary to address it here.  QUIC simply doesn't allow that, but I\r\nassume that DTLS will.\r\n\r\nOn the basis that DTLS will allow AEAD_AES_128_CCM_8, we need some\r\nlanguage about it.  I've tried to write something, but I'm not very\r\nhappy with it.  I'd greatly prefer not to allow this AEAD in DTLS.  It's\r\nbasically fine in TLS, but here the margins are just too narrow.  \r\n\r\nI realize that 2^-57 is essentially arbitrary, you might reasonably say that 2^-40 is better, but that would change the analysis in other ways.\r\n\r\nCloses #145.\r\n\r\n",
      "createdAt": "2020-05-13T06:38:06Z",
      "updatedAt": "2020-05-19T01:18:08Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "c86041133c06d8bcf7ccfad1b593e5bd48ae31fd",
      "headRepository": "martinthomson/dtls13-spec",
      "headRefName": "aead-limits",
      "headRefOid": "a94054dc73771e47c612c13a6791b8c9bdc486af",
      "closedAt": "2020-05-19T00:36:10Z",
      "mergedAt": "2020-05-19T00:36:09Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "9df8d8add186bf8e603c7ad3cd86a1efea13d2e8"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "We cannot get rid of CCM_8 because this is used in various IoT standards and it is also implemented in hardware. ",
          "createdAt": "2020-05-15T11:54:41Z",
          "updatedAt": "2020-05-15T11:54:41Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> We cannot get rid of CCM_8\r\n\r\nThat's why this PR is shaped as it is.  Some of us which we could get rid of it though; it's just not strong enough.",
          "createdAt": "2020-05-18T00:41:01Z",
          "updatedAt": "2020-05-18T00:41:01Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjgwMTc2",
          "commit": {
            "abbreviatedOid": "5acfbac"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T00:57:03Z",
          "updatedAt": "2020-05-15T00:59:35Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "A few points:\r\n\r\n1. You need to initiate a key update with UpdateRequested, right?\r\n2. The limit is actually per key, right?\r\n3. Once the update has started, you could presumably drop the new epoch keys early rather than terminating the connection.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
              "createdAt": "2020-05-15T00:57:03Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            },
            {
              "originalPosition": 123,
              "body": "Why does it recommend that?",
              "createdAt": "2020-05-15T00:57:35Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            },
            {
              "originalPosition": 133,
              "body": "Do we have some idea what those protections might be?",
              "createdAt": "2020-05-15T00:57:59Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            },
            {
              "originalPosition": 240,
              "body": "I haven't read this section yet, so this is a TODO for me.",
              "createdAt": "2020-05-15T00:59:32Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjkzMDE2",
          "commit": {
            "abbreviatedOid": "5acfbac"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T01:41:51Z",
          "updatedAt": "2020-05-15T01:41:51Z",
          "comments": [
            {
              "originalPosition": 123,
              "body": "Because we felt like it.\r\n\r\nWe could split the difference and use 2^60 for GCM, but it's a ludicrous number.",
              "createdAt": "2020-05-15T01:41:51Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjk0MDc5",
          "commit": {
            "abbreviatedOid": "5acfbac"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T01:45:37Z",
          "updatedAt": "2020-05-15T01:45:38Z",
          "comments": [
            {
              "originalPosition": 133,
              "body": "My only thought here is that you might have a hard limit on the number of packets you can receive, ever that makes larger limits meaningless.\r\n\r\nMore realistically, this probably comes down to having a higher tolerance for forgeries in that application.  In the real-time case, the window over which a forgery has any effect is pretty narrow.  For instance, new video I-frames replace the entire scene.  So I can see how someone might justify a higher tolerance for forgery.",
              "createdAt": "2020-05-15T01:45:37Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjk0MTA4",
          "commit": {
            "abbreviatedOid": "5acfbac"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T01:45:42Z",
          "updatedAt": "2020-05-15T01:45:43Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "1. Good point.  QUIC doesn't have this distinction, but it matters here.\r\n\r\n2. Yes, per key.  Will clarify (and in QUIC too).\r\n\r\n3. That's a good point.  I'll add something.",
              "createdAt": "2020-05-15T01:45:42Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzUzMTg1",
          "commit": {
            "abbreviatedOid": "4687c2e"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T05:17:20Z",
          "updatedAt": "2020-05-15T05:17:21Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "One might mention here that the recommended action is to issue a `KeyUpdate` to update the keys (in particular, it's not necessary to terminate the connection).",
              "createdAt": "2020-05-15T05:17:20Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzUzMjQw",
          "commit": {
            "abbreviatedOid": "4687c2e"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T05:17:32Z",
          "updatedAt": "2020-05-15T05:17:32Z",
          "comments": [
            {
              "originalPosition": 99,
              "body": "Why is this a SHOULD NOT and not a MUST NOT?",
              "createdAt": "2020-05-15T05:17:32Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzUzOTMz",
          "commit": {
            "abbreviatedOid": "4687c2e"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T05:19:49Z",
          "updatedAt": "2020-05-15T05:19:50Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "IIRC, the spec recommends to do so, but it doesn't enforce it.",
              "createdAt": "2020-05-15T05:19:49Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzU0Mjcx",
          "commit": {
            "abbreviatedOid": "4687c2e"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T05:20:48Z",
          "updatedAt": "2020-05-15T05:20:49Z",
          "comments": [
            {
              "originalPosition": 114,
              "body": "Nitpick: As detailed in the next sentence, what needs to be counted is the number of failed authentications for a particular key, not the global number. The first sentence might be rephrased accordingly.",
              "createdAt": "2020-05-15T05:20:48Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzU1NzEw",
          "commit": {
            "abbreviatedOid": "4687c2e"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T05:25:52Z",
          "updatedAt": "2020-05-15T05:25:52Z",
          "comments": [
            {
              "originalPosition": 124,
              "body": "\"... the number of records ... _is_ 2^36.\" is quite strong wording, and in particular it's not clear where this number comes from and whether it's taken from one of the papers, a universal, or our own recommendation. I'd suggestt to either name the source here, or add a half sentence like \"this specification recommends ...\"",
              "createdAt": "2020-05-15T05:25:52Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzU2OTQ5",
          "commit": {
            "abbreviatedOid": "4687c2e"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Thanks for the review @hanno-arm.",
          "createdAt": "2020-05-15T05:29:33Z",
          "updatedAt": "2020-05-15T05:36:43Z",
          "comments": [
            {
              "originalPosition": 99,
              "body": "Because TLS 1.3 uses SHOULD NOT.",
              "createdAt": "2020-05-15T05:29:33Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            },
            {
              "originalPosition": 110,
              "body": ">    If the decryption fails, the receiver MUST terminate the connection with a \"bad_record_mac\" alert.\r\n-- https://tools.ietf.org/html/rfc8446#section-5.2\r\n\r\nThat seems pretty clear to me.",
              "createdAt": "2020-05-15T05:31:05Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            },
            {
              "originalPosition": 100,
              "body": "Willdo.",
              "createdAt": "2020-05-15T05:31:41Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            },
            {
              "originalPosition": 114,
              "body": "Sounds good.",
              "createdAt": "2020-05-15T05:32:31Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            },
            {
              "originalPosition": 124,
              "body": "I'm using a SHOULD instead of MUST for the limit now, so I don't feel like the definitive statement needs to be softened any.\r\n\r\nAs far as it goes, if you feel like you can drop >60 billion bogus records and keep going, then you are welcome to do so.",
              "createdAt": "2020-05-15T05:36:29Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzU5MzQ5",
          "commit": {
            "abbreviatedOid": "4687c2e"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T05:37:18Z",
          "updatedAt": "2020-05-15T05:37:18Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "General question: Is this analysis something that should be part of the spec, or should it rather be published separately and only referenced here?",
              "createdAt": "2020-05-15T05:37:18Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzU5NDYz",
          "commit": {
            "abbreviatedOid": "a64ec55"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T05:37:40Z",
          "updatedAt": "2020-05-15T05:37:40Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "No, I mean the DTLS part.",
              "createdAt": "2020-05-15T05:37:40Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzYwNzI0",
          "commit": {
            "abbreviatedOid": "a64ec55"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T05:41:45Z",
          "updatedAt": "2020-05-15T05:41:45Z",
          "comments": [
            {
              "originalPosition": 246,
              "body": "Nitpick: `usage` -> `key usage`.",
              "createdAt": "2020-05-15T05:41:45Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzkwMjQ2",
          "commit": {
            "abbreviatedOid": "a64ec55"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T06:53:39Z",
          "updatedAt": "2020-05-15T06:53:40Z",
          "comments": [
            {
              "originalPosition": 303,
              "body": "General remark on the analysis: While its result is stated in terms of number of packets, assuming a fixed (large) size per packet, the analysis itself seems to rather involve the total number of blocks that are being protected. For some applications with very small packet sizes, the derived recommendations in terms of packet numbers will therefore be unnecessarily strict. Given that the derived constraints are of practical relevance, I wonder if it's worth stating the analysis in terms of total number of blocks, and derive a less precise but safe bound in terms of the number of packets from that. ",
              "createdAt": "2020-05-15T06:53:40Z",
              "updatedAt": "2020-05-15T09:00:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNDcxNTAx",
          "commit": {
            "abbreviatedOid": "a94054d"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T09:02:27Z",
          "updatedAt": "2020-05-15T09:02:27Z",
          "comments": [
            {
              "originalPosition": 303,
              "body": "This is something we discussed with respect to TLS as well.  Though you might get larger limits if you count blocks, doing so is not natural in (D)TLS.  If you think that a key update every 2^20-something is onerous, then you might want to count more closely, but the large number means that you don't really need to quibble about whether it is 2^24.5 or 2^29.5.",
              "createdAt": "2020-05-15T09:02:27Z",
              "updatedAt": "2020-05-15T09:02:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNDc0MDAx",
          "commit": {
            "abbreviatedOid": "a94054d"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-15T09:05:55Z",
          "updatedAt": "2020-05-15T09:05:56Z",
          "comments": [
            {
              "originalPosition": 303,
              "body": "Does it make a noteworthy difference for CCM-8, though, where the proposed integrity bound assuming full-length packets is quite low?",
              "createdAt": "2020-05-15T09:05:55Z",
              "updatedAt": "2020-05-15T09:05:56Z"
            }
          ]
        }
      ]
    },
    {
      "number": 148,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE5MTgyNDQw",
      "title": "Ban implicit CIDs",
      "url": "https://github.com/tlswg/dtls13-spec/pull/148",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As proposed on list.",
      "createdAt": "2020-05-17T22:15:16Z",
      "updatedAt": "2020-05-29T15:45:52Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "c86041133c06d8bcf7ccfad1b593e5bd48ae31fd",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "ban_implicit_cids2",
      "headRefOid": "836aabc549c7a0bc9ac2664ea557ee911052d8e0",
      "closedAt": "2020-05-29T15:45:52Z",
      "mergedAt": "2020-05-29T15:45:52Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "7a30795e0d015373074e39cced3960693054a634"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDcyNzA0",
          "commit": {
            "abbreviatedOid": "836aabc"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-29T15:45:34Z",
          "updatedAt": "2020-05-29T15:45:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 149,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE5MTgzODk3",
      "title": "Clear up that the ACK logic is the union",
      "url": "https://github.com/tlswg/dtls13-spec/pull/149",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-05-17T22:28:12Z",
      "updatedAt": "2020-05-21T02:54:24Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d60c2918d62da859c885a02517b1368b11e28db2",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "partial_acks",
      "headRefOid": "dc84344dcedfd1914f53cfdc018107257cb7fc69",
      "closedAt": "2020-05-21T02:54:24Z",
      "mergedAt": "2020-05-21T02:54:24Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "941cff132cc11a9f706fec1c720b5aad9b1ce213"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is editorial, so I'm merging as is.",
          "createdAt": "2020-05-21T02:54:21Z",
          "updatedAt": "2020-05-21T02:54:21Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1ODQ1ODcw",
          "commit": {
            "abbreviatedOid": "dc84344"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-21T02:54:08Z",
          "updatedAt": "2020-05-21T02:54:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 151,
      "id": "MDExOlB1bGxSZXF1ZXN0NDI1MTg1NjM1",
      "title": "Add a note about epoch linkability.",
      "url": "https://github.com/tlswg/dtls13-spec/pull/151",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #150.",
      "createdAt": "2020-05-29T15:52:50Z",
      "updatedAt": "2020-05-29T15:55:05Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "7a30795e0d015373074e39cced3960693054a634",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "caw/epoch-linkability",
      "headRefOid": "24a2528fdfd062d590730530d28b078f67ed1eca",
      "closedAt": "2020-05-29T15:55:05Z",
      "mergedAt": "2020-05-29T15:55:05Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "3fc2fbbd70e65fac6b28ac369041053164ca3ba5"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM.\r\n",
          "createdAt": "2020-05-29T15:53:35Z",
          "updatedAt": "2020-05-29T15:53:35Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 152,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM1NDUwMjkz",
      "title": "ROBUST: ePrint publication, typo fixes",
      "url": "https://github.com/tlswg/dtls13-spec/pull/152",
      "state": "MERGED",
      "author": "fxguenther",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Our paper on robust channels is now available in the IACR ePrint archive. I updated title + link, and fixed some typos.",
      "createdAt": "2020-06-16T20:29:35Z",
      "updatedAt": "2020-06-22T00:12:31Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "2d578635a428b612481ae9db7b137716251bfaa2",
      "headRepository": "fxguenther/dtls13-spec",
      "headRefName": "patch-1",
      "headRefOid": "45570416bd599bc21f7575422bdd615737fda8c2",
      "closedAt": "2020-06-22T00:12:31Z",
      "mergedAt": "2020-06-22T00:12:31Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "4bdcf3ea561e864ff84333238c852a72c14dec9e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NTQ1OTUy",
          "commit": {
            "abbreviatedOid": "4557041"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-22T00:12:27Z",
          "updatedAt": "2020-06-22T00:12:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 154,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE0Mjg1NjQ4",
      "title": "Corrected Figure 4",
      "url": "https://github.com/tlswg/dtls13-spec/pull/154",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-02T20:00:49Z",
      "updatedAt": "2020-11-02T21:05:52Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "4bdcf3ea561e864ff84333238c852a72c14dec9e",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-22",
      "headRefOid": "996905d407203afaa02b501af1794c8c96134063",
      "closedAt": "2020-11-02T21:05:52Z",
      "mergedAt": "2020-11-02T21:05:52Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "f4126dfaceee0e396724038ed08ef9c5d8c5ea29"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxOTgwODcx",
          "commit": {
            "abbreviatedOid": "996905d"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-11-02T20:47:54Z",
          "updatedAt": "2020-11-02T20:47:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 155,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE0MzI3NzE0",
      "title": "Changes in Markdown",
      "url": "https://github.com/tlswg/dtls13-spec/pull/155",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR reflects submitted draft version -39",
      "createdAt": "2020-11-02T21:24:10Z",
      "updatedAt": "2020-11-06T11:30:33Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "f4126dfaceee0e396724038ed08ef9c5d8c5ea29",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-23",
      "headRefOid": "af36fa33f5a362adb95247573d079fe653bb6f20",
      "closedAt": "2020-11-06T11:30:22Z",
      "mergedAt": "2020-11-06T11:30:22Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "94032c96856c3fb1aee71cb2a220d3004932d8af"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 156,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE2Njg1NTk3",
      "title": "Boilerplate Text Change",
      "url": "https://github.com/tlswg/dtls13-spec/pull/156",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-06T11:30:03Z",
      "updatedAt": "2020-11-06T14:45:50Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "f4126dfaceee0e396724038ed08ef9c5d8c5ea29",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-24",
      "headRefOid": "89a49800fdb5a1426987c36c954bfef95333c8b8",
      "closedAt": "2020-11-06T14:45:46Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 157,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE2NzkxODY0",
      "title": "Referencing the DTLSInnerPlaintext from the encrypted_record structure",
      "url": "https://github.com/tlswg/dtls13-spec/pull/157",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Thanks to feedback from Andy Cunningham.",
      "createdAt": "2020-11-06T14:48:36Z",
      "updatedAt": "2020-12-28T22:47:50Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "02a790789f5bd2610a080a4fbfd2b36428e6d697",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-23",
      "headRefOid": "0c21c3220e1c3fda246487ec78a382608abca7c6",
      "closedAt": "2020-12-28T22:47:50Z",
      "mergedAt": "2020-12-28T22:47:50Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "8784a1218186ca0c8cdf185d836b58f0ea1ada71"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 160,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIwOTA0NjY2",
      "title": "editorial/nits from AD review",
      "url": "https://github.com/tlswg/dtls13-spec/pull/160",
      "state": "MERGED",
      "author": "kaduk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Hopefully nothing controversial in here.\r\nI went for adding the missing reserved handshake types rather than removing all the reserved ones, since I assume that we will eventually fix up the automation to only show the reserved values in the appendix and skip them in the body text.",
      "createdAt": "2020-11-13T23:48:13Z",
      "updatedAt": "2020-12-07T15:26:28Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "94032c96856c3fb1aee71cb2a220d3004932d8af",
      "headRepository": "kaduk/dtls13-spec",
      "headRefName": "ad-rev",
      "headRefOid": "651ff09fe6872f7ce6fe33564c007cf53369b2ea",
      "closedAt": "2020-12-07T15:26:28Z",
      "mergedAt": "2020-12-07T15:26:28Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "236fc4fce406544c799d492ff2286122bf986f0b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 161,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIwOTc0OTI0",
      "title": "Ciphersuites seems to miss a \"_8\"",
      "url": "https://github.com/tlswg/dtls13-spec/pull/161",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Should be TLS_AES_128_CCM_8_SHA256 and not TLS_AES_128_CCM_SHA256",
      "createdAt": "2020-11-14T07:47:28Z",
      "updatedAt": "2020-12-10T16:05:36Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "94032c96856c3fb1aee71cb2a220d3004932d8af",
      "headRepository": "emanjon/dtls13-spec",
      "headRefName": "patch-4",
      "headRefOid": "8f373e568eed095abbeb73458ae7fca8de1590dd",
      "closedAt": "2020-12-10T16:05:36Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by merging @kaduk PR",
          "createdAt": "2020-12-07T15:26:57Z",
          "updatedAt": "2020-12-07T15:26:57Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NzcyNDA5",
          "commit": {
            "abbreviatedOid": "8f373e5"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-07T00:54:21Z",
          "updatedAt": "2020-12-07T00:54:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 163,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzMjY4MzIw",
      "title": "Reference tls-old-versions-deprecate",
      "url": "https://github.com/tlswg/dtls13-spec/pull/163",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-06T21:17:35Z",
      "updatedAt": "2020-12-09T15:57:01Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "94032c96856c3fb1aee71cb2a220d3004932d8af",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "reference_deprecate",
      "headRefOid": "edf8e5ca295847c38e776f0554255f52bf33213f",
      "closedAt": "2020-12-09T15:57:01Z",
      "mergedAt": "2020-12-09T15:57:01Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "68c38b7491c4d12f67dde40f72aa1a85421a8894"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NzcyNTU1",
          "commit": {
            "abbreviatedOid": "9c5df0b"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-07T00:55:15Z",
          "updatedAt": "2020-12-07T00:55:15Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NzcyNjYx",
          "commit": {
            "abbreviatedOid": "9c5df0b"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-07T00:55:54Z",
          "updatedAt": "2020-12-07T00:56:01Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "A symbolic reference for this might be easy to parse.  Though I doubt that will matter long-term.\r\n\r\n```suggestion\r\nrecommended as explained in Section 3.1.2 of RFC 7525 {{RFC7525}} and {{?DEPRECATE=I-D.ietf-tls-oldversions-deprecate}}.\r\n```",
              "createdAt": "2020-12-07T00:55:54Z",
              "updatedAt": "2020-12-07T01:48:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MzMyNzQ0",
          "commit": {
            "abbreviatedOid": "edf8e5c"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-09T15:56:54Z",
          "updatedAt": "2020-12-09T15:56:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 164,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzMjY5MTQ1",
      "title": "Clean up use of connection and association",
      "url": "https://github.com/tlswg/dtls13-spec/pull/164",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This should make things correct. We might consider getting rid of the term connection or association entirely, but each is problematic: association is a historical term but we also use connection a lot anyway.",
      "createdAt": "2020-12-06T21:23:19Z",
      "updatedAt": "2020-12-09T16:08:22Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "94032c96856c3fb1aee71cb2a220d3004932d8af",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "connection_association",
      "headRefOid": "0078111b22312d341508c0d07da30637aa175815",
      "closedAt": "2020-12-09T16:08:22Z",
      "mergedAt": "2020-12-09T16:08:22Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9ae6dea65517c6a8c0784b5fdebd9c27c86e0098"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1Nzc1MTI0",
          "commit": {
            "abbreviatedOid": "0078111"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "It's a shame that \"association\" is so firmly entrenched.  I don't see \"association\" being used much anyway.  Good that you have removed \"session\" though.",
          "createdAt": "2020-12-07T01:09:03Z",
          "updatedAt": "2020-12-07T01:09:03Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MzM1MTc3",
          "commit": {
            "abbreviatedOid": "0078111"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-09T15:59:10Z",
          "updatedAt": "2020-12-09T15:59:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 165,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzMjcwNjIy",
      "title": "Fixed portions of the record layer",
      "url": "https://github.com/tlswg/dtls13-spec/pull/165",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-06T21:33:27Z",
      "updatedAt": "2020-12-09T16:11:47Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "94032c96856c3fb1aee71cb2a220d3004932d8af",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "record_layer",
      "headRefOid": "16f5739786e8641b363b682e40bb2afc5828d782",
      "closedAt": "2020-12-09T16:11:47Z",
      "mergedAt": "2020-12-09T16:11:47Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "42b7b6c441638cc28bdd9d1890f1aa8861ddf9df"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1Nzc0OTQx",
          "commit": {
            "abbreviatedOid": "16f5739"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-07T01:08:06Z",
          "updatedAt": "2020-12-07T01:08:06Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MzQ4MzMx",
          "commit": {
            "abbreviatedOid": "16f5739"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-09T16:11:41Z",
          "updatedAt": "2020-12-09T16:11:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 166,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzMjg5NDg5",
      "title": "Require that cipher suites define a record number encryption algorithm",
      "url": "https://github.com/tlswg/dtls13-spec/pull/166",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "consensus-needed"
      ],
      "body": "",
      "createdAt": "2020-12-06T23:42:30Z",
      "updatedAt": "2021-01-20T13:28:45Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "777644fe92b67f39eb89a94c86c1ac25a021f15b",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "record_number_algorithms",
      "headRefOid": "410d6a48121f18b046132f6c21f6be9b9edbbc68",
      "closedAt": "2021-01-20T13:28:44Z",
      "mergedAt": "2021-01-20T13:28:44Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "39cb996b7c8849bacfd401d9c6698acbd2a2d545"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I guess not. Ugh.\n\nOn Mon, Dec 28, 2020 at 10:02 PM kaduk <notifications@github.com> wrote:\n\n> *@kaduk* commented on this pull request.\n> ------------------------------\n>\n> In draft-ietf-tls-dtls13.md\n> <https://github.com/tlswg/dtls13-spec/pull/166#discussion_r549578913>:\n>\n> > +IANA [SHALL mark/has marked] the cipher suites TLS_SHA256_SHA256 and\n> +TLS_SHA384_SHA_384 DTLS=N.\n>\n> Yes, they are. Is that wrong? Is that more wrong than having MAC-only\n> ciphersuites in the first place?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tlswg/dtls13-spec/pull/166#discussion_r549578913>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAIPLILCKPNSMOEGCAIJZJ3SXFWGTANCNFSM4UPWAF7Q>\n> .\n>\n",
          "createdAt": "2020-12-29T13:58:09Z",
          "updatedAt": "2020-12-29T13:58:09Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1Nzc0ODUy",
          "commit": {
            "abbreviatedOid": "a7cacb4"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-07T01:07:38Z",
          "updatedAt": "2020-12-07T01:07:38Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4Njk5OTkx",
          "commit": {
            "abbreviatedOid": "a7cacb4"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This one requires WG consensus, I think.",
          "createdAt": "2020-12-09T23:29:57Z",
          "updatedAt": "2020-12-09T23:30:12Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nIANA [SHALL set] the \"DTLS-OK\" column value for cipher suites TLS_SHA256_SHA256 and\r\nTLS_SHA384_SHA_384 to \"N\".\r\n```",
              "createdAt": "2020-12-09T23:29:57Z",
              "updatedAt": "2021-01-05T04:19:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NzE5NDg1",
          "commit": {
            "abbreviatedOid": "a7cacb4"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-10T00:10:28Z",
          "updatedAt": "2020-12-10T00:10:28Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I can't decide whether this requirement merits adding this document as a reference for the ciphersuites registry.",
              "createdAt": "2020-12-10T00:10:28Z",
              "updatedAt": "2021-01-05T04:19:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NzkyNTQw",
          "commit": {
            "abbreviatedOid": "a7cacb4"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-10T03:29:35Z",
          "updatedAt": "2020-12-10T03:29:35Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I would say yes, provided that it is additive.",
              "createdAt": "2020-12-10T03:29:35Z",
              "updatedAt": "2021-01-05T04:19:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4Nzk0MzM0",
          "commit": {
            "abbreviatedOid": "a7cacb4"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-10T03:35:01Z",
          "updatedAt": "2020-12-10T03:35:01Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Agreed.",
              "createdAt": "2020-12-10T03:35:01Z",
              "updatedAt": "2021-01-05T04:19:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDAzMTQ3",
          "commit": {
            "abbreviatedOid": "a7cacb4"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T10:06:42Z",
          "updatedAt": "2020-12-20T10:06:42Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "What does this imply for the document itself? Do we need to capture it in the IANA consideration section or would we ask IANA to update the references for the TLS Cipher Suites registry at https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml?\r\n ",
              "createdAt": "2020-12-20T10:06:42Z",
              "updatedAt": "2021-01-05T04:19:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDAzMzM4",
          "commit": {
            "abbreviatedOid": "a7cacb4"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T10:09:26Z",
          "updatedAt": "2020-12-20T10:09:26Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Why do we need to add this IANA entry in this document? Shouldn't https://tools.ietf.org/html/draft-camwinget-tls-ts13-macciphersuites-08 add it to IANA given that they are defining the ciphersuite? \r\n",
              "createdAt": "2020-12-20T10:09:26Z",
              "updatedAt": "2021-01-05T04:19:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDcwNDk5",
          "commit": {
            "abbreviatedOid": "a7cacb4"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T23:08:52Z",
          "updatedAt": "2020-12-20T23:08:52Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Typically we would have this document's IANA Considerations section request IANA to update the references for the registry to add this document as a reference.",
              "createdAt": "2020-12-20T23:08:52Z",
              "updatedAt": "2021-01-05T04:19:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDcwNTc3",
          "commit": {
            "abbreviatedOid": "a7cacb4"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T23:10:15Z",
          "updatedAt": "2020-12-20T23:10:16Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I agree with Hannes; I don't think we need to do anything about the MAC-only ciphersuites entries.\r\nI've already been in contact with the authors (and DEs) and the authors plan to add text to handle this case.  (Though, they claim that the record numbers will just not be encrypted and that's okay.)",
              "createdAt": "2020-12-20T23:10:15Z",
              "updatedAt": "2021-01-05T04:19:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzQzNzg1",
          "commit": {
            "abbreviatedOid": "a7cacb4"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-29T00:47:02Z",
          "updatedAt": "2020-12-29T00:47:03Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "They are already in the registry and marked DTLS-OK.",
              "createdAt": "2020-12-29T00:47:03Z",
              "updatedAt": "2021-01-05T04:19:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzQ0MDc4",
          "commit": {
            "abbreviatedOid": "c11af72"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-29T00:49:18Z",
          "updatedAt": "2020-12-29T00:49:18Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Done.",
              "createdAt": "2020-12-29T00:49:18Z",
              "updatedAt": "2021-01-05T04:19:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5Mzg4MzQ3",
          "commit": {
            "abbreviatedOid": "c11af72"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-29T06:02:03Z",
          "updatedAt": "2020-12-29T06:02:04Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Yes, they are.  Is that wrong?  Is that more wrong than having MAC-only ciphersuites in the first place?",
              "createdAt": "2020-12-29T06:02:04Z",
              "updatedAt": "2021-01-05T04:19:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjk1MDUz",
          "commit": {
            "abbreviatedOid": "c11af72"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-04T19:46:00Z",
          "updatedAt": "2021-01-04T19:46:01Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nallocated.\r\n```",
              "createdAt": "2021-01-04T19:46:00Z",
              "updatedAt": "2021-01-05T04:19:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjk2ODc4",
          "commit": {
            "abbreviatedOid": "7760adb"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-04T19:48:50Z",
          "updatedAt": "2021-01-04T19:48:50Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Yeah, I guess we have to live with this.",
              "createdAt": "2021-01-04T19:48:50Z",
              "updatedAt": "2021-01-05T04:19:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjk4MDA2",
          "commit": {
            "abbreviatedOid": "c34d908"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-04T19:50:31Z",
          "updatedAt": "2021-01-04T19:50:32Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\n```",
              "createdAt": "2021-01-04T19:50:31Z",
              "updatedAt": "2021-01-05T04:19:39Z"
            }
          ]
        }
      ]
    },
    {
      "number": 168,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzMjkwNDk3",
      "title": "PMTU estimates",
      "url": "https://github.com/tlswg/dtls13-spec/pull/168",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "consensus-needed"
      ],
      "body": "",
      "createdAt": "2020-12-06T23:49:06Z",
      "updatedAt": "2021-01-20T13:29:45Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "39cb996b7c8849bacfd401d9c6698acbd2a2d545",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "pmtu_updates",
      "headRefOid": "8b96a8766405c5ba4f2d1017558c5128cc55fcd7",
      "closedAt": "2021-01-20T13:29:45Z",
      "mergedAt": "2021-01-20T13:29:45Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "10cddef7167f52d82051936af247eb6086060b67"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "I am OK with this change. There are no normative changes in there because the normative text segment is only moved to a different paragraph. ",
          "createdAt": "2020-12-20T10:02:19Z",
          "updatedAt": "2020-12-20T10:02:19Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I was referring to this added clause: \"alternately it *MAY* report PMTU estimates minus the estimated expansion from the transport layer and DTLS record framing.\"",
          "createdAt": "2020-12-20T16:05:40Z",
          "updatedAt": "2020-12-20T16:05:40Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "What is awkward here is that this is phrased as normative requirements on an API.  Maybe worded as advice \"an application that uses DTLS might need information from DTLS to allow it to estimate the PMTU; DTLS could report a PMTU estimate less any DTLS overheads, or it can report those overheads and allow the application to perform its own estimation\"",
          "createdAt": "2020-12-20T23:31:36Z",
          "updatedAt": "2020-12-20T23:31:36Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "There has historically been API language here, so I think we should keep it and just adjust it as here.",
          "createdAt": "2020-12-21T15:19:43Z",
          "updatedAt": "2020-12-21T15:19:43Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1Nzc0Njg1",
          "commit": {
            "abbreviatedOid": "cf7542d"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-07T01:06:47Z",
          "updatedAt": "2020-12-07T01:07:10Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nIf there is a transport protocol indication that the PMTU was exceeded\r\n```",
              "createdAt": "2020-12-07T01:06:47Z",
              "updatedAt": "2021-01-20T13:29:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NzA4NDAx",
          "commit": {
            "abbreviatedOid": "1b9b5fa"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This one probably needs consensus given new normative language.",
          "createdAt": "2020-12-09T23:43:52Z",
          "updatedAt": "2020-12-09T23:43:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 169,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzMjkxNzcy",
      "title": "Updates to cookie text",
      "url": "https://github.com/tlswg/dtls13-spec/pull/169",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "consensus-needed"
      ],
      "body": "",
      "createdAt": "2020-12-06T23:57:58Z",
      "updatedAt": "2021-01-20T13:30:24Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "777644fe92b67f39eb89a94c86c1ac25a021f15b",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "stateless_cookie",
      "headRefOid": "54c349f3c820566dd523cbf12258205adff3e458",
      "closedAt": "2021-01-20T13:30:24Z",
      "mergedAt": "2021-01-20T13:30:23Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "65f68da9163cd771a03cfa757e1c44647fe6944a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1Nzc0MTY1",
          "commit": {
            "abbreviatedOid": "b085b02"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "There is an error in the second addition here, I think.",
          "createdAt": "2020-12-07T01:03:39Z",
          "updatedAt": "2020-12-07T01:05:51Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n{{RFC8446}}; Section 4.2.2).\r\n```",
              "createdAt": "2020-12-07T01:03:39Z",
              "updatedAt": "2021-01-04T20:04:24Z"
            },
            {
              "originalPosition": 17,
              "body": "SHOULD?\r\n\r\nIsn't the alternative here to acknowledge the possibility that 0.5-RTT response are sent to an address that has not demonstrated a willingness to communicate.",
              "createdAt": "2020-12-07T01:05:07Z",
              "updatedAt": "2021-01-04T20:04:24Z"
            },
            {
              "originalPosition": 18,
              "body": "IMPORTANT: you just said that no cookie exchange is involved.  I think that you mean session ticket.\r\n\r\n```suggestion\r\nstore the client's IP in the session ticket and limit the size of their\r\n```",
              "createdAt": "2020-12-07T01:05:39Z",
              "updatedAt": "2021-01-04T20:04:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1Nzg0MjA2",
          "commit": {
            "abbreviatedOid": "d56e250"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-07T01:54:10Z",
          "updatedAt": "2020-12-07T01:54:10Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Do you have proposed text.",
              "createdAt": "2020-12-07T01:54:10Z",
              "updatedAt": "2021-01-04T20:04:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1Nzg0MjQ4",
          "commit": {
            "abbreviatedOid": "d56e250"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-07T01:54:23Z",
          "updatedAt": "2020-12-07T01:54:23Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "yeah, clearly it's getting too late in the day for me to edit.",
              "createdAt": "2020-12-07T01:54:23Z",
              "updatedAt": "2021-01-04T20:04:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODM3MjQ5",
          "commit": {
            "abbreviatedOid": "acaecc4"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-07T05:20:14Z",
          "updatedAt": "2020-12-07T05:20:14Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nServers which process 0-RTT requests and send 0.5-RTT responses\r\nwithout a cookie exchange risk being used in an amplification attack\r\nif the size of outgoing greatly exceeds the size of those that are received.\r\nA server SHOULD limit the amount of data it sends toward a client address\r\nbefore it verifies that the client is able to receive data at that address.\r\nA client address is valid after a cookie exchange or handshake completion.\r\nA server MAY apply a higher limit based on heuristics, such as if the client\r\nuses the same IP address as a recent connection.\r\n```",
              "createdAt": "2020-12-07T05:20:14Z",
              "updatedAt": "2021-01-04T20:04:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MjM2NjUw",
          "commit": {
            "abbreviatedOid": "acaecc4"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This LGTM pending @martinthomson's suggestion and possibly a small tweak on top. This one will require consensus, too.",
          "createdAt": "2020-12-10T14:14:56Z",
          "updatedAt": "2020-12-10T14:15:22Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "This suggested text reads fine to me. Do we want to also include @ekr's suggestion that the ticket store the client's address, if only as a way of checking \"if the client uses the same IP address as a recent connection\"?",
              "createdAt": "2020-12-10T14:14:56Z",
              "updatedAt": "2021-01-04T20:04:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDA0MDI1",
          "commit": {
            "abbreviatedOid": "200e7d9"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T10:19:17Z",
          "updatedAt": "2020-12-20T10:19:17Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "I wonder whether it makes sense to put out that this is not the regular amplification attack because the 0-RTT message is authenticated. While there is a risk of replay attack here, this assumes that \r\n(a) the attacker has been able to observe the initial 0-RTT request, or \r\n(b) the attacker is the endpoint transmitting the 0-RTT request itself. \r\n\r\nIn case (b), if the endpoint was authenticated in the initial handshake then it is fairly easy to determine the source of the attack. In a classical amplification attack the adversary would probably also modify the source IP address to conceal its location, which does not help much here.  \r\n\r\nAm I seeing this wrong? ",
              "createdAt": "2020-12-20T10:19:17Z",
              "updatedAt": "2021-01-04T20:04:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzQzMjEy",
          "commit": {
            "abbreviatedOid": "200e7d9"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-29T00:42:58Z",
          "updatedAt": "2020-12-29T00:42:58Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "No I think you're right, but I think the text covers it reasonably well.",
              "createdAt": "2020-12-29T00:42:58Z",
              "updatedAt": "2021-01-04T20:04:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzYyNTg1",
          "commit": {
            "abbreviatedOid": "5db5206"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Generally fine; just a nit",
          "createdAt": "2020-12-29T03:02:21Z",
          "updatedAt": "2020-12-29T03:03:45Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nif the size of outgoing messages greatly exceeds the size of those that are received.\r\n```",
              "createdAt": "2020-12-29T03:02:21Z",
              "updatedAt": "2021-01-04T20:04:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzA2ODU5",
          "commit": {
            "abbreviatedOid": "454d256"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-04T20:04:19Z",
          "updatedAt": "2021-01-04T20:04:20Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n{{!TLS13}}; Section 4.2.2).\r\n```",
              "createdAt": "2021-01-04T20:04:20Z",
              "updatedAt": "2021-01-04T20:04:24Z"
            }
          ]
        }
      ]
    },
    {
      "number": 171,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzMjk0MDcy",
      "title": "Clarify buffering and retransmission requirements",
      "url": "https://github.com/tlswg/dtls13-spec/pull/171",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "consensus-needed"
      ],
      "body": "Don't require always buffering and require that retransmission be identical.",
      "createdAt": "2020-12-07T00:11:32Z",
      "updatedAt": "2021-01-20T13:30:52Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "777644fe92b67f39eb89a94c86c1ac25a021f15b",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "handshake_reassembly",
      "headRefOid": "5c6c3f90810d4e56140c64faf290862c1f015257",
      "closedAt": "2021-01-20T13:30:52Z",
      "mergedAt": "2021-01-20T13:30:52Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "bcf11c19d4950944716ce4874b20712895b3f940"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1Nzc0MTA2",
          "commit": {
            "abbreviatedOid": "7d97c95"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-07T01:03:22Z",
          "updatedAt": "2020-12-07T01:03:24Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nwith an \"illegal_parameter\" alert if the value of a byte changes.\r\n```",
              "createdAt": "2020-12-07T01:03:22Z",
              "updatedAt": "2021-01-04T19:42:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MjQ0NDU2",
          "commit": {
            "abbreviatedOid": "79a81a1"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-10T14:22:57Z",
          "updatedAt": "2020-12-10T14:25:29Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nto the next expected handshake message sequence number, it\r\n```",
              "createdAt": "2020-12-10T14:22:58Z",
              "updatedAt": "2021-01-04T19:42:03Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nfragment sizes if the PMTU estimate changes. Senders MUST NOT change \r\nhandshake message bytes upon retransmission. Receivers MAY check\r\n```",
              "createdAt": "2020-12-10T14:25:22Z",
              "updatedAt": "2021-01-04T19:42:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDA0MjUz",
          "commit": {
            "abbreviatedOid": "471a24a"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T10:22:57Z",
          "updatedAt": "2020-12-20T10:22:57Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "What handshake message bytes are you referring to here? ",
              "createdAt": "2020-12-20T10:22:57Z",
              "updatedAt": "2021-01-04T19:42:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDA0NTA3",
          "commit": {
            "abbreviatedOid": "471a24a"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T10:25:57Z",
          "updatedAt": "2020-12-20T10:25:57Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Are you making this extra clarification to keep the buffer size smaller? \r\n\r\nI think you are saying that when a client receives a fragment of a ServerHello message and a fragment of an EncryptedExtensions message then it needs to buffer the ServerHello message fragment (assuming that's the next message it has not yet received) while it may discard the fragment of the EncryptedExtensions message. Correct?",
              "createdAt": "2020-12-20T10:25:57Z",
              "updatedAt": "2021-01-04T19:42:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDcwNzgx",
          "commit": {
            "abbreviatedOid": "471a24a"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T23:12:43Z",
          "updatedAt": "2020-12-20T23:12:43Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "This is just trying to reiterate that retransmission is literally just retransmitting the content, with no changes.  I don't think there are any specific bytes that one might be especially tempted to change.",
              "createdAt": "2020-12-20T23:12:43Z",
              "updatedAt": "2021-01-04T19:42:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NDU4ODg5",
          "commit": {
            "abbreviatedOid": "471a24a"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-21T15:24:12Z",
          "updatedAt": "2020-12-21T15:24:13Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "That's correct. This has been the rule for some time, it's just that we managed to provide contradictory guidance.",
              "createdAt": "2020-12-21T15:24:12Z",
              "updatedAt": "2021-01-04T19:42:03Z"
            }
          ]
        }
      ]
    },
    {
      "number": 172,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzMzAzMzQ3",
      "title": "Relax age out text",
      "url": "https://github.com/tlswg/dtls13-spec/pull/172",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "consensus-needed"
      ],
      "body": "You don't want to age out before you get epoch 3 because otherwise you might be dropping when you have handshake packets.",
      "createdAt": "2020-12-07T00:45:04Z",
      "updatedAt": "2021-01-20T13:31:54Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "bcf11c19d4950944716ce4874b20712895b3f940",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "0_rtt_ageout",
      "headRefOid": "73a43dc14fb895c64e13af35c461835b36d8ae55",
      "closedAt": "2021-01-20T13:31:54Z",
      "mergedAt": "2021-01-20T13:31:54Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "054b8d90ff53ac716999af5d1dac6db59391a338"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "For my understanding: what is the harm of keeping the 0-RTT keys around till the end of the handshake?",
          "createdAt": "2020-12-20T10:29:04Z",
          "updatedAt": "2020-12-20T10:29:04Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "\"Yes, the goal is to encourage people not to keep 0-RTT keys too long, because they might not have PCS. The replay risk is essentially a non-issue, except to the extent that it might already have been replayed.\"",
          "createdAt": "2020-12-28T22:46:24Z",
          "updatedAt": "2020-12-28T22:46:24Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NzczOTU0",
          "commit": {
            "abbreviatedOid": "0ee34c4"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-07T01:02:33Z",
          "updatedAt": "2020-12-07T01:02:36Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "So the original advise was too strong, but I think that this is still too strong.\r\n\r\nEarly data has been accepted, the risk exists.  Being tolerant of packet ordering is a good practice.  I don't see why this couldn't just be:\r\n\r\n> Servers SHOULD NOT accept records from epoch 1 indefinitely once they are able to process records from epoch 3.  Though reordering of IP packets can result in records from epoch 1 arriving after records from epoch 3, this is not likely to persist for very long relative to the round trip time.  Servers could discard epoch 1 data that arrives after the first epoch 3 data, or retain the ability to process epoch 1 data for a short period.",
              "createdAt": "2020-12-07T01:02:33Z",
              "updatedAt": "2021-01-20T13:31:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NzgzNTcw",
          "commit": {
            "abbreviatedOid": "0ee34c4"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-07T01:51:07Z",
          "updatedAt": "2020-12-07T01:51:08Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I don't see the purpose here as trying to limit damage. The complete handshake retrospectively blesses the 0-RTT data I believe. I see the purpose as just \"age out keys fast\". But I think your text is fine too. @chris-wood ?",
              "createdAt": "2020-12-07T01:51:08Z",
              "updatedAt": "2021-01-20T13:31:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODM0NTY2",
          "commit": {
            "abbreviatedOid": "0ee34c4"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-07T05:10:55Z",
          "updatedAt": "2020-12-07T05:10:56Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Yes, the goal is to encourage people not to keep 0-RTT keys too long, because they might not have PCS.  The replay risk is essentially a non-issue, except to the extent that it might already have been replayed.",
              "createdAt": "2020-12-07T05:10:56Z",
              "updatedAt": "2021-01-20T13:31:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MjYwNzM2",
          "commit": {
            "abbreviatedOid": "0ee34c4"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2020-12-10T14:39:21Z",
          "updatedAt": "2020-12-10T14:42:11Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "@martinthomson's suggested text seems in line with how QUIC deals with this reordering issue, so I'd vote to take his suggestion.",
              "createdAt": "2020-12-10T14:39:22Z",
              "updatedAt": "2021-01-20T13:31:48Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nprevents in TLS. Servers SHOULD NOT accept records from epoch 1 indefinitely once they are able to process records from epoch 3. Though reordering of IP packets can result in records from epoch 1 arriving after records from epoch 3, this is not likely to persist for very long relative to the round trip time. Servers could discard epoch 1  keys after the first epoch 3 data arrives, or retain keys for processing epoch 1 data for a short period.\r\n```",
              "createdAt": "2020-12-10T14:42:06Z",
              "updatedAt": "2021-01-20T13:31:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 173,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzMzA4NzA4",
      "title": "Fix some issues around the Finished message",
      "url": "https://github.com/tlswg/dtls13-spec/pull/173",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-07T01:02:58Z",
      "updatedAt": "2020-12-10T14:46:15Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "7965b7fc7c53369e8514fee258797ad6ef94c2a8",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "fix_second_flight",
      "headRefOid": "26efe088cc0a38b187ad6a6a767fdc21f4d29145",
      "closedAt": "2020-12-10T14:46:15Z",
      "mergedAt": "2020-12-10T14:46:15Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "900d8f90897592c0dded4bb8f5c7a226dbdf5884"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODAzOTkz",
          "commit": {
            "abbreviatedOid": "f839765"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-07T03:12:47Z",
          "updatedAt": "2020-12-07T03:12:47Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\npeer. Implementations MAY treat receipt of application data with a new\r\n```",
              "createdAt": "2020-12-07T03:12:47Z",
              "updatedAt": "2020-12-07T03:12:56Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MjY3Mjgy",
          "commit": {
            "abbreviatedOid": "26efe08"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-10T14:45:27Z",
          "updatedAt": "2020-12-10T14:45:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 177,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzMzEzOTIy",
      "title": "Records with bogus epochs should be discarded, not generate alerts",
      "url": "https://github.com/tlswg/dtls13-spec/pull/177",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "consensus-needed"
      ],
      "body": "",
      "createdAt": "2020-12-07T01:24:36Z",
      "updatedAt": "2021-01-20T13:32:30Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "054b8d90ff53ac716999af5d1dac6db59391a338",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "unexpected_message",
      "headRefOid": "70b4f433f14aac1efb859922b1e20c7527fe7fa8",
      "closedAt": "2021-01-20T13:32:30Z",
      "mergedAt": "2021-01-20T13:32:30Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "1e292eebe44362a8bbd4078965f79383fefb71a9"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "What was the motivation for this change?",
          "createdAt": "2020-12-20T10:30:12Z",
          "updatedAt": "2020-12-20T10:30:12Z"
        },
        {
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> What was the motivation for this change?\r\n\r\nThe idea was to bring us in line with the normal handling for invalid records, which is to ignore them rather than send an alert and tear things down.  DTLS associations are supposed to be robust against injected packets.\r\n\r\nI suspect that there is also some remnant of the previous state of affairs when just incrementing the epoch was all that was needed to generate new keys, as opposed to requiring KeyUpdate+ACK, though that's not directly related to making this change.",
          "createdAt": "2020-12-20T23:20:24Z",
          "updatedAt": "2020-12-20T23:20:24Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MjgxMjQ4",
          "commit": {
            "abbreviatedOid": "f789129"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Flagging as consensus-needed.",
          "createdAt": "2020-12-10T14:58:26Z",
          "updatedAt": "2020-12-10T14:58:54Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nmessage. Implementations that receive a record with an epoch value\r\nfor which no corresponding cipher state can be determined SHOULD\r\nhandle it as a record which fails deprotection.\r\n```",
              "createdAt": "2020-12-10T14:58:26Z",
              "updatedAt": "2021-01-20T13:32:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 178,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzMzE1MTg3",
      "title": "Clarify when you can reset the timer",
      "url": "https://github.com/tlswg/dtls13-spec/pull/178",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This says to reset when you get a transmission without loss, but I actually think this is potentially too conservative and we should just reset on every \"first\" transmission.",
      "createdAt": "2020-12-07T01:29:28Z",
      "updatedAt": "2020-12-10T14:53:55Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "9e7e4b14bf9bd5efc1fcf3500deb8ce7d0605baa",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "what_allows_timer_reset",
      "headRefOid": "fc129e4c60dd3dcadf68e1a5af76d839b9bc7ceb",
      "closedAt": "2020-12-10T14:53:55Z",
      "mergedAt": "2020-12-10T14:53:55Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "66cd3cfa2ee4ab953dccf947df6fc31639c9c4d7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5Mjc2MjE2",
          "commit": {
            "abbreviatedOid": "fc129e4"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-10T14:53:51Z",
          "updatedAt": "2020-12-10T14:53:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 179,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzMzE2MTU2",
      "title": "Rcid excessive",
      "url": "https://github.com/tlswg/dtls13-spec/pull/179",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "consensus-needed"
      ],
      "body": "Fix a deadlock identified by @kaduk\"\r\n\r\nThis seems like it sets up a deadlock scenario.  Consider peers A and B;\r\nA sends RequestConnectionId with num_cids=200 and B considers this\r\nrequest excessive, so ACKs it but sends no NewConnectionId in response.\r\nA is prohibited from sending another RequestConnection Id to indicate\r\nthat it really needs new CIDs, since the requested 200 have not arrived\r\nyet; thus, B could end up not sending any NewConnectionIds even though A\r\nis essentially blocking on getting them.  Unless \"unfulfilled\" is\r\nsupposed to mean \"not ACKed\"?",
      "createdAt": "2020-12-07T01:33:48Z",
      "updatedAt": "2021-01-20T13:33:02Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "1e292eebe44362a8bbd4078965f79383fefb71a9",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "rcid_excessive",
      "headRefOid": "e0976c71b0a3e360bff9874a5c1c4c3469bdc7f0",
      "closedAt": "2021-01-20T13:33:02Z",
      "mergedAt": "2021-01-20T13:33:02Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "bd086bf4dd590cbb24f185975e4c20c648bab8f6"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson ",
          "createdAt": "2020-12-07T23:59:50Z",
          "updatedAt": "2020-12-07T23:59:50Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "Done.",
          "createdAt": "2021-01-05T03:23:17Z",
          "updatedAt": "2021-01-05T03:23:17Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjQxMDM3",
          "commit": {
            "abbreviatedOid": "d63a1c9"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-08T00:00:46Z",
          "updatedAt": "2020-12-08T00:00:46Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5Mjk5MzU1",
          "commit": {
            "abbreviatedOid": "d63a1c9"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This one requires consensus.",
          "createdAt": "2020-12-10T15:15:01Z",
          "updatedAt": "2020-12-10T15:15:01Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDA1MDUw",
          "commit": {
            "abbreviatedOid": "d63a1c9"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T10:33:10Z",
          "updatedAt": "2020-12-20T10:33:10Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nhandle requests, which it considers excessive, by responding with\r\n```",
              "createdAt": "2020-12-20T10:33:10Z",
              "updatedAt": "2021-01-20T13:32:57Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDA1MjMy",
          "commit": {
            "abbreviatedOid": "d63a1c9"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T10:35:35Z",
          "updatedAt": "2020-12-20T10:35:35Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Hmmm. This sounds like a fragile solution to me unless we introduce a new error here to give the peer some idea why the connection was closed.",
              "createdAt": "2020-12-20T10:35:35Z",
              "updatedAt": "2021-01-20T13:32:57Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NDU3NTAw",
          "commit": {
            "abbreviatedOid": "51ef0d3"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-21T15:22:19Z",
          "updatedAt": "2020-12-21T15:22:19Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Well, we could add a new alert: \"excessive_rcid_requests\"",
              "createdAt": "2020-12-21T15:22:19Z",
              "updatedAt": "2021-01-20T13:32:57Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzI2MzYw",
          "commit": {
            "abbreviatedOid": "51ef0d3"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-28T22:49:49Z",
          "updatedAt": "2020-12-28T22:49:49Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "@chris-wood WDYT?",
              "createdAt": "2020-12-28T22:49:49Z",
              "updatedAt": "2021-01-20T13:32:57Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzA3OTQ2",
          "commit": {
            "abbreviatedOid": "51ef0d3"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-04T20:06:08Z",
          "updatedAt": "2021-01-04T20:06:08Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Alerts are cheap, so I'd be fine with that.",
              "createdAt": "2021-01-04T20:06:08Z",
              "updatedAt": "2021-01-20T13:32:57Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzA4MDc5",
          "commit": {
            "abbreviatedOid": "51ef0d3"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-04T20:06:21Z",
          "updatedAt": "2021-01-04T20:06:22Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "@ekr can you update this PR with a new dedicated alert?",
              "createdAt": "2021-01-04T20:06:21Z",
              "updatedAt": "2021-01-20T13:32:57Z"
            }
          ]
        }
      ]
    },
    {
      "number": 180,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzNzA2OTA1",
      "title": "Alerts are unreliable",
      "url": "https://github.com/tlswg/dtls13-spec/pull/180",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "consensus-needed"
      ],
      "body": "",
      "createdAt": "2020-12-07T14:15:53Z",
      "updatedAt": "2021-01-20T13:33:23Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "9e7e4b14bf9bd5efc1fcf3500deb8ce7d0605baa",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "unreliable_alert",
      "headRefOid": "7c8996dac00fe50396e303d29b13aa420d03ea90",
      "closedAt": "2021-01-20T13:33:23Z",
      "mergedAt": "2021-01-20T13:33:22Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "fffb27da326643f6d586c5cc9b018d685d2956a5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjM5NDAx",
          "commit": {
            "abbreviatedOid": "7c8996d"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-07T23:56:59Z",
          "updatedAt": "2020-12-07T23:56:59Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5Mjc3MzA2",
          "commit": {
            "abbreviatedOid": "7c8996d"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This one needs consensus, but should certainly be non-controversial.",
          "createdAt": "2020-12-10T14:54:50Z",
          "updatedAt": "2020-12-10T14:54:50Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDA1Mzk3",
          "commit": {
            "abbreviatedOid": "7c8996d"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T10:37:40Z",
          "updatedAt": "2020-12-20T10:37:40Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I am OK repeating text but I wonder whether the first part of this section doesn't already indicate that alerts are not reliably transmitted. \r\n\r\nI guess implementers had problems with this aspect and hence we are adding the text. Correct?",
              "createdAt": "2020-12-20T10:37:40Z",
              "updatedAt": "2020-12-20T10:37:40Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NDU0MTMz",
          "commit": {
            "abbreviatedOid": "7c8996d"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-21T15:18:03Z",
          "updatedAt": "2020-12-21T15:18:03Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Or at least there was confusion",
              "createdAt": "2020-12-21T15:18:03Z",
              "updatedAt": "2020-12-21T15:18:03Z"
            }
          ]
        }
      ]
    },
    {
      "number": 181,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzNzA5MjIz",
      "title": "Some textual clarifications around when ACKs are sent",
      "url": "https://github.com/tlswg/dtls13-spec/pull/181",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-07T14:19:20Z",
      "updatedAt": "2020-12-10T15:02:05Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "9e7e4b14bf9bd5efc1fcf3500deb8ce7d0605baa",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "ack_clarifications",
      "headRefOid": "de3fa618759f4e7d91215e4cc001eea45d9ccc88",
      "closedAt": "2020-12-10T15:02:05Z",
      "mergedAt": "2020-12-10T15:02:05Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "1e5f59c63e1a4de7838126ddab0c91467bd21885"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjQxOTgx",
          "commit": {
            "abbreviatedOid": "de3fa61"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-08T00:03:00Z",
          "updatedAt": "2020-12-08T00:03:00Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5Mjg1MDY4",
          "commit": {
            "abbreviatedOid": "de3fa61"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-10T15:01:54Z",
          "updatedAt": "2020-12-10T15:01:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 182,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzNzEwOTQz",
      "title": "Not totally indefinitely",
      "url": "https://github.com/tlswg/dtls13-spec/pull/182",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-07T14:21:58Z",
      "updatedAt": "2020-12-10T15:02:56Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "14e2e4b51dc6e3cc25ddbd7a946f8f0cf3834538",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "transmission_cap",
      "headRefOid": "c14412f471f6be331ada5fca540bb1e4eb856845",
      "closedAt": "2020-12-10T15:02:56Z",
      "mergedAt": "2020-12-10T15:02:56Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "c64ca685c8333dc2538edf935621db6d10b59343"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjQ4MjU5",
          "commit": {
            "abbreviatedOid": "c14412f"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-08T00:18:42Z",
          "updatedAt": "2020-12-08T00:18:42Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5Mjg2MDc3",
          "commit": {
            "abbreviatedOid": "c14412f"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-10T15:02:51Z",
          "updatedAt": "2020-12-10T15:02:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 183,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzNzIyNTMw",
      "title": "Remove stale text about out-of-epoch records",
      "url": "https://github.com/tlswg/dtls13-spec/pull/183",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-07T14:39:51Z",
      "updatedAt": "2020-12-10T15:17:13Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "14e2e4b51dc6e3cc25ddbd7a946f8f0cf3834538",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "out_of_epoch",
      "headRefOid": "14a4ac2b31cd5cae3b7fac18fbb3bde83fe460b7",
      "closedAt": "2020-12-10T15:17:12Z",
      "mergedAt": "2020-12-10T15:17:12Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "4544a7efad6a4628d937aaa40272044ce1e38d20"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjQ4MTgy",
          "commit": {
            "abbreviatedOid": "14a4ac2"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-08T00:18:31Z",
          "updatedAt": "2020-12-08T00:18:31Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzAxNjY4",
          "commit": {
            "abbreviatedOid": "14a4ac2"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-10T15:17:08Z",
          "updatedAt": "2020-12-10T15:17:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 184,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzNzI4NzYy",
      "title": "Some proposed editorial improvements from Ben Kaduk",
      "url": "https://github.com/tlswg/dtls13-spec/pull/184",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "landing-ready"
      ],
      "body": "",
      "createdAt": "2020-12-07T14:48:52Z",
      "updatedAt": "2021-01-04T19:51:46Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "777644fe92b67f39eb89a94c86c1ac25a021f15b",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "kaduk_editorial",
      "headRefOid": "0fcc0d5d482adb6ba3a0685eb3975beded3dbee4",
      "closedAt": "2021-01-04T19:51:46Z",
      "mergedAt": "2021-01-04T19:51:46Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "98744c3309271f6a6fcd155c7e65dde06978e0ce"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "I am fine with the editorial improvements provided by Ben. Thanks, Ben!",
          "createdAt": "2020-12-20T10:41:28Z",
          "updatedAt": "2020-12-20T10:41:28Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjQ4Nzgz",
          "commit": {
            "abbreviatedOid": "48d0d47"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-08T00:19:57Z",
          "updatedAt": "2020-12-08T00:19:57Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzAzMzIy",
          "commit": {
            "abbreviatedOid": "48d0d47"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-10T15:18:40Z",
          "updatedAt": "2020-12-10T15:19:32Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Unrelated, but I think this matches \"multiple\" better.\r\n\r\n```suggestion\r\ninteraction across paths, which adds further privacy concerns. In order\r\n```",
              "createdAt": "2020-12-10T15:18:40Z",
              "updatedAt": "2021-01-04T19:51:28Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\npaths from such a host, an adversary can correlate the communication\r\n```",
              "createdAt": "2020-12-10T15:18:50Z",
              "updatedAt": "2021-01-04T19:51:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDA1NDg0",
          "commit": {
            "abbreviatedOid": "012ab0f"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T10:39:01Z",
          "updatedAt": "2020-12-20T10:39:02Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nin multi-homed scenarios. When only a single CID is in use on multiple\r\n```",
              "createdAt": "2020-12-20T10:39:01Z",
              "updatedAt": "2021-01-04T19:51:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDA1NTQ4",
          "commit": {
            "abbreviatedOid": "012ab0f"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T10:39:59Z",
          "updatedAt": "2020-12-20T10:39:59Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nabsence of sequence number encryption. Switching CIDs based on certain\r\n```",
              "createdAt": "2020-12-20T10:39:59Z",
              "updatedAt": "2021-01-04T19:51:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDA1NjIw",
          "commit": {
            "abbreviatedOid": "012ab0f"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T10:40:57Z",
          "updatedAt": "2020-12-20T10:40:58Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nnot.  Unlike the sequence number, the epoch is not encrypted because it acts as a key identifier, which\r\n```",
              "createdAt": "2020-12-20T10:40:57Z",
              "updatedAt": "2021-01-04T19:51:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjk4NzA0",
          "commit": {
            "abbreviatedOid": "0fcc0d5"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-04T19:51:38Z",
          "updatedAt": "2021-01-04T19:51:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 185,
      "id": "MDExOlB1bGxSZXF1ZXN0NTMzNzQyODg3",
      "title": "Rationale for spare CIDs",
      "url": "https://github.com/tlswg/dtls13-spec/pull/185",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "consensus-needed"
      ],
      "body": "",
      "createdAt": "2020-12-07T15:09:10Z",
      "updatedAt": "2021-01-20T13:33:42Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "98744c3309271f6a6fcd155c7e65dde06978e0ce",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "why_spare_cids",
      "headRefOid": "25d5de2f1f5d833f9688a314e92e0188a0d44b93",
      "closedAt": "2021-01-20T13:33:42Z",
      "mergedAt": "2021-01-20T13:33:42Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9055f2f4dad401d7d03c22c6cf291026c7346c4c"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "The proposed text sounds reasonable to me. ",
          "createdAt": "2020-12-20T10:43:46Z",
          "updatedAt": "2020-12-20T10:43:46Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjQ4ODY4",
          "commit": {
            "abbreviatedOid": "c57bd30"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-08T00:20:09Z",
          "updatedAt": "2020-12-08T00:20:09Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MjkxNDg5",
          "commit": {
            "abbreviatedOid": "c57bd30"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2020-12-10T15:07:45Z",
          "updatedAt": "2020-12-10T15:07:48Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "This confuses me. Presumably this is trying to say, \"implementations should use a new CID for new paths, and should also request new CIDs if they anticipate path changes,\" or something. \r\n\r\n```suggestion\r\ngeneral, implementations SHOULD use a new CID whenever sending on a new path,\r\nand SHOULD request new CIDs for this purpose if path changes are anticipated.\r\n```",
              "createdAt": "2020-12-10T15:07:45Z",
              "updatedAt": "2021-01-04T19:52:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwODc3NTc5",
          "commit": {
            "abbreviatedOid": "f50d303"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-13T02:10:12Z",
          "updatedAt": "2020-12-13T02:10:35Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nIf the client and server have negotiated use of the \"connection_id\" extension,\r\n```",
              "createdAt": "2020-12-13T02:10:13Z",
              "updatedAt": "2021-01-04T19:52:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDA1Nzc0",
          "commit": {
            "abbreviatedOid": "f50d303"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T10:43:08Z",
          "updatedAt": "2020-12-20T10:43:09Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nIf the client and server have negotiated the use of CIDs with the \"connection_id\" extension,\r\n```",
              "createdAt": "2020-12-20T10:43:09Z",
              "updatedAt": "2021-01-04T19:52:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjk5Mzc2",
          "commit": {
            "abbreviatedOid": "77e9b90"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-04T19:52:38Z",
          "updatedAt": "2021-01-04T19:52:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 188,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzMTIyMjY3",
      "title": "Updated examples in Section 5.6",
      "url": "https://github.com/tlswg/dtls13-spec/pull/188",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-20T19:43:49Z",
      "updatedAt": "2020-12-29T19:30:34Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "02a790789f5bd2610a080a4fbfd2b36428e6d697",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-24",
      "headRefOid": "6f149d8894015140aab73d9390061bac6e7aefc3",
      "closedAt": "2020-12-28T22:32:09Z",
      "mergedAt": "2020-12-28T22:32:09Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "391b64da43e40b267b40b2902d2a20781efbb8ac"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@kaduk I merged this. Any chance you want to send a PR or do you want me to?",
          "createdAt": "2020-12-29T04:48:21Z",
          "updatedAt": "2020-12-29T04:48:21Z"
        },
        {
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> @kaduk I merged this. Any chance you want to send a PR or do you want me to?\r\n\r\nI'm not in a great spot to make a PR at the moment; please go ahead.",
          "createdAt": "2020-12-29T06:06:38Z",
          "updatedAt": "2020-12-29T06:06:38Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I just fixed this in the main branch.",
          "createdAt": "2020-12-29T19:30:34Z",
          "updatedAt": "2020-12-29T19:30:34Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4ODk1Mjk0",
          "commit": {
            "abbreviatedOid": "6f149d8"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "@kaduk is this what you had in mind.",
          "createdAt": "2020-12-26T23:11:11Z",
          "updatedAt": "2020-12-26T23:11:47Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "I tend to think we should not think of an ACK as part of a flight. It's kind of outside this model.",
              "createdAt": "2020-12-26T23:11:11Z",
              "updatedAt": "2020-12-26T23:11:47Z"
            },
            {
              "originalPosition": 18,
              "body": "I don't quite see what the Note column is doing.",
              "createdAt": "2020-12-26T23:11:38Z",
              "updatedAt": "2020-12-26T23:11:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzcyNjE0",
          "commit": {
            "abbreviatedOid": "6f149d8"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Thanks, this addresses the issues I had raised for this section.\r\n(It's perhaps a little janky to have just a box with \"Flight\" for each one, but I don't have any better ideas, so we should probably roll with it!)",
          "createdAt": "2020-12-29T04:17:18Z",
          "updatedAt": "2020-12-29T04:22:44Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "(A client will send ACK in response to post-handshake messages, just not during the initial handshake.  I think this is okay as the table contents, but maybe we should ensure that the prose is clear this is just for the initial handshake.)  Though, given ekr's comment below, perhaps it's going away anyway and becomes irrelevant.",
              "createdAt": "2020-12-29T04:17:18Z",
              "updatedAt": "2020-12-29T04:22:45Z"
            },
            {
              "originalPosition": 188,
              "body": "Do we also want to mention KeyUpdate/NewConnectionID/RequestConnectionID here?  It seems overkill to have a separate figure showing the message and ACK for each of them...",
              "createdAt": "2020-12-29T04:20:25Z",
              "updatedAt": "2020-12-29T04:22:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5Mzc2NjAy",
          "commit": {
            "abbreviatedOid": "6f149d8"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-29T04:47:49Z",
          "updatedAt": "2020-12-29T04:47:49Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I actually left ACK in because it was more confusing not to.",
              "createdAt": "2020-12-29T04:47:49Z",
              "updatedAt": "2020-12-29T04:47:49Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5Mzc2NjI3",
          "commit": {
            "abbreviatedOid": "6f149d8"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-29T04:47:59Z",
          "updatedAt": "2020-12-29T04:47:59Z",
          "comments": [
            {
              "originalPosition": 188,
              "body": "Yeah, I guess that would work.",
              "createdAt": "2020-12-29T04:47:59Z",
              "updatedAt": "2020-12-29T04:47:59Z"
            }
          ]
        }
      ]
    },
    {
      "number": 190,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzNDU2MDE2",
      "title": "Updated example in Section 6",
      "url": "https://github.com/tlswg/dtls13-spec/pull/190",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Based on review from Ben:\r\n\r\n    Section 6\r\n\r\n    Figure 11 seems to show that the initial ServerHello has message_seq=1,\r\n    but \u00a75.2 says that \"[t]he first message each side transmits in each\r\n    association always has message_seq = 0\". Which one is it? (A change\r\n    here would affect all the server's messages except the final ACK.)",
      "createdAt": "2020-12-21T12:31:39Z",
      "updatedAt": "2020-12-26T14:10:30Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "02a790789f5bd2610a080a4fbfd2b36428e6d697",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-25",
      "headRefOid": "2466d6351f67e830a63b1c6ce1f4911590e799ce",
      "closedAt": "2020-12-26T14:10:30Z",
      "mergedAt": "2020-12-26T14:10:30Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "4555660291b90dba51c5ce6e7a50e7e1b35ad1a6"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 191,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzNTA3NTU1",
      "title": "Update to Figure 12",
      "url": "https://github.com/tlswg/dtls13-spec/pull/191",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Ben wrote:\r\n\r\n    The use of the ACK for the second case is mandatory for the proper\r\n    functioning of the protocol. For instance, the ACK message sent by\r\n    the client in Figure 12, acknowledges receipt and processing of\r\n    record 2 (containing the NewSessionTicket message) and if it is not\r\n\r\n    The records in Figure 12 are not labeled (anymore?).",
      "createdAt": "2020-12-21T14:12:48Z",
      "updatedAt": "2020-12-26T14:13:15Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "02a790789f5bd2610a080a4fbfd2b36428e6d697",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-26",
      "headRefOid": "a90adc1ccb436998b9dbc9d524ed59c920f35dd1",
      "closedAt": "2020-12-26T14:13:15Z",
      "mergedAt": "2020-12-26T14:13:15Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "4229648a1b93e5783f3844453d888dbdf7a21b86"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 192,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjI0NjMy",
      "title": "Key Update Example",
      "url": "https://github.com/tlswg/dtls13-spec/pull/192",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Trying to address https://github.com/tlswg/dtls13-spec/issues/176",
      "createdAt": "2020-12-22T16:19:26Z",
      "updatedAt": "2020-12-26T21:26:13Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "02a790789f5bd2610a080a4fbfd2b36428e6d697",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-27",
      "headRefOid": "f538e0d967f966c7944af8c780172969c0402c37",
      "closedAt": "2020-12-26T21:26:13Z",
      "mergedAt": "2020-12-26T21:26:13Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "bf1a6d49698780cf6567b9b401725f04d58b551e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 193,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ2MjY4ODA1",
      "title": "Add warning about certificates and congestion. Fixes #174",
      "url": "https://github.com/tlswg/dtls13-spec/pull/193",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "review-needed"
      ],
      "body": "@chris-wood @hannestschofenig ",
      "createdAt": "2020-12-28T23:25:27Z",
      "updatedAt": "2021-01-04T19:53:50Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "8784a1218186ca0c8cdf185d836b58f0ea1ada71",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "issue174_certificates_congestion",
      "headRefOid": "5e022b238a4559db600b15d57dd7e0f9869d04bc",
      "closedAt": "2021-01-04T19:53:49Z",
      "mergedAt": "2021-01-04T19:53:49Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "3ccdbbe15c9215d9f66698e9552f896d7dae46bc"
      },
      "comments": [
        {
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "body": "(Probably want to fix the typo for \"Fixes\" in the PR title, but the content looks good to me)",
          "createdAt": "2020-12-30T00:42:32Z",
          "updatedAt": "2020-12-30T00:42:32Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzAwMDY1",
          "commit": {
            "abbreviatedOid": "5e022b2"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-04T19:53:42Z",
          "updatedAt": "2021-01-04T19:53:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 194,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ2MjcyOTc1",
      "title": "Forbid going from an empty CID to a non-empty CID",
      "url": "https://github.com/tlswg/dtls13-spec/pull/194",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "consensus-needed"
      ],
      "body": "Closes #186.",
      "createdAt": "2020-12-28T23:47:38Z",
      "updatedAt": "2021-01-20T13:35:11Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "9055f2f4dad401d7d03c22c6cf291026c7346c4c",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "issue186_cannot_go_from_no_cid_to_cid",
      "headRefOid": "40762244e65ff73bb3882551c3586c85764e89be",
      "closedAt": "2021-01-20T13:35:11Z",
      "mergedAt": "2021-01-20T13:35:11Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f02e74cbb6aaae21c7c13aed25536bb64f217b66"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzY4ODc5",
          "commit": {
            "abbreviatedOid": "c9566e4"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-29T03:47:52Z",
          "updatedAt": "2020-12-29T03:51:16Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nImplementations which either did not negotiate the \"connection_id\" extension\r\n```",
              "createdAt": "2020-12-29T03:47:52Z",
              "updatedAt": "2021-01-20T13:35:06Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzAwMzU3",
          "commit": {
            "abbreviatedOid": "e3106b1"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-04T19:54:07Z",
          "updatedAt": "2021-01-04T19:54:08Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nin a NewConnectionId message.\r\n```",
              "createdAt": "2021-01-04T19:54:07Z",
              "updatedAt": "2021-01-20T13:35:06Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzAxMDEw",
          "commit": {
            "abbreviatedOid": "a6747d0"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-04T19:55:05Z",
          "updatedAt": "2021-01-04T19:55:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 195,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ2MjczNTc3",
      "title": "Clarify mixing sequence and length settings on the same connection",
      "url": "https://github.com/tlswg/dtls13-spec/pull/195",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "consensus-needed"
      ],
      "body": "Closes #162.",
      "createdAt": "2020-12-28T23:51:27Z",
      "updatedAt": "2021-01-20T13:35:43Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "8784a1218186ca0c8cdf185d836b58f0ea1ada71",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "issue182_change_length_and_sequence",
      "headRefOid": "ab024d18552d678a474d595cf65741b6c1fb2a0c",
      "closedAt": "2021-01-20T13:35:43Z",
      "mergedAt": "2021-01-20T13:35:42Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "10d9a2201d827495bf53c59b5388e868b1bceaac"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzY4Njc0",
          "commit": {
            "abbreviatedOid": "ab024d1"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Chairs, please opine on whether this should get confirmed on the list.",
          "createdAt": "2020-12-29T03:46:08Z",
          "updatedAt": "2020-12-29T03:47:21Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "(I has assumed that \"omitting the length only works for the last record in a datagram\" implies that you can have a record with length and a record without length in the same datagram, and thus on the same connection, but don't mind saying it explicitly.)",
              "createdAt": "2020-12-29T03:46:08Z",
              "updatedAt": "2020-12-29T03:47:21Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzAxNTYy",
          "commit": {
            "abbreviatedOid": "ab024d1"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-04T19:55:57Z",
          "updatedAt": "2021-01-04T19:55:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 196,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ2Mjc4MjEx",
      "title": "Use DTLS style version values, even for DTLS 1.3",
      "url": "https://github.com/tlswg/dtls13-spec/pull/196",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "consensus-needed"
      ],
      "body": "Closes #170.",
      "createdAt": "2020-12-29T00:19:35Z",
      "updatedAt": "2021-01-20T13:36:01Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "8784a1218186ca0c8cdf185d836b58f0ea1ada71",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "issue170_version_fields",
      "headRefOid": "16ee5a262e1f9eb37e607748d5850ad671091ea4",
      "closedAt": "2021-01-20T13:36:01Z",
      "mergedAt": "2021-01-20T13:36:01Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "79c957dc073ee7f93dffaa32662b62cec0b5bb16"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@kaduk @davidben ",
          "createdAt": "2020-12-29T00:19:47Z",
          "updatedAt": "2020-12-29T00:19:47Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NzU5NDI2",
          "commit": {
            "abbreviatedOid": "16ee5a2"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This works for me, thanks.",
          "createdAt": "2020-12-30T02:12:21Z",
          "updatedAt": "2020-12-30T02:12:21Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzAyNjU3",
          "commit": {
            "abbreviatedOid": "16ee5a2"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-04T19:57:40Z",
          "updatedAt": "2021-01-04T19:57:40Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxOTQ2OTkw",
          "commit": {
            "abbreviatedOid": "16ee5a2"
          },
          "author": "davidben",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-05T16:38:15Z",
          "updatedAt": "2021-01-05T16:38:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 197,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ2MjgwMjQ3",
      "title": "Describe how to distinguish DTLS 1.2 and DTLS 1.3 connections. Fixes \u2026",
      "url": "https://github.com/tlswg/dtls13-spec/pull/197",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "review-needed"
      ],
      "body": "\u2026#159",
      "createdAt": "2020-12-29T00:31:34Z",
      "updatedAt": "2021-01-04T19:40:22Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "38041752a701d7214ac730b9729e9d190b110ef8",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "issue159_demux",
      "headRefOid": "a91b8fa257f7995a3e326f08559ff03fa8e29b76",
      "closedAt": "2021-01-04T19:40:22Z",
      "mergedAt": "2021-01-04T19:40:22Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "777644fe92b67f39eb89a94c86c1ac25a021f15b"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't.\n\nOn Mon, Dec 28, 2020 at 10:09 PM kaduk <notifications@github.com> wrote:\n\n> *@kaduk* approved this pull request.\n>\n> This WFM\n> ------------------------------\n>\n> In draft-ietf-tls-dtls13.md\n> <https://github.com/tlswg/dtls13-spec/pull/197#discussion_r549580317>:\n>\n> > @@ -367,7 +367,11 @@ The DTLSCiphertext header is tightly bit-packed, as shown below:\n>  Fixed Bits:\n>  : The three high bits of the first byte of the DTLSCiphertext header are set to\n>    001. This ensures that the value will fit within the DTLS region when\n> -  multiplexing is performed as described in {{?RFC7983}}.\n> +  multiplexing is performed as described in {{?RFC7983}}. It also ensures\n> +  that it is possible to distinguish encrypted DTLS 1.3 records from\n> +  encrypted DTLS 1.2 records when they are carried on the same host/port quartet;\n>\n> (Do we care about \"host/port quartet\" vs. \"5-tuple\"? I don't think I do...)\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tlswg/dtls13-spec/pull/197#pullrequestreview-559389477>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAIPLIOTRB23GNRCSCU6EJDSXFXA3ANCNFSM4VMT66PA>\n> .\n>\n",
          "createdAt": "2020-12-29T13:57:56Z",
          "updatedAt": "2020-12-29T13:57:56Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5Mzg5NDc3",
          "commit": {
            "abbreviatedOid": "d5cf887"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This WFM",
          "createdAt": "2020-12-29T06:08:36Z",
          "updatedAt": "2020-12-29T06:09:05Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "(Do we care about \"host/port quartet\" vs. \"5-tuple\"?  I don't think I do...)",
              "createdAt": "2020-12-29T06:08:36Z",
              "updatedAt": "2021-01-04T19:40:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjkwODcw",
          "commit": {
            "abbreviatedOid": "d5cf887"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-04T19:40:01Z",
          "updatedAt": "2021-01-04T19:40:10Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n  multiplexing is performed as described in {{?RFC7983}}. It also ensures\r\n  that distinguishing encrypted DTLS 1.3 records from encrypted DTLS 1.2 \r\n  records is possible when they are carried on the same host/port quartet;\r\n```",
              "createdAt": "2021-01-04T19:40:01Z",
              "updatedAt": "2021-01-04T19:40:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 198,
      "id": "MDExOlB1bGxSZXF1ZXN0NTUwNDgxMjcw",
      "title": "Added text about the DTLS 1.2 and DTLS 1.3 CID mechanism",
      "url": "https://github.com/tlswg/dtls13-spec/pull/198",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-01-06T14:59:22Z",
      "updatedAt": "2021-01-20T13:41:01Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "3ccdbbe15c9215d9f66698e9552f896d7dae46bc",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-28",
      "headRefOid": "d19cc739d71d52bfd49cfa7e4540b55a8c065e62",
      "closedAt": "2021-01-20T13:41:01Z",
      "mergedAt": "2021-01-20T13:41:01Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "140e752f674cd82fc0a03915a949c179a26f1ac6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyNzc3OTA5",
          "commit": {
            "abbreviatedOid": "dd0bc28"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T15:02:16Z",
          "updatedAt": "2021-01-06T15:02:16Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nHowever, the way the CID is included in the record header differs between the two versions.\r\n```\r\n\r\nRecord protection is different anyway.",
              "createdAt": "2021-01-06T15:02:16Z",
              "updatedAt": "2021-01-20T13:36:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyMjI4NDQ2",
          "commit": {
            "abbreviatedOid": "d19cc73"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2021-01-20T13:40:55Z",
          "updatedAt": "2021-01-20T13:40:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 199,
      "id": "MDExOlB1bGxSZXF1ZXN0NTUwNDk3Nzgy",
      "title": "Editorial Changes in Section 3",
      "url": "https://github.com/tlswg/dtls13-spec/pull/199",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-01-06T15:26:50Z",
      "updatedAt": "2021-01-20T13:46:57Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "3ccdbbe15c9215d9f66698e9552f896d7dae46bc",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-29",
      "headRefOid": "626a801832296f4536a8dc885f84b159313c7e25",
      "closedAt": "2021-01-20T13:46:57Z",
      "mergedAt": "2021-01-20T13:46:57Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "5c2cbb2b33375b10940370da9cbeb33c07a4a970"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTYxNzAw",
          "commit": {
            "abbreviatedOid": "674f591"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-06T18:55:04Z",
          "updatedAt": "2021-01-06T18:55:04Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyMjI5MjYx",
          "commit": {
            "abbreviatedOid": "674f591"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM with these changes.",
          "createdAt": "2021-01-20T13:41:51Z",
          "updatedAt": "2021-01-20T13:42:42Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\n   datagram.  DTLS adds fields to handshake messages to support fragmentation\r\n```\r\nEasier to stick with this to avoid people thinking about history",
              "createdAt": "2021-01-20T13:41:51Z",
              "updatedAt": "2021-01-20T13:46:42Z"
            },
            {
              "originalPosition": 28,
              "body": "```suggestion\r\n   effecting denial of service attacks against nonparticipants.  DTLS adds a\r\n   return-routability check and DTLS 1.3 uses the TLS 1.3 HelloRetryRequest message \r\n```",
              "createdAt": "2021-01-20T13:42:06Z",
              "updatedAt": "2021-01-20T13:46:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyMjMzMjYx",
          "commit": {
            "abbreviatedOid": "674f591"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-20T13:46:22Z",
          "updatedAt": "2021-01-20T13:46:22Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n   The DTLS handshake includes message sequence numbers to enable\r\n```",
              "createdAt": "2021-01-20T13:46:22Z",
              "updatedAt": "2021-01-20T13:46:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyMjMzNjUx",
          "commit": {
            "abbreviatedOid": "20e7a5b"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-20T13:46:48Z",
          "updatedAt": "2021-01-20T13:46:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 200,
      "id": "MDExOlB1bGxSZXF1ZXN0NTUwNTY3NzAx",
      "title": "Graphical description of the demultiplexing process",
      "url": "https://github.com/tlswg/dtls13-spec/pull/200",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-01-06T17:23:54Z",
      "updatedAt": "2021-01-20T13:40:20Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "3ccdbbe15c9215d9f66698e9552f896d7dae46bc",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-30",
      "headRefOid": "c710376a2c8548daf50a3c1d69f607c21e33ceec",
      "closedAt": "2021-01-20T13:40:20Z",
      "mergedAt": "2021-01-20T13:40:20Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "5aef1ae97929ef60cda9b821a5dcac6fa8abd42d"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "I have re-drawn the figure to take Ekr's comments into account. I hope the new figure is better.",
          "createdAt": "2021-01-06T19:46:34Z",
          "updatedAt": "2021-01-06T19:46:34Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM",
          "createdAt": "2021-01-06T20:44:35Z",
          "updatedAt": "2021-01-06T20:44:35Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTQwNjkw",
          "commit": {
            "abbreviatedOid": "158bbab"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T18:23:31Z",
          "updatedAt": "2021-01-06T18:26:34Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "```suggestion\r\n             |   OCT == 25   -+--> DTLSCipherText with CID (DTLS 1.2)\r\n```",
              "createdAt": "2021-01-06T18:23:31Z",
              "updatedAt": "2021-01-07T14:34:45Z"
            },
            {
              "originalPosition": 55,
              "body": "1. I would put this so it reads top to bottom\r\n2. I would put the parentheticals after, as in \"Alert (Plaintext)\"\r\n",
              "createdAt": "2021-01-06T18:23:34Z",
              "updatedAt": "2021-01-07T14:34:45Z"
            },
            {
              "originalPosition": 44,
              "body": "The text above says you check this last, after the other types.",
              "createdAt": "2021-01-06T18:24:16Z",
              "updatedAt": "2021-01-07T14:34:45Z"
            },
            {
              "originalPosition": 55,
              "body": "Where does this show reject?",
              "createdAt": "2021-01-06T18:26:23Z",
              "updatedAt": "2021-01-07T14:34:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTY2OTMw",
          "commit": {
            "abbreviatedOid": "16391d8"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T19:02:44Z",
          "updatedAt": "2021-01-06T19:02:45Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "I will re-order it. ",
              "createdAt": "2021-01-06T19:02:45Z",
              "updatedAt": "2021-01-07T14:34:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTY3MTU1",
          "commit": {
            "abbreviatedOid": "16391d8"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T19:03:04Z",
          "updatedAt": "2021-01-06T19:03:05Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Will add a reject \"branch\"\r\n",
              "createdAt": "2021-01-06T19:03:04Z",
              "updatedAt": "2021-01-07T14:34:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTY3NDY4",
          "commit": {
            "abbreviatedOid": "16391d8"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T19:03:31Z",
          "updatedAt": "2021-01-06T19:03:32Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Ack",
              "createdAt": "2021-01-06T19:03:31Z",
              "updatedAt": "2021-01-07T14:34:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyMjI3ODM2",
          "commit": {
            "abbreviatedOid": "c710376"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-20T13:40:15Z",
          "updatedAt": "2021-01-20T13:40:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 201,
      "id": "MDExOlB1bGxSZXF1ZXN0NTUxMDk4MDI2",
      "title": "Removed redundant statement",
      "url": "https://github.com/tlswg/dtls13-spec/pull/201",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Removed \"Records MUST NOT span datagrams.\" because, in my opinion, the following sentence \"Each DTLS record MUST fit within a single datagram. \" in the paragraph before makes the same statement.",
      "createdAt": "2021-01-07T14:39:19Z",
      "updatedAt": "2021-01-20T13:40:38Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "hannestschofenig-patch-30",
      "baseRefOid": "c710376a2c8548daf50a3c1d69f607c21e33ceec",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-31",
      "headRefOid": "570cf91e7facf6cedf230d36ab3ab980c23ddb4a",
      "closedAt": "2021-01-20T13:40:38Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think these are entirely redundant: you could make a record that fit and then split it anyway. I suggest we leave it.",
          "createdAt": "2021-01-07T14:51:50Z",
          "updatedAt": "2021-01-07T14:51:50Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed. @hannestschofenig, I think we should close this.",
          "createdAt": "2021-01-07T21:30:18Z",
          "updatedAt": "2021-01-07T21:30:18Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing based on the above. @hannestschofenig, please re-open if you disagree!",
          "createdAt": "2021-01-20T13:40:38Z",
          "updatedAt": "2021-01-20T13:40:38Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyMjI2OTI5",
          "commit": {
            "abbreviatedOid": "570cf91"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-20T13:39:12Z",
          "updatedAt": "2021-01-20T13:39:12Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyMjI3Mjc0",
          "commit": {
            "abbreviatedOid": "570cf91"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "(Wrong button!)",
          "createdAt": "2021-01-20T13:39:36Z",
          "updatedAt": "2021-01-20T13:39:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 202,
      "id": "MDExOlB1bGxSZXF1ZXN0NTUxMTE2MjM4",
      "title": "Added text regarding the legacy_session_id field",
      "url": "https://github.com/tlswg/dtls13-spec/pull/202",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It is not the same as TLS 1.3, as previously stated, because DTLS 1.3 does not support the compatibility mode.",
      "createdAt": "2021-01-07T15:10:08Z",
      "updatedAt": "2021-01-20T13:38:39Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "3ccdbbe15c9215d9f66698e9552f896d7dae46bc",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-32",
      "headRefOid": "d404dbef72c4c850e5e8ac29f338a75a1c4db64e",
      "closedAt": "2021-01-20T13:38:39Z",
      "mergedAt": "2021-01-20T13:38:39Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "1c4af977e1f3fa9f45052e47eb69c4505e514c93"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzNTg1ODM1",
          "commit": {
            "abbreviatedOid": "d404dbe"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-07T15:35:11Z",
          "updatedAt": "2021-01-07T15:35:12Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "This is a good change but probably needs consensus. @chris-wood: ^^?",
              "createdAt": "2021-01-07T15:35:11Z",
              "updatedAt": "2021-01-07T15:35:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzODQxMjgw",
          "commit": {
            "abbreviatedOid": "d404dbe"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-07T21:31:18Z",
          "updatedAt": "2021-01-07T21:31:18Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3NTQ4Mzc5",
          "commit": {
            "abbreviatedOid": "d404dbe"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "It seems a natural consequence of not having compatibility mode, but is probably worth running by the list just to cover all bases.",
          "createdAt": "2021-01-13T19:25:48Z",
          "updatedAt": "2021-01-13T19:25:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 203,
      "id": "MDExOlB1bGxSZXF1ZXN0NTUxMTQ5Mjg5",
      "title": "Editorial changes to Sec. \"Handshake Message Fragmentation and Reassembly\"",
      "url": "https://github.com/tlswg/dtls13-spec/pull/203",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-01-07T16:05:15Z",
      "updatedAt": "2021-01-20T13:52:39Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "3ccdbbe15c9215d9f66698e9552f896d7dae46bc",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-33",
      "headRefOid": "eeb4431eb6a8c1fef91fbc7dbd72a35f5d733eff",
      "closedAt": "2021-01-20T13:52:39Z",
      "mergedAt": "2021-01-20T13:52:39Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "c06ca9b497f0a9a53207f14ca01498e4a01c6572"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyMjI2OTAw",
          "commit": {
            "abbreviatedOid": "449f961"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2021-01-20T13:39:09Z",
          "updatedAt": "2021-01-20T13:40:15Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nAs described in {{transport-layer-mapping}} one or more handshake\r\n```",
              "createdAt": "2021-01-20T13:39:10Z",
              "updatedAt": "2021-01-20T13:51:52Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nDTLS provides a mechanism for fragmenting a handshake message over a\r\n```",
              "createdAt": "2021-01-20T13:39:29Z",
              "updatedAt": "2021-01-20T13:51:52Z"
            },
            {
              "originalPosition": 27,
              "body": "I don't think we should change this. One range is a series so it's true as-is",
              "createdAt": "2021-01-20T13:40:06Z",
              "updatedAt": "2021-01-20T13:51:52Z"
            }
          ]
        }
      ]
    },
    {
      "number": 204,
      "id": "MDExOlB1bGxSZXF1ZXN0NTU4Mjc0NjQz",
      "title": "Editorial changes due to compilation errors.",
      "url": "https://github.com/tlswg/dtls13-spec/pull/204",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-01-20T14:19:02Z",
      "updatedAt": "2021-01-20T16:33:49Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "c06ca9b497f0a9a53207f14ca01498e4a01c6572",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-34",
      "headRefOid": "c34b0cae0e0d44d4a69fe3d7abe878c9e42153d5",
      "closedAt": "2021-01-20T16:33:47Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 205,
      "id": "MDExOlB1bGxSZXF1ZXN0NTU4MzcyMTEy",
      "title": "Getting draft version -40 ready",
      "url": "https://github.com/tlswg/dtls13-spec/pull/205",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-01-20T16:33:08Z",
      "updatedAt": "2021-01-20T17:20:54Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "c06ca9b497f0a9a53207f14ca01498e4a01c6572",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-35",
      "headRefOid": "a0493d4785ba34bbcf91c69ab7971b9d432a7a1b",
      "closedAt": "2021-01-20T17:20:54Z",
      "mergedAt": "2021-01-20T17:20:54Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "1cd106cb38335b57ff0dee86c4969158255775e3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 206,
      "id": "MDExOlB1bGxSZXF1ZXN0NTU4NDI2NjIw",
      "title": "Update changelog",
      "url": "https://github.com/tlswg/dtls13-spec/pull/206",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-01-20T18:06:47Z",
      "updatedAt": "2021-01-20T18:07:37Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "1cd106cb38335b57ff0dee86c4969158255775e3",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "update_changelog",
      "headRefOid": "42ebb316008d3f88f3efb6f40dc68b10c9f98028",
      "closedAt": "2021-01-20T18:07:37Z",
      "mergedAt": "2021-01-20T18:07:37Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f7bd74953932d2cfced0e6ba060affe60fd6a6a7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 207,
      "id": "MDExOlB1bGxSZXF1ZXN0NTYwNTcyMDk3",
      "title": "rohit.md",
      "url": "https://github.com/tlswg/dtls13-spec/pull/207",
      "state": "OPEN",
      "author": "rohitpc363",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "rtat.org",
      "createdAt": "2021-01-24T09:41:46Z",
      "updatedAt": "2021-01-24T09:41:46Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "4c57adb7e3cf0ccd004c4697c6f5e6ae90602a3d",
      "headRepository": "rohitpc363/dtls13-spec",
      "headRefName": "patch-1",
      "headRefOid": "a59b7a39c8829fa8afacc61e9db7f903992baeb2",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 208,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY4NjMzODk2",
      "title": "nits from AD re-review",
      "url": "https://github.com/tlswg/dtls13-spec/pull/208",
      "state": "MERGED",
      "author": "kaduk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-05T21:55:29Z",
      "updatedAt": "2021-02-06T00:07:58Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "4c57adb7e3cf0ccd004c4697c6f5e6ae90602a3d",
      "headRepository": "kaduk/dtls13-spec",
      "headRefName": "ad-rev",
      "headRefOid": "2e6e551f7de875d7231947a84233eab18a49eed2",
      "closedAt": "2021-02-06T00:07:58Z",
      "mergedAt": "2021-02-06T00:07:58Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "2e6e551f7de875d7231947a84233eab18a49eed2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 209,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY4NjQyNDk3",
      "title": "Add an \"implementation pitfalls\" section",
      "url": "https://github.com/tlswg/dtls13-spec/pull/209",
      "state": "MERGED",
      "author": "kaduk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is a bit of a shotgun-style approach, and I expect that some of the listed items will not need to be listed (if, indeed, any are worth listing).",
      "createdAt": "2021-02-05T22:16:49Z",
      "updatedAt": "2021-02-06T00:11:03Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "4c57adb7e3cf0ccd004c4697c6f5e6ae90602a3d",
      "headRepository": "kaduk/dtls13-spec",
      "headRefName": "pitfalls",
      "headRefOid": "527c3736dc42fea9689ad17c800ab94cbdbb5316",
      "closedAt": "2021-02-06T00:11:03Z",
      "mergedAt": "2021-02-06T00:11:03Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "99763a7a23e2f0a4b4d37759b56340310f624746"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 210,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY4NjQ1NTYx",
      "title": "The anti-replay window is per-epoch",
      "url": "https://github.com/tlswg/dtls13-spec/pull/210",
      "state": "MERGED",
      "author": "kaduk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "It gets reset each time the epoch does.  Don't talk about values as\r\nbeing scoped only per association.",
      "createdAt": "2021-02-05T22:25:34Z",
      "updatedAt": "2021-02-06T00:08:49Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "4c57adb7e3cf0ccd004c4697c6f5e6ae90602a3d",
      "headRepository": "kaduk/dtls13-spec",
      "headRefName": "replay-epoch",
      "headRefOid": "db5668dc344ddccf68a362455b7a3c14cc0fffcc",
      "closedAt": "2021-02-06T00:08:49Z",
      "mergedAt": "2021-02-06T00:08:48Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "195f473fee6a6cf1398ab98302e69059ea6411a1"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 211,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY4NjUwMjc5",
      "title": "ACK as flight scoped implies implicit ACK behavior",
      "url": "https://github.com/tlswg/dtls13-spec/pull/211",
      "state": "MERGED",
      "author": "kaduk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Clarify that being scoped to the current flight goes hand in hand\r\nwith the implicit ACK behavior for an entire flight.",
      "createdAt": "2021-02-05T22:38:33Z",
      "updatedAt": "2021-02-06T00:08:32Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "4c57adb7e3cf0ccd004c4697c6f5e6ae90602a3d",
      "headRepository": "kaduk/dtls13-spec",
      "headRefName": "implicit-ack",
      "headRefOid": "351722a8afb95e8e7fbdb2a4d0eac0fa6e4a96b9",
      "closedAt": "2021-02-06T00:08:32Z",
      "mergedAt": "2021-02-06T00:08:32Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "f402833ec9cba0420e61820a13d79fe6b7cc4e31"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 212,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY4Njg0NjEy",
      "title": "Flesh out the security considerations",
      "url": "https://github.com/tlswg/dtls13-spec/pull/212",
      "state": "MERGED",
      "author": "kaduk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Discuss the properties needed of cookies and some ancillary operational\r\nprocedures, as well as mentioning that the DTLS record replay protection\r\nmechanism and 0-RTT replay protection mechanism play different roles\r\nand cannot substitute for each other.",
      "createdAt": "2021-02-06T00:38:49Z",
      "updatedAt": "2021-02-07T20:02:02Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5951e09fc2375acc4b296f659c6c5b0d6630bf83",
      "headRepository": "kaduk/dtls13-spec",
      "headRefName": "seccons",
      "headRefOid": "e2377d3775e8b4101d2d42ee06ceab07e57b7b64",
      "closedAt": "2021-02-07T20:02:02Z",
      "mergedAt": "2021-02-07T20:02:02Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "e053f1cf1190746eb70632302e805e71a3149b2b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1MDYzMDc4",
          "commit": {
            "abbreviatedOid": "e2377d3"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-07T19:52:58Z",
          "updatedAt": "2021-02-07T20:01:25Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "the remote IP. Not necessarily the local IP.",
              "createdAt": "2021-02-07T19:52:58Z",
              "updatedAt": "2021-02-07T20:01:25Z"
            },
            {
              "originalPosition": 11,
              "body": "be more general.",
              "createdAt": "2021-02-07T19:53:09Z",
              "updatedAt": "2021-02-07T20:01:25Z"
            },
            {
              "originalPosition": 18,
              "body": "fix again",
              "createdAt": "2021-02-07T19:53:21Z",
              "updatedAt": "2021-02-07T20:01:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 213,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY5MDQzMjg4",
      "title": "Clarify downgrade sentinel",
      "url": "https://github.com/tlswg/dtls13-spec/pull/213",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-07T20:22:40Z",
      "updatedAt": "2021-02-07T20:29:04Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "00c72b71db37341be4442d419cda4bb79e7b6348",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "downgrade_sentinels",
      "headRefOid": "08716259f44a253fa00d5e357c4d69220c79eae3",
      "closedAt": "2021-02-07T20:29:04Z",
      "mergedAt": "2021-02-07T20:29:04Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "5cb76c09db351893a2718cdbc2eb5cabd34167fd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1MDY5ODY3",
          "commit": {
            "abbreviatedOid": "8c9a000"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-07T20:26:29Z",
          "updatedAt": "2021-02-07T20:26:33Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n  in Section 4.1.3 of {{RFC8446}} when TLS 1.2 and TLS 1.1 and below are negotiated\r\n```",
              "createdAt": "2021-02-07T20:26:29Z",
              "updatedAt": "2021-02-07T20:26:44Z"
            }
          ]
        }
      ]
    },
    {
      "number": 214,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY5MDQ1MzY4",
      "title": "Changes to dtls12",
      "url": "https://github.com/tlswg/dtls13-spec/pull/214",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-07T20:36:12Z",
      "updatedAt": "2021-02-07T20:38:34Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5cb76c09db351893a2718cdbc2eb5cabd34167fd",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "changes_to_dtls12",
      "headRefOid": "b4f600a8eab7de57a28a06244fa345279dc918f7",
      "closedAt": "2021-02-07T20:38:34Z",
      "mergedAt": "2021-02-07T20:38:34Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "3d8004cf753f9d4e75cc60e6acbdae03d514d7fa"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1MDcwODAw",
          "commit": {
            "abbreviatedOid": "b4f600a"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-07T20:38:23Z",
          "updatedAt": "2021-02-07T20:38:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 215,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY5NjE5OTAy",
      "title": "fix duplicate TLS13 ref",
      "url": "https://github.com/tlswg/dtls13-spec/pull/215",
      "state": "MERGED",
      "author": "kaduk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I added this with naive editing that forgot we use [TLS13] as the tag for RFC 8446.",
      "createdAt": "2021-02-08T16:53:47Z",
      "updatedAt": "2021-02-08T22:51:23Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "3d8004cf753f9d4e75cc60e6acbdae03d514d7fa",
      "headRepository": "kaduk/dtls13-spec",
      "headRefName": "ref",
      "headRefOid": "afc8d3499cbd05740aa28e95d05ff4ae7f131d58",
      "closedAt": "2021-02-08T22:51:23Z",
      "mergedAt": "2021-02-08T22:51:23Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "afc8d3499cbd05740aa28e95d05ff4ae7f131d58"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "This is failing CI because now the 8446 reference is missing. I'll fix it later unless you do.",
          "createdAt": "2021-02-08T18:18:42Z",
          "updatedAt": "2021-02-08T18:18:42Z"
        },
        {
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It appears that I am confused about how the toolchain works and you should probably fix it.  Sorry for the trouble.",
          "createdAt": "2021-02-08T21:45:28Z",
          "updatedAt": "2021-02-08T21:45:28Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 216,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY5ODcxMDA2",
      "title": "Ref",
      "url": "https://github.com/tlswg/dtls13-spec/pull/216",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-08T22:50:11Z",
      "updatedAt": "2021-02-08T22:51:22Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "3d8004cf753f9d4e75cc60e6acbdae03d514d7fa",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "ref",
      "headRefOid": "661635e52f991bdf1ad550995e4e926d426eb65e",
      "closedAt": "2021-02-08T22:51:22Z",
      "mergedAt": "2021-02-08T22:51:22Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "32f5a2a5fc4f68218c621c87eeb302d736da5dc2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 217,
      "id": "MDExOlB1bGxSZXF1ZXN0NTcxNTIwNDA3",
      "title": "Per request, add myself to the acknowledgments",
      "url": "https://github.com/tlswg/dtls13-spec/pull/217",
      "state": "MERGED",
      "author": "kaduk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-11T01:53:57Z",
      "updatedAt": "2021-02-11T03:51:40Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "32f5a2a5fc4f68218c621c87eeb302d736da5dc2",
      "headRepository": "kaduk/dtls13-spec",
      "headRefName": "kaduk",
      "headRefOid": "07e0f3fc31543c4592d95ff1a5b9839eacd1abb7",
      "closedAt": "2021-02-11T03:51:40Z",
      "mergedAt": "2021-02-11T03:51:40Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "3e572147972e9e583c25c7adabcc0cea8682d199"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 218,
      "id": "MDExOlB1bGxSZXF1ZXN0NTcxNTU1MjE2",
      "title": "Change python path",
      "url": "https://github.com/tlswg/dtls13-spec/pull/218",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-11T04:16:23Z",
      "updatedAt": "2021-02-11T04:17:36Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "3e572147972e9e583c25c7adabcc0cea8682d199",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "fix_build",
      "headRefOid": "9d8a05694f7bf1a8eaa94be9787fb47b389c360f",
      "closedAt": "2021-02-11T04:17:36Z",
      "mergedAt": "2021-02-11T04:17:36Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "858c15aa1f3e1a0445f0bac292d23a6c2a2df07e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 219,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAwNDAxMTI3",
      "title": "Error -> fatal",
      "url": "https://github.com/tlswg/dtls13-spec/pull/219",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-03-25T03:41:25Z",
      "updatedAt": "2021-04-06T00:12:40Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "858c15aa1f3e1a0445f0bac292d23a6c2a2df07e",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "scudder_discuss_alert",
      "headRefOid": "1911239363ff3d7be643797475a062bb74a30100",
      "closedAt": "2021-04-06T00:12:40Z",
      "mergedAt": "2021-04-06T00:12:40Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "00f4a233b541d8206a0654b7156014ae21ef48ba"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 220,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA5MTU1NTI1",
      "title": "Addressing review comments by Robert Wilton",
      "url": "https://github.com/tlswg/dtls13-spec/pull/220",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-05T19:39:38Z",
      "updatedAt": "2021-04-06T00:32:33Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "858c15aa1f3e1a0445f0bac292d23a6c2a2df07e",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-34",
      "headRefOid": "8a787347deaefffd36a377588cc436966ef6f58b",
      "closedAt": "2021-04-06T00:32:33Z",
      "mergedAt": "2021-04-06T00:32:33Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "980b8ea52b07aefcdae555017c9f13cb048f63e0"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 221,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA5MTYyODU3",
      "title": "Addressing review comments by John Scudder",
      "url": "https://github.com/tlswg/dtls13-spec/pull/221",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-05T19:53:54Z",
      "updatedAt": "2021-04-06T00:35:50Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "858c15aa1f3e1a0445f0bac292d23a6c2a2df07e",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-36",
      "headRefOid": "20a10e551970fc11c27fa832af1376f8fa0a447f",
      "closedAt": "2021-04-06T00:35:50Z",
      "mergedAt": "2021-04-06T00:35:50Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "91f92f0978c03e0a84ea671df0a0a28ade6931e7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 222,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA5MTY5NDkz",
      "title": "Addressing review comments by  Zaheduzzaman Sarker",
      "url": "https://github.com/tlswg/dtls13-spec/pull/222",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-05T20:05:24Z",
      "updatedAt": "2021-04-06T01:04:15Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "858c15aa1f3e1a0445f0bac292d23a6c2a2df07e",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-37",
      "headRefOid": "9e7814723d8eacec6e162bd8ecf3aee353f0aff3",
      "closedAt": "2021-04-06T01:04:15Z",
      "mergedAt": "2021-04-06T01:04:15Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "9e7814723d8eacec6e162bd8ecf3aee353f0aff3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 223,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA5MTcwNzgx",
      "title": "Use of the term \"Connection ID\"",
      "url": "https://github.com/tlswg/dtls13-spec/pull/223",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Harmonized with the DTLS 1.2 CID draft",
      "createdAt": "2021-04-05T20:07:39Z",
      "updatedAt": "2021-04-06T00:20:03Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "858c15aa1f3e1a0445f0bac292d23a6c2a2df07e",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-38",
      "headRefOid": "b6a300776d9ad2c79d7a38d7241dd9361fc93b4e",
      "closedAt": "2021-04-06T00:20:03Z",
      "mergedAt": "2021-04-06T00:20:03Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "35b49d44ee207ef9687be90109151ac3e7b29d3b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 226,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA5MzYyNjYx",
      "title": "Updates to address Martin Duke's DISCUSS",
      "url": "https://github.com/tlswg/dtls13-spec/pull/226",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Change the default retransmission timer to 1s and\r\n  allow people to do otherwise if they have side knowledge.\r\n\r\n- Cap any given flight to 10 records\r\n\r\n- Don't re-set the timer to the initial value but to 1.5\r\n  times the measured RTT.\r\n\r\n- A bunch more clarity about the reliability algorithms\r\n  and timers (including changing reset to re-arm)",
      "createdAt": "2021-04-06T00:10:15Z",
      "updatedAt": "2021-04-08T20:00:54Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "c91d41b25a64cc955166f2589e6328938aed3d79",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "retransmission",
      "headRefOid": "1285111b9a6b9799355881ffb8d7ea5278ab6574",
      "closedAt": "2021-04-08T20:00:54Z",
      "mergedAt": "2021-04-08T20:00:54Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "1285111b9a6b9799355881ffb8d7ea5278ab6574"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4NTcwNTc3",
          "commit": {
            "abbreviatedOid": "b6ea6da"
          },
          "author": "hanno-arm",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-06T04:50:12Z",
          "updatedAt": "2021-04-06T04:50:12Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "The mailing list discussion recommended a SHOULD NOT, as far as I understand. It's not clear to me how a MUST NOT could be enforced in practice, if the e.g. the certificate chain is very long and the MTU is small.\r\n\r\nThe issue here might be an overloading of the term \"flight\": As I read the paragraph, you use it not in the sense defined (https://www.ietf.org/archive/id/draft-ietf-tls-dtls13-41.html#name-dtls-handshake-flights) but in the sense of the part of the current flight which is currenly attempted to be transmitted. Using this latter definition, a MUST NOT as above could indeed be enforced, but then I think a different term should be used.",
              "createdAt": "2021-04-06T04:50:12Z",
              "updatedAt": "2021-04-08T16:19:14Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4NjI5MDAw",
          "commit": {
            "abbreviatedOid": "b6ea6da"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-06T06:55:34Z",
          "updatedAt": "2021-04-06T06:55:34Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "```suggestion\r\nsimpler \"retransmit everything on timeout\" approach, has not shown\r\n```",
              "createdAt": "2021-04-06T06:55:34Z",
              "updatedAt": "2021-04-08T16:19:14Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4NjMyMTUz",
          "commit": {
            "abbreviatedOid": "b6ea6da"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-06T07:00:01Z",
          "updatedAt": "2021-04-06T07:00:01Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "```suggestion\r\n* Profiles for specific deployment environments, such as in low-power, multi-hop mesh network as used in some Internet of Things (IoT) networks, MAY specify longer timeouts. See {{?I-D.ietf-uta-tls13-iot-profile}} for more information about one such DTLS 1.3 IoT profile.\r\n```",
              "createdAt": "2021-04-06T07:00:01Z",
              "updatedAt": "2021-04-08T16:19:14Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI5NDkzOTE0",
          "commit": {
            "abbreviatedOid": "5e71d4e"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-06T23:55:24Z",
          "updatedAt": "2021-04-06T23:55:25Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "Agreed. Fixed.",
              "createdAt": "2021-04-06T23:55:25Z",
              "updatedAt": "2021-04-08T16:19:14Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMwMTU0OTEz",
          "commit": {
            "abbreviatedOid": "e8c310e"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "IMO this addresses my DISCUSS, though I'd like Lars's opinion as well.\r\n\r\nAlthough ack-induced retransmissions are not formally reducing the send rate, as ekr pointed out the partial ack in itself will usually clear some data, so the added complexity in further limiting the retransmission is probably too much.",
          "createdAt": "2021-04-07T15:29:49Z",
          "updatedAt": "2021-04-07T15:38:39Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "```suggestion\r\nIn settings where there is external information (for instance from an ICE {{?RFC8445}}\r\n```",
              "createdAt": "2021-04-07T15:29:49Z",
              "updatedAt": "2021-04-08T16:19:14Z"
            },
            {
              "originalPosition": 75,
              "body": "```suggestion\r\nNote that because retransmission is for the handshake and not dataflow, the effect on\r\n```",
              "createdAt": "2021-04-07T15:30:31Z",
              "updatedAt": "2021-04-08T16:19:14Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMxMDc2NzUz",
          "commit": {
            "abbreviatedOid": "623d7ff"
          },
          "author": "larseggert",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2021-04-08T07:45:52Z",
          "updatedAt": "2021-04-08T07:57:13Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nUnless implementations have deployment-specific and/or external information about the round trip time, \r\n```",
              "createdAt": "2021-04-08T07:45:52Z",
              "updatedAt": "2021-04-08T16:19:14Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n{{RFC6298}} maximum). Application-specific profiles, MAY \r\n```",
              "createdAt": "2021-04-08T07:46:28Z",
              "updatedAt": "2021-04-08T16:19:14Z"
            },
            {
              "originalPosition": 63,
              "body": "There should probably be some text about how to \"use that to set the retransmit time\", i.e., simply reusing that value is not what TCP does. I think Linux does something like `RTO = max(SRTT + 4 * RTTVAR, 1000ms)`. [QUIC does something similar](https://www.ietf.org/archive/id/draft-ietf-quic-recovery-34.html#section-6.2.1). ",
              "createdAt": "2021-04-08T07:54:25Z",
              "updatedAt": "2021-04-08T16:19:14Z"
            },
            {
              "originalPosition": 70,
              "body": "Why \"approximately\"?",
              "createdAt": "2021-04-08T07:55:23Z",
              "updatedAt": "2021-04-08T16:19:14Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMxNTk1ODk0",
          "commit": {
            "abbreviatedOid": "1285111"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-08T16:19:57Z",
          "updatedAt": "2021-04-08T16:19:58Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Sure. I'll make this 1.5RTT as suggested by Allman and used elsewhere in this doc,",
              "createdAt": "2021-04-08T16:19:58Z",
              "updatedAt": "2021-04-08T16:19:58Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMxNTk2MjA5",
          "commit": {
            "abbreviatedOid": "1285111"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-08T16:20:16Z",
          "updatedAt": "2021-04-08T16:20:16Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "All of these values are approximate because timers are approximate.",
              "createdAt": "2021-04-08T16:20:16Z",
              "updatedAt": "2021-04-08T16:20:16Z"
            }
          ]
        }
      ]
    },
    {
      "number": 227,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA5Mzc5NDQ4",
      "title": "Lars Eggert's comments",
      "url": "https://github.com/tlswg/dtls13-spec/pull/227",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-06T01:08:01Z",
      "updatedAt": "2021-04-12T18:00:28Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5a37267179961a032e9359fdad2b5ddcb726ed13",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "eggert_issues",
      "headRefOid": "9863772b8421552531d8ee142ea6b2d9cc797081",
      "closedAt": "2021-04-12T18:00:28Z",
      "mergedAt": "2021-04-12T18:00:27Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "b232732487d762a4899e8859890c7bfbd4c5e1dc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzODIyOTgw",
          "commit": {
            "abbreviatedOid": "9863772"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-12T18:00:23Z",
          "updatedAt": "2021-04-12T18:00:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 232,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA5MzgyNTI4",
      "title": "Eric Kline editorial. Fixes #228",
      "url": "https://github.com/tlswg/dtls13-spec/pull/232",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-06T01:19:12Z",
      "updatedAt": "2021-04-12T18:00:47Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5a37267179961a032e9359fdad2b5ddcb726ed13",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "kline_comments",
      "headRefOid": "4e06286c6f33b215b4cdcf1c156f79cf490672f6",
      "closedAt": "2021-04-12T18:00:47Z",
      "mergedAt": "2021-04-12T18:00:47Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ef38e19e8b88aaee666e28b3676f9590ae4031d3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzODIzMjY3",
          "commit": {
            "abbreviatedOid": "4e06286"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-12T18:00:43Z",
          "updatedAt": "2021-04-12T18:00:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 233,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA5NTA5Mjg1",
      "title": "Addressing review comments by Bernard Aboba",
      "url": "https://github.com/tlswg/dtls13-spec/pull/233",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-06T06:12:41Z",
      "updatedAt": "2021-04-06T23:50:47Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5a37267179961a032e9359fdad2b5ddcb726ed13",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-39",
      "headRefOid": "8ece1b441318985191ad614cc3db827b9442501b",
      "closedAt": "2021-04-06T23:50:47Z",
      "mergedAt": "2021-04-06T23:50:47Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "8ece1b441318985191ad614cc3db827b9442501b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 234,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA5NTQ0NDU0",
      "title": "Addressing feedback by Francesca Palombini",
      "url": "https://github.com/tlswg/dtls13-spec/pull/234",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-06T06:46:13Z",
      "updatedAt": "2021-04-12T19:41:23Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5a37267179961a032e9359fdad2b5ddcb726ed13",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "hannestschofenig-patch-40",
      "headRefOid": "a3f9d74fad2f9001082be777eaf4f22812764f6f",
      "closedAt": "2021-04-12T19:41:23Z",
      "mergedAt": "2021-04-12T19:41:23Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "a711614ad29112809ce332c7b98107fd11c3ccd8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzODI0MjEx",
          "commit": {
            "abbreviatedOid": "81347d7"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM with some suggested nits",
          "createdAt": "2021-04-12T18:01:51Z",
          "updatedAt": "2021-04-12T18:09:11Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nbased on the encoding format defined in {{TLS13}} and earlier (D)TLS specifications.\r\n```",
              "createdAt": "2021-04-12T18:01:51Z",
              "updatedAt": "2021-04-12T18:16:00Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\ndistinguish a DTLS 1.3 encrypted record from record types used in \r\nprevious DTLS versions and plaintext DTLS 1.3 record types. Hence, the \r\n```",
              "createdAt": "2021-04-12T18:07:43Z",
              "updatedAt": "2021-04-12T18:16:00Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nfrom future allocations by IANA to avoid demultiplexing problems;\r\nsee {{iana-considerations}}.\r\n```\r\n\r\n(The iana-considerations anchor isn't in the doc yet, though)",
              "createdAt": "2021-04-12T18:08:55Z",
              "updatedAt": "2021-04-12T18:16:00Z"
            }
          ]
        }
      ]
    },
    {
      "number": 238,
      "id": "MDExOlB1bGxSZXF1ZXN0NjEwMjU4MzIz",
      "title": "Martin Duke's comments. Fixes #230",
      "url": "https://github.com/tlswg/dtls13-spec/pull/238",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-07T01:13:58Z",
      "updatedAt": "2021-04-12T18:15:22Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "c91d41b25a64cc955166f2589e6328938aed3d79",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "duke_comments",
      "headRefOid": "1f15d245aa2984a5e6b7c311270be085eabf804a",
      "closedAt": "2021-04-12T18:15:21Z",
      "mergedAt": "2021-04-12T18:15:21Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "0f8896e29fddfa14c621329be70d3c4dbce90d96"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzODMwNDYw",
          "commit": {
            "abbreviatedOid": "728f113"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-12T18:09:42Z",
          "updatedAt": "2021-04-12T18:11:00Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nThe reader is assumed to be familiar with {{TLS13}}.\r\n```",
              "createdAt": "2021-04-12T18:09:42Z",
              "updatedAt": "2021-04-12T18:15:18Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nAs in TLS 1.3, the HelloRetryRequest has the same format as a ServerHello\r\nmessage, but for convenience we use the term HelloRetryRequest throughout\r\n```",
              "createdAt": "2021-04-12T18:10:11Z",
              "updatedAt": "2021-04-12T18:15:18Z"
            }
          ]
        }
      ]
    },
    {
      "number": 239,
      "id": "MDExOlB1bGxSZXF1ZXN0NjEyMDIzNDUx",
      "title": "Clients SHOULD offer a connection ID",
      "url": "https://github.com/tlswg/dtls13-spec/pull/239",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-08T23:12:36Z",
      "updatedAt": "2021-04-22T16:43:56Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "ad1fd96a975bae620a4271e9252bd0e6f1951762",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "offer_cid",
      "headRefOid": "5f41d9b5a4ce5065cf90e3feb6300f55ce3f5ad3",
      "closedAt": "2021-04-22T16:43:56Z",
      "mergedAt": "2021-04-22T16:43:56Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "e0fe122c88b8369bb3bddd0e6cf19595e2fa040c"
      },
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinduke ",
          "createdAt": "2021-04-08T23:12:52Z",
          "updatedAt": "2021-04-08T23:12:52Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "The text is good for me. ",
          "createdAt": "2021-04-13T08:51:53Z",
          "updatedAt": "2021-04-13T08:51:53Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMxOTA4OTMx",
          "commit": {
            "abbreviatedOid": "5f41d9b"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This definitely helps, thanks. It doesn't completely eliminate the possibility of QUIC-LB catastrophic failure, but it makes things way better.",
          "createdAt": "2021-04-08T23:14:41Z",
          "updatedAt": "2021-04-08T23:14:41Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMzODMxODU4",
          "commit": {
            "abbreviatedOid": "5f41d9b"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM, but we should confirm on the list.",
          "createdAt": "2021-04-12T18:11:28Z",
          "updatedAt": "2021-04-12T18:11:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 240,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE0NjE0ODY4",
      "title": "Vyncke comments. Fixes #225",
      "url": "https://github.com/tlswg/dtls13-spec/pull/240",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-13T16:49:32Z",
      "updatedAt": "2021-04-13T16:52:29Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "a711614ad29112809ce332c7b98107fd11c3ccd8",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "issue225_vyncke_comments",
      "headRefOid": "40dcb7d4b0023aea58cc35c7dd0af64a07c12768",
      "closedAt": "2021-04-13T16:52:29Z",
      "mergedAt": "2021-04-13T16:52:29Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e30625331a833e1675f8dfc17f45cb649a24b0c6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM0ODIwNDM5",
          "commit": {
            "abbreviatedOid": "40dcb7d"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-13T16:52:22Z",
          "updatedAt": "2021-04-13T16:52:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 241,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE0NjE2MzQz",
      "title": "Ack isn't really a flight. Fixes #237",
      "url": "https://github.com/tlswg/dtls13-spec/pull/241",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-13T16:51:55Z",
      "updatedAt": "2021-04-13T16:52:52Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "a711614ad29112809ce332c7b98107fd11c3ccd8",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "issue237_acks_flights",
      "headRefOid": "277c3f4fa3a762047faaa0f39175fc08a11f34f9",
      "closedAt": "2021-04-13T16:52:52Z",
      "mergedAt": "2021-04-13T16:52:52Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "b477bda92682bef4bfdc8198d15672b643ce9e85"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM0ODIwODE1",
          "commit": {
            "abbreviatedOid": "277c3f4"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-13T16:52:47Z",
          "updatedAt": "2021-04-13T16:52:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 242,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE0NjE4MDkw",
      "title": "Clarify invalid records. Fixes #224",
      "url": "https://github.com/tlswg/dtls13-spec/pull/242",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-13T16:54:45Z",
      "updatedAt": "2021-04-13T17:01:05Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "b477bda92682bef4bfdc8198d15672b643ce9e85",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "issue224_invalid_records",
      "headRefOid": "de881dcead362216eaf7a07804c57e1ffacd4b35",
      "closedAt": "2021-04-13T17:01:05Z",
      "mergedAt": "2021-04-13T17:01:05Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e44592676917bf42511aceb7dc320c32d75505dc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM0ODI4NzYw",
          "commit": {
            "abbreviatedOid": "de881dc"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-04-13T17:01:01Z",
          "updatedAt": "2021-04-13T17:01:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 244,
      "id": "MDExOlB1bGxSZXF1ZXN0NjI4Mjk4ODg0",
      "title": "EE etc. has to be in a separate record. Fix up all the record numbers",
      "url": "https://github.com/tlswg/dtls13-spec/pull/244",
      "state": "MERGED",
      "author": "ekr",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-05-01T01:19:08Z",
      "updatedAt": "2021-05-01T01:26:39Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "d1f2f97066ce4449bb71b38790f3c79be54502c0",
      "headRepository": "ekr/dtls13-spec",
      "headRefName": "fix_diagram",
      "headRefOid": "75d212dac3bcf61a7898f5e8261d95ecc50d26eb",
      "closedAt": "2021-05-01T01:26:39Z",
      "mergedAt": "2021-05-01T01:26:39Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "5085028ad466cf232dd4721422e7e26c23c84acb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ5NzAyODUw",
          "commit": {
            "abbreviatedOid": "86939fb"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "How did we manage to go so far without noticing this!",
          "createdAt": "2021-05-01T01:22:11Z",
          "updatedAt": "2021-05-01T01:22:45Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\ndiagram, so \"Record 1\" is really \"Epoch 2, Record 0, etc.\".\r\n```",
              "createdAt": "2021-05-01T01:22:11Z",
              "updatedAt": "2021-05-01T01:22:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 245,
      "id": "MDExOlB1bGxSZXF1ZXN0NjI4MzAzNzk1",
      "title": "Nits",
      "url": "https://github.com/tlswg/dtls13-spec/pull/245",
      "state": "MERGED",
      "author": "kaduk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The middle two commits should be looked at individually.\r\nOptional-ACK can be used (as in Figure 12) to short-circuit the retransmit timer in addition to selective acknowledgment.",
      "createdAt": "2021-05-01T01:54:56Z",
      "updatedAt": "2021-05-01T02:10:32Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "5085028ad466cf232dd4721422e7e26c23c84acb",
      "headRepository": "kaduk/dtls13-spec",
      "headRefName": "nits",
      "headRefOid": "ed4a7a8d00251b5659c43ea1b41b9ef42921ee19",
      "closedAt": "2021-05-01T02:10:32Z",
      "mergedAt": "2021-05-01T02:10:32Z",
      "mergedBy": "ekr",
      "mergeCommit": {
        "oid": "ed4a7a8d00251b5659c43ea1b41b9ef42921ee19"
      },
      "comments": [
        {
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "body": "(Looks like I still don't understand the kramdown reference behavior.)",
          "createdAt": "2021-05-01T01:56:49Z",
          "updatedAt": "2021-05-01T01:56:49Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 246,
      "id": "MDExOlB1bGxSZXF1ZXN0NjQ2Mzg4NjY1",
      "title": "Update Martin's email address",
      "url": "https://github.com/tlswg/dtls13-spec/pull/246",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-05-18T05:00:12Z",
      "updatedAt": "2021-05-24T15:47:37Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "bbe54e633965b8394f523dd42d980a8e1997e1cf",
      "headRepository": "martinthomson/dtls13-spec",
      "headRefName": "patch-3",
      "headRefOid": "e71c2ee09d5a7896478d9321377fa1a8c63ca4f7",
      "closedAt": "2021-05-24T15:47:37Z",
      "mergedAt": "2021-05-24T15:47:37Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "1edd82ec3ec1fb49df62c45728e1ef3f4d34fef7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 250,
      "id": "MDExOlB1bGxSZXF1ZXN0NjkwMjYxOTM1",
      "title": "More epochs per connection (uint32 or uint64)",
      "url": "https://github.com/tlswg/dtls13-spec/pull/250",
      "state": "OPEN",
      "author": "emanjon",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR addresses #249.\r\n\r\nLarger epoch (e.g. 32-bit) seems quite straightforward.\r\n\r\n- It changes the DTLSPlaintext structure which is not sent on the wire.\r\n\r\n- It changes the RecordNumber structure used in the ACK message. This should likely contain the full epoch\r\n\r\n- It changes the 64-bit \"record_sequence_number\". This PR suggest the 64 low order bits of the RecordNumber.\r\nI think it could also be set to 0x0000 || sequence_number. I don't think epoch is needed here as the keys are\r\ndifferent.\r\n\r\nNote that a 32-bit epoch still limits the number of packets in a AES-GCM connection compared to what is allowed in DTLS 1.2.\r\n2^56.6 compared to 2^64. 2^56.5 is likely enough for all use cases but epoch could also be made even larger 2^48 or 2^64.",
      "createdAt": "2021-07-14T22:21:22Z",
      "updatedAt": "2021-08-14T20:53:20Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "1edd82ec3ec1fb49df62c45728e1ef3f4d34fef7",
      "headRepository": "emanjon/dtls13-spec",
      "headRefName": "patch-5",
      "headRefOid": "d9a40d5dd170074ba01cfe1dc54849a26d0a3c7d",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEyMTMzMTAz",
          "commit": {
            "abbreviatedOid": "d9a40d5"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-21T19:52:02Z",
          "updatedAt": "2021-07-21T19:53:32Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Can we actually change the DTLSPlaintext format like this (recalling that it is used for the initial ClientHello)?\r\n\r\nI would mostly have expected to leave DTLSPlaintext unchanged since you are only going to be using it with epoch values less than four.",
              "createdAt": "2021-07-21T19:52:02Z",
              "updatedAt": "2021-07-21T19:53:32Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMwMTIyMDgx",
          "commit": {
            "abbreviatedOid": "d9a40d5"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-14T17:32:49Z",
          "updatedAt": "2021-08-14T17:32:50Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "> Can we actually change the DTLSPlaintext format like this (recalling that it is used for the initial ClientHello)?\r\n\r\n@kaduk can you elaborate on the problem here? I'm not seeing the issue. ",
              "createdAt": "2021-08-14T17:32:49Z",
              "updatedAt": "2021-08-14T17:32:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMwMTIyMzgy",
          "commit": {
            "abbreviatedOid": "d9a40d5"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-14T17:38:16Z",
          "updatedAt": "2021-08-14T17:38:17Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Can't we just keep this as uint16 and just call it epoch % 2^16?",
              "createdAt": "2021-08-14T17:38:17Z",
              "updatedAt": "2021-08-14T17:38:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMwMTIyNTAx",
          "commit": {
            "abbreviatedOid": "d9a40d5"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-14T17:40:04Z",
          "updatedAt": "2021-08-14T17:40:04Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "That seems like the simplest solution here, yeah. We can just track epoch as a uint64 internally, but only take the LSB in the plaintext here. ",
              "createdAt": "2021-08-14T17:40:04Z",
              "updatedAt": "2021-08-14T17:40:04Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMwMTIyODg5",
          "commit": {
            "abbreviatedOid": "d9a40d5"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-14T17:47:13Z",
          "updatedAt": "2021-08-14T17:47:14Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "(@ekr reminded me offline that this is a shared structure with DTLS 1.2, so not changing it is best.)",
              "createdAt": "2021-08-14T17:47:13Z",
              "updatedAt": "2021-08-14T17:47:14Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMwMTMyMDU3",
          "commit": {
            "abbreviatedOid": "d9a40d5"
          },
          "author": "kaduk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-14T20:53:20Z",
          "updatedAt": "2021-08-14T20:53:20Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "> (@ekr reminded me offline that this is a shared structure with DTLS 1.2, so not changing it is best.)\r\n\r\nRight, that is the problem I was thinking of.\r\n\r\nI think `epoch % 2^16` should work, especially since we don't actually use this structure with large epochs (we've moved to DTLSCiphertext by then).",
              "createdAt": "2021-08-14T20:53:20Z",
              "updatedAt": "2021-08-14T20:53:20Z"
            }
          ]
        }
      ]
    },
    {
      "number": 252,
      "id": "MDExOlB1bGxSZXF1ZXN0NjkxMzUzNTc1",
      "title": "More epochs per connection (epoch wrap)",
      "url": "https://github.com/tlswg/dtls13-spec/pull/252",
      "state": "OPEN",
      "author": "emanjon",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Alternative solution to address issue #249 \r\n\r\nThis may be a simpler solution unless there are any security implications. DTLS 1.0 allowed epoch wrapping. DTLS 1.2 forbid epoch wrapping. I don't know the history behind this or if the reasons for forbidding epoch wrapping in DTLS 1.2 still apply to DTLS 1.3",
      "createdAt": "2021-07-16T10:00:01Z",
      "updatedAt": "2021-07-16T11:53:41Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "1edd82ec3ec1fb49df62c45728e1ef3f4d34fef7",
      "headRepository": "emanjon/dtls13-spec",
      "headRefName": "patch-6",
      "headRefOid": "e6af982136ede12668f6effccf5f2aecbe2b264d",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "NONE",
          "body": "This change should not be accepted until one have decided if #253 makes sense, because then non-wrapping epoch would avoid creating a risk with the key exporter. ",
          "createdAt": "2021-07-16T11:53:41Z",
          "updatedAt": "2021-07-16T11:53:41Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 255,
      "id": "MDExOlB1bGxSZXF1ZXN0NzEyODE4Njgy",
      "title": "Increase effective epoch width to 64 bits, keeping the serialized representation 16 bits wide",
      "url": "https://github.com/tlswg/dtls13-spec/pull/255",
      "state": "OPEN",
      "author": "chris-wood",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Yet another alternative to #249. \r\n\r\ncc @emanjon @hannestschofenig ",
      "createdAt": "2021-08-14T18:04:51Z",
      "updatedAt": "2021-08-14T22:53:25Z",
      "baseRepository": "tlswg/dtls13-spec",
      "baseRefName": "master",
      "baseRefOid": "1edd82ec3ec1fb49df62c45728e1ef3f4d34fef7",
      "headRepository": "tlswg/dtls13-spec",
      "headRefName": "caw/epoch-to-64bits",
      "headRefOid": "91a9879f9158734e518010374d8591ab25301c10",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "body": "This seems like the right change (modulo analysis) but I think the use of the term \"effective\" is a mistake. We already carry a truncated epoch in DTLSCiphertext, so I think all that's needed is to say that the epoch field in DTLSPlaintext is also truncated but that the actual epoch is 64 bits.",
          "createdAt": "2021-08-14T22:39:02Z",
          "updatedAt": "2021-08-14T22:39:02Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> so I think all that's needed is to say that the epoch field in DTLSPlaintext is also truncated but that the actual epoch is 64 bits.\r\n\r\nDropped \"effective,\" so the current PR should reflect this. \ud83d\udc4d ",
          "createdAt": "2021-08-14T22:49:30Z",
          "updatedAt": "2021-08-14T22:49:30Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMwMTM2Njgy",
          "commit": {
            "abbreviatedOid": "70beda1"
          },
          "author": "ekr",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This looks right, again modulo analysis.",
          "createdAt": "2021-08-14T22:49:35Z",
          "updatedAt": "2021-08-14T22:50:43Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n   from the connection epoch, which is an 8 octet counter\r\n```",
              "createdAt": "2021-08-14T22:49:35Z",
              "updatedAt": "2021-08-14T22:50:43Z"
            },
            {
              "originalPosition": 27,
              "body": "I think you can drop ```legacy``` here. We don't use it for DTLSCiphertext",
              "createdAt": "2021-08-14T22:50:21Z",
              "updatedAt": "2021-08-14T22:50:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMwMTM2ODEx",
          "commit": {
            "abbreviatedOid": "7edb30b"
          },
          "author": "chris-wood",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-14T22:53:21Z",
          "updatedAt": "2021-08-14T22:53:25Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Works for me!",
              "createdAt": "2021-08-14T22:53:21Z",
              "updatedAt": "2021-08-14T22:53:25Z"
            }
          ]
        }
      ]
    }
  ]
}